[["file:///home/jfvilladiego/proyectos_laravel/cotizaciones_vcb_laravel/vendor/psy/psysh/src/Shell.php",{"_uri":"file:///home/jfvilladiego/proyectos_laravel/cotizaciones_vcb_laravel/vendor/psy/psysh/src/Shell.php","_root":{"kind":4096,"name":"file:///home/jfvilladiego/proyectos_laravel/cotizaciones_vcb_laravel/vendor/psy/psysh/src/Shell.php","location":{"uriHash":337609806,"range":{"start":{"line":0,"character":0},"end":{"line":1340,"character":0}}},"children":[{"kind":512,"name":"Psy","location":{"uriHash":337609806,"range":{"start":{"line":11,"character":0},"end":{"line":11,"character":14}}}},{"kind":1,"name":"NoReturnValue","location":{"uriHash":337609806,"range":{"start":{"line":13,"character":4},"end":{"line":13,"character":33}}},"modifiers":4096,"associated":[{"kind":1,"name":"Psy\\CodeCleaner\\NoReturnValue"}]},{"kind":1,"name":"BreakException","location":{"uriHash":337609806,"range":{"start":{"line":14,"character":4},"end":{"line":14,"character":32}}},"modifiers":4096,"associated":[{"kind":1,"name":"Psy\\Exception\\BreakException"}]},{"kind":1,"name":"ErrorException","location":{"uriHash":337609806,"range":{"start":{"line":15,"character":4},"end":{"line":15,"character":32}}},"modifiers":4096,"associated":[{"kind":1,"name":"Psy\\Exception\\ErrorException"}]},{"kind":1,"name":"PsyException","location":{"uriHash":337609806,"range":{"start":{"line":16,"character":31},"end":{"line":16,"character":43}}},"modifiers":4096,"associated":[{"kind":1,"name":"Psy\\Exception\\Exception"}]},{"kind":1,"name":"ThrowUpException","location":{"uriHash":337609806,"range":{"start":{"line":17,"character":4},"end":{"line":17,"character":34}}},"modifiers":4096,"associated":[{"kind":1,"name":"Psy\\Exception\\ThrowUpException"}]},{"kind":1,"name":"TypeErrorException","location":{"uriHash":337609806,"range":{"start":{"line":18,"character":4},"end":{"line":18,"character":36}}},"modifiers":4096,"associated":[{"kind":1,"name":"Psy\\Exception\\TypeErrorException"}]},{"kind":1,"name":"ProcessForker","location":{"uriHash":337609806,"range":{"start":{"line":19,"character":4},"end":{"line":19,"character":35}}},"modifiers":4096,"associated":[{"kind":1,"name":"Psy\\ExecutionLoop\\ProcessForker"}]},{"kind":1,"name":"RunkitReloader","location":{"uriHash":337609806,"range":{"start":{"line":20,"character":4},"end":{"line":20,"character":36}}},"modifiers":4096,"associated":[{"kind":1,"name":"Psy\\ExecutionLoop\\RunkitReloader"}]},{"kind":1,"name":"ShellInput","location":{"uriHash":337609806,"range":{"start":{"line":21,"character":4},"end":{"line":21,"character":24}}},"modifiers":4096,"associated":[{"kind":1,"name":"Psy\\Input\\ShellInput"}]},{"kind":1,"name":"SilentInput","location":{"uriHash":337609806,"range":{"start":{"line":22,"character":4},"end":{"line":22,"character":25}}},"modifiers":4096,"associated":[{"kind":1,"name":"Psy\\Input\\SilentInput"}]},{"kind":1,"name":"ShellOutput","location":{"uriHash":337609806,"range":{"start":{"line":23,"character":4},"end":{"line":23,"character":26}}},"modifiers":4096,"associated":[{"kind":1,"name":"Psy\\Output\\ShellOutput"}]},{"kind":1,"name":"Matcher","location":{"uriHash":337609806,"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":29}}},"modifiers":4096,"associated":[{"kind":1,"name":"Psy\\TabCompletion\\Matcher"}]},{"kind":1,"name":"PresenterAware","location":{"uriHash":337609806,"range":{"start":{"line":25,"character":4},"end":{"line":25,"character":32}}},"modifiers":4096,"associated":[{"kind":1,"name":"Psy\\VarDumper\\PresenterAware"}]},{"kind":1,"name":"Application","location":{"uriHash":337609806,"range":{"start":{"line":26,"character":4},"end":{"line":26,"character":41}}},"modifiers":4096,"associated":[{"kind":1,"name":"Symfony\\Component\\Console\\Application"}]},{"kind":1,"name":"BaseCommand","location":{"uriHash":337609806,"range":{"start":{"line":27,"character":49},"end":{"line":27,"character":60}}},"modifiers":4096,"associated":[{"kind":1,"name":"Symfony\\Component\\Console\\Command\\Command"}]},{"kind":1,"name":"OutputFormatter","location":{"uriHash":337609806,"range":{"start":{"line":28,"character":4},"end":{"line":28,"character":55}}},"modifiers":4096,"associated":[{"kind":1,"name":"Symfony\\Component\\Console\\Formatter\\OutputFormatter"}]},{"kind":1,"name":"ArgvInput","location":{"uriHash":337609806,"range":{"start":{"line":29,"character":4},"end":{"line":29,"character":45}}},"modifiers":4096,"associated":[{"kind":1,"name":"Symfony\\Component\\Console\\Input\\ArgvInput"}]},{"kind":1,"name":"InputArgument","location":{"uriHash":337609806,"range":{"start":{"line":30,"character":4},"end":{"line":30,"character":49}}},"modifiers":4096,"associated":[{"kind":1,"name":"Symfony\\Component\\Console\\Input\\InputArgument"}]},{"kind":1,"name":"InputDefinition","location":{"uriHash":337609806,"range":{"start":{"line":31,"character":4},"end":{"line":31,"character":51}}},"modifiers":4096,"associated":[{"kind":1,"name":"Symfony\\Component\\Console\\Input\\InputDefinition"}]},{"kind":1,"name":"InputInterface","location":{"uriHash":337609806,"range":{"start":{"line":32,"character":4},"end":{"line":32,"character":50}}},"modifiers":4096,"associated":[{"kind":1,"name":"Symfony\\Component\\Console\\Input\\InputInterface"}]},{"kind":1,"name":"InputOption","location":{"uriHash":337609806,"range":{"start":{"line":33,"character":4},"end":{"line":33,"character":47}}},"modifiers":4096,"associated":[{"kind":1,"name":"Symfony\\Component\\Console\\Input\\InputOption"}]},{"kind":1,"name":"StringInput","location":{"uriHash":337609806,"range":{"start":{"line":34,"character":4},"end":{"line":34,"character":47}}},"modifiers":4096,"associated":[{"kind":1,"name":"Symfony\\Component\\Console\\Input\\StringInput"}]},{"kind":1,"name":"OutputInterface","location":{"uriHash":337609806,"range":{"start":{"line":35,"character":4},"end":{"line":35,"character":52}}},"modifiers":4096,"associated":[{"kind":1,"name":"Symfony\\Component\\Console\\Output\\OutputInterface"}]},{"kind":1,"name":"Psy\\Shell","location":{"uriHash":337609806,"range":{"start":{"line":47,"character":0},"end":{"line":1339,"character":1}}},"children":[{"kind":1024,"name":"VERSION","location":{"uriHash":337609806,"range":{"start":{"line":49,"character":10},"end":{"line":49,"character":28}}},"modifiers":33,"value":"'v0.9.9'","scope":"Psy\\Shell"},{"kind":1024,"name":"PROMPT","location":{"uriHash":337609806,"range":{"start":{"line":51,"character":10},"end":{"line":51,"character":30}}},"modifiers":33,"value":"'>>> '","scope":"Psy\\Shell"},{"kind":1024,"name":"BUFF_PROMPT","location":{"uriHash":337609806,"range":{"start":{"line":52,"character":10},"end":{"line":52,"character":30}}},"modifiers":33,"value":"'... '","scope":"Psy\\Shell"},{"kind":1024,"name":"REPLAY","location":{"uriHash":337609806,"range":{"start":{"line":53,"character":10},"end":{"line":53,"character":30}}},"modifiers":33,"value":"'--> '","scope":"Psy\\Shell"},{"kind":1024,"name":"RETVAL","location":{"uriHash":337609806,"range":{"start":{"line":54,"character":10},"end":{"line":54,"character":29}}},"modifiers":33,"value":"'=> '","scope":"Psy\\Shell"},{"kind":16,"name":"$config","location":{"uriHash":337609806,"range":{"start":{"line":56,"character":12},"end":{"line":56,"character":19}}},"modifiers":4,"scope":"Psy\\Shell"},{"kind":16,"name":"$cleaner","location":{"uriHash":337609806,"range":{"start":{"line":57,"character":12},"end":{"line":57,"character":20}}},"modifiers":4,"scope":"Psy\\Shell"},{"kind":16,"name":"$output","location":{"uriHash":337609806,"range":{"start":{"line":58,"character":12},"end":{"line":58,"character":19}}},"modifiers":4,"scope":"Psy\\Shell"},{"kind":16,"name":"$readline","location":{"uriHash":337609806,"range":{"start":{"line":59,"character":12},"end":{"line":59,"character":21}}},"modifiers":4,"scope":"Psy\\Shell"},{"kind":16,"name":"$inputBuffer","location":{"uriHash":337609806,"range":{"start":{"line":60,"character":12},"end":{"line":60,"character":24}}},"modifiers":4,"scope":"Psy\\Shell"},{"kind":16,"name":"$code","location":{"uriHash":337609806,"range":{"start":{"line":61,"character":12},"end":{"line":61,"character":17}}},"modifiers":4,"scope":"Psy\\Shell"},{"kind":16,"name":"$codeBuffer","location":{"uriHash":337609806,"range":{"start":{"line":62,"character":12},"end":{"line":62,"character":23}}},"modifiers":4,"scope":"Psy\\Shell"},{"kind":16,"name":"$codeBufferOpen","location":{"uriHash":337609806,"range":{"start":{"line":63,"character":12},"end":{"line":63,"character":27}}},"modifiers":4,"scope":"Psy\\Shell"},{"kind":16,"name":"$codeStack","location":{"uriHash":337609806,"range":{"start":{"line":64,"character":12},"end":{"line":64,"character":22}}},"modifiers":4,"scope":"Psy\\Shell"},{"kind":16,"name":"$stdoutBuffer","location":{"uriHash":337609806,"range":{"start":{"line":65,"character":12},"end":{"line":65,"character":25}}},"modifiers":4,"scope":"Psy\\Shell"},{"kind":16,"name":"$context","location":{"uriHash":337609806,"range":{"start":{"line":66,"character":12},"end":{"line":66,"character":20}}},"modifiers":4,"scope":"Psy\\Shell"},{"kind":16,"name":"$includes","location":{"uriHash":337609806,"range":{"start":{"line":67,"character":12},"end":{"line":67,"character":21}}},"modifiers":4,"scope":"Psy\\Shell"},{"kind":16,"name":"$loop","location":{"uriHash":337609806,"range":{"start":{"line":68,"character":12},"end":{"line":68,"character":17}}},"modifiers":4,"scope":"Psy\\Shell"},{"kind":16,"name":"$outputWantsNewline","location":{"uriHash":337609806,"range":{"start":{"line":69,"character":12},"end":{"line":69,"character":39}}},"value":"","modifiers":4,"scope":"Psy\\Shell"},{"kind":16,"name":"$prompt","location":{"uriHash":337609806,"range":{"start":{"line":70,"character":12},"end":{"line":70,"character":19}}},"modifiers":4,"scope":"Psy\\Shell"},{"kind":16,"name":"$loopListeners","location":{"uriHash":337609806,"range":{"start":{"line":71,"character":12},"end":{"line":71,"character":26}}},"modifiers":4,"scope":"Psy\\Shell"},{"kind":16,"name":"$autoCompleter","location":{"uriHash":337609806,"range":{"start":{"line":72,"character":12},"end":{"line":72,"character":26}}},"modifiers":4,"scope":"Psy\\Shell"},{"kind":16,"name":"$matchers","location":{"uriHash":337609806,"range":{"start":{"line":73,"character":12},"end":{"line":73,"character":26}}},"value":"","modifiers":4,"scope":"Psy\\Shell"},{"kind":16,"name":"$commandsMatcher","location":{"uriHash":337609806,"range":{"start":{"line":74,"character":12},"end":{"line":74,"character":28}}},"modifiers":4,"scope":"Psy\\Shell"},{"kind":16,"name":"$lastExecSuccess","location":{"uriHash":337609806,"range":{"start":{"line":75,"character":12},"end":{"line":75,"character":35}}},"value":"","modifiers":4,"scope":"Psy\\Shell"},{"kind":32,"name":"__construct","location":{"uriHash":337609806,"range":{"start":{"line":82,"character":4},"end":{"line":101,"character":5}}},"doc":{"description":"Create a new Psy Shell.","type":""},"modifiers":1,"type":"","children":[{"kind":128,"name":"$config","location":{"uriHash":337609806,"range":{"start":{"line":82,"character":32},"end":{"line":82,"character":60}}},"type":"Psy\\Configuration","doc":{"description":"(default: null)","type":"Psy\\Configuration"},"value":"null","scope":"__construct"}],"scope":"Psy\\Shell"},{"kind":32,"name":"isIncluded","location":{"uriHash":337609806,"range":{"start":{"line":109,"character":4},"end":{"line":113,"character":5}}},"doc":{"description":"Check whether the first thing in a backtrace is an include call.\n\nThis is used by the psysh bin to decide whether to start a shell on boot,\nor to simply autoload the library.","type":""},"modifiers":33,"type":"","children":[{"kind":128,"name":"$trace","location":{"uriHash":337609806,"range":{"start":{"line":109,"character":38},"end":{"line":109,"character":50}}},"type":"array","scope":"isIncluded"}],"scope":"Psy\\Shell"},{"kind":32,"name":"debug","location":{"uriHash":337609806,"range":{"start":{"line":126,"character":4},"end":{"line":129,"character":5}}},"doc":{"description":"Invoke a Psy Shell from the current context.","type":"array"},"modifiers":33,"type":"","children":[{"kind":128,"name":"$vars","location":{"uriHash":337609806,"range":{"start":{"line":126,"character":33},"end":{"line":126,"character":49}}},"type":"array","doc":{"description":"Scope variables from the calling context (default: array())","type":"array"},"value":"[]","scope":"debug"},{"kind":128,"name":"$bindTo","location":{"uriHash":337609806,"range":{"start":{"line":126,"character":51},"end":{"line":126,"character":65}}},"doc":{"description":"Bound object ($this) or class (self) value for the shell\n","type":"object|string"},"value":"null","scope":"debug"}],"scope":"Psy\\Shell"},{"kind":32,"name":"add","location":{"uriHash":337609806,"range":{"start":{"line":140,"character":4},"end":{"line":157,"character":5}}},"doc":{"description":"Adds a command object.\n\n{@inheritdoc}","type":"Symfony\\Component\\Console\\Command\\Command"},"modifiers":1,"type":"","children":[{"kind":128,"name":"$command","location":{"uriHash":337609806,"range":{"start":{"line":140,"character":24},"end":{"line":140,"character":44}}},"type":"Symfony\\Component\\Console\\Command\\Command","doc":{"description":"A Symfony Console Command object\n","type":"Symfony\\Component\\Console\\Command\\Command"},"scope":"add"}],"scope":"Psy\\Shell"},{"kind":32,"name":"getDefaultInputDefinition","location":{"uriHash":337609806,"range":{"start":{"line":164,"character":4},"end":{"line":170,"character":5}}},"doc":{"description":"Gets the default input definition.","type":"Symfony\\Component\\Console\\Input\\InputDefinition"},"modifiers":2,"type":"","children":[],"scope":"Psy\\Shell"},{"kind":32,"name":"getDefaultCommands","location":{"uriHash":337609806,"range":{"start":{"line":177,"character":4},"end":{"line":204,"character":5}}},"doc":{"description":"Gets the default commands that should always be available.","type":"array"},"modifiers":2,"type":"","children":[],"scope":"Psy\\Shell"},{"kind":32,"name":"getDefaultMatchers","location":{"uriHash":337609806,"range":{"start":{"line":209,"character":4},"end":{"line":230,"character":5}}},"doc":{"description":"","type":"array"},"modifiers":2,"type":"","children":[],"scope":"Psy\\Shell"},{"kind":32,"name":"getTabCompletionMatchers","location":{"uriHash":337609806,"range":{"start":{"line":235,"character":4},"end":{"line":238,"character":5}}},"modifiers":2,"type":"","children":[],"scope":"Psy\\Shell"},{"kind":32,"name":"getDefaultLoopListeners","location":{"uriHash":337609806,"range":{"start":{"line":245,"character":4},"end":{"line":258,"character":5}}},"doc":{"description":"Gets the default command loop listeners.","type":"array"},"modifiers":2,"type":"","children":[],"scope":"Psy\\Shell"},{"kind":32,"name":"addMatchers","location":{"uriHash":337609806,"range":{"start":{"line":265,"character":4},"end":{"line":272,"character":5}}},"doc":{"description":"Add tab completion matchers.","type":""},"modifiers":1,"type":"","children":[{"kind":128,"name":"$matchers","location":{"uriHash":337609806,"range":{"start":{"line":265,"character":32},"end":{"line":265,"character":47}}},"type":"array","doc":{"description":"","type":"array"},"scope":"addMatchers"}],"scope":"Psy\\Shell"},{"kind":32,"name":"addTabCompletionMatchers","location":{"uriHash":337609806,"range":{"start":{"line":279,"character":4},"end":{"line":282,"character":5}}},"doc":{"description":"","type":""},"modifiers":1,"type":"","children":[{"kind":128,"name":"$matchers","location":{"uriHash":337609806,"range":{"start":{"line":279,"character":45},"end":{"line":279,"character":60}}},"type":"array","doc":{"description":"","type":"array"},"scope":"addTabCompletionMatchers"}],"scope":"Psy\\Shell"},{"kind":32,"name":"setOutput","location":{"uriHash":337609806,"range":{"start":{"line":289,"character":4},"end":{"line":292,"character":5}}},"doc":{"description":"Set the Shell output.","type":""},"modifiers":1,"type":"","children":[{"kind":128,"name":"$output","location":{"uriHash":337609806,"range":{"start":{"line":289,"character":30},"end":{"line":289,"character":53}}},"type":"Symfony\\Component\\Console\\Output\\OutputInterface","doc":{"description":"","type":"Symfony\\Component\\Console\\Output\\OutputInterface"},"scope":"setOutput"}],"scope":"Psy\\Shell"},{"kind":32,"name":"run","location":{"uriHash":337609806,"range":{"start":{"line":302,"character":4},"end":{"line":321,"character":5}}},"doc":{"description":"Runs the current application.","type":"int"},"modifiers":1,"type":"","children":[{"kind":128,"name":"$input","location":{"uriHash":337609806,"range":{"start":{"line":302,"character":24},"end":{"line":302,"character":52}}},"type":"Symfony\\Component\\Console\\Input\\InputInterface","doc":{"description":"An Input instance","type":"Symfony\\Component\\Console\\Input\\InputInterface"},"value":"null","scope":"run"},{"kind":128,"name":"$output","location":{"uriHash":337609806,"range":{"start":{"line":302,"character":54},"end":{"line":302,"character":84}}},"type":"Symfony\\Component\\Console\\Output\\OutputInterface","doc":{"description":"An Output instance\n","type":"Symfony\\Component\\Console\\Output\\OutputInterface"},"value":"null","scope":"run"}],"scope":"Psy\\Shell"},{"kind":32,"name":"doRun","location":{"uriHash":337609806,"range":{"start":{"line":333,"character":4},"end":{"line":358,"character":5}}},"doc":{"description":"Runs the current application.","type":"int"},"modifiers":1,"type":"","children":[{"kind":128,"name":"$input","location":{"uriHash":337609806,"range":{"start":{"line":333,"character":26},"end":{"line":333,"character":47}}},"type":"Symfony\\Component\\Console\\Input\\InputInterface","doc":{"description":"An Input instance","type":"Symfony\\Component\\Console\\Input\\InputInterface"},"scope":"doRun"},{"kind":128,"name":"$output","location":{"uriHash":337609806,"range":{"start":{"line":333,"character":49},"end":{"line":333,"character":72}}},"type":"Symfony\\Component\\Console\\Output\\OutputInterface","doc":{"description":"An Output instance\n","type":"Symfony\\Component\\Console\\Output\\OutputInterface"},"scope":"doRun"}],"scope":"Psy\\Shell"},{"kind":32,"name":"getInput","location":{"uriHash":337609806,"range":{"start":{"line":368,"character":4},"end":{"line":411,"character":5}}},"doc":{"description":"Read user input.\n\nThis will continue fetching user input until the code buffer contains\nvalid code.","type":""},"modifiers":1,"type":"","children":[],"scope":"Psy\\Shell"},{"kind":32,"name":"inputInOpenStringOrComment","location":{"uriHash":337609806,"range":{"start":{"line":420,"character":4},"end":{"line":433,"character":5}}},"doc":{"description":"Check whether the code buffer (plus current input) is in an open string or comment.","type":"bool"},"modifiers":4,"type":"","children":[{"kind":128,"name":"$input","location":{"uriHash":337609806,"range":{"start":{"line":420,"character":48},"end":{"line":420,"character":54}}},"doc":{"description":"current line of input\n","type":"string"},"scope":"inputInOpenStringOrComment"}],"scope":"Psy\\Shell"},{"kind":32,"name":"beforeRun","location":{"uriHash":337609806,"range":{"start":{"line":438,"character":4},"end":{"line":443,"character":5}}},"doc":{"description":"Run execution loop listeners before the shell session.","type":""},"modifiers":2,"type":"","children":[],"scope":"Psy\\Shell"},{"kind":32,"name":"beforeLoop","location":{"uriHash":337609806,"range":{"start":{"line":448,"character":4},"end":{"line":453,"character":5}}},"doc":{"description":"Run execution loop listeners at the start of each loop.","type":""},"modifiers":1,"type":"","children":[],"scope":"Psy\\Shell"},{"kind":32,"name":"onInput","location":{"uriHash":337609806,"range":{"start":{"line":462,"character":4},"end":{"line":471,"character":5}}},"doc":{"description":"Run execution loop listeners on user input.","type":"string"},"modifiers":1,"type":"","children":[{"kind":128,"name":"$input","location":{"uriHash":337609806,"range":{"start":{"line":462,"character":28},"end":{"line":462,"character":34}}},"doc":{"description":"","type":"string"},"scope":"onInput"}],"scope":"Psy\\Shell"},{"kind":32,"name":"onExecute","location":{"uriHash":337609806,"range":{"start":{"line":480,"character":4},"end":{"line":489,"character":5}}},"doc":{"description":"Run execution loop listeners on code to be executed.","type":"string"},"modifiers":1,"type":"","children":[{"kind":128,"name":"$code","location":{"uriHash":337609806,"range":{"start":{"line":480,"character":30},"end":{"line":480,"character":35}}},"doc":{"description":"","type":"string"},"scope":"onExecute"}],"scope":"Psy\\Shell"},{"kind":32,"name":"afterLoop","location":{"uriHash":337609806,"range":{"start":{"line":494,"character":4},"end":{"line":499,"character":5}}},"doc":{"description":"Run execution loop listeners after each loop.","type":""},"modifiers":1,"type":"","children":[],"scope":"Psy\\Shell"},{"kind":32,"name":"afterRun","location":{"uriHash":337609806,"range":{"start":{"line":504,"character":4},"end":{"line":509,"character":5}}},"doc":{"description":"Run execution loop listers after the shell session.","type":""},"modifiers":2,"type":"","children":[],"scope":"Psy\\Shell"},{"kind":32,"name":"setScopeVariables","location":{"uriHash":337609806,"range":{"start":{"line":516,"character":4},"end":{"line":519,"character":5}}},"doc":{"description":"Set the variables currently in scope.","type":""},"modifiers":1,"type":"","children":[{"kind":128,"name":"$vars","location":{"uriHash":337609806,"range":{"start":{"line":516,"character":38},"end":{"line":516,"character":49}}},"type":"array","doc":{"description":"","type":"array"},"scope":"setScopeVariables"}],"scope":"Psy\\Shell"},{"kind":32,"name":"getScopeVariables","location":{"uriHash":337609806,"range":{"start":{"line":530,"character":4},"end":{"line":539,"character":5}}},"doc":{"description":"Return the set of variables currently in scope.","type":"array"},"modifiers":1,"type":"","children":[{"kind":128,"name":"$includeBoundObject","location":{"uriHash":337609806,"range":{"start":{"line":530,"character":38},"end":{"line":530,"character":64}}},"doc":{"description":"Pass false to exclude 'this'. If you're\npassing the scope variables to `extract`\nin PHP 7.1+, you _must_ exclude 'this'\n","type":"bool"},"value":"true","scope":"getScopeVariables"}],"scope":"Psy\\Shell"},{"kind":32,"name":"getSpecialScopeVariables","location":{"uriHash":337609806,"range":{"start":{"line":550,"character":4},"end":{"line":559,"character":5}}},"doc":{"description":"Return the set of magic variables currently in scope.","type":"array"},"modifiers":1,"type":"","children":[{"kind":128,"name":"$includeBoundObject","location":{"uriHash":337609806,"range":{"start":{"line":550,"character":45},"end":{"line":550,"character":71}}},"doc":{"description":"Pass false to exclude 'this'. If you're\npassing the scope variables to `extract`\nin PHP 7.1+, you _must_ exclude 'this'\n","type":"bool"},"value":"true","scope":"getSpecialScopeVariables"}],"scope":"Psy\\Shell"},{"kind":32,"name":"getScopeVariablesDiff","location":{"uriHash":337609806,"range":{"start":{"line":572,"character":4},"end":{"line":583,"character":5}}},"doc":{"description":"Return the set of variables currently in scope which differ from the\nvalues passed as $currentVars.\n\nThis is used inside the Execution Loop Closure to pick up scope variable\nchanges made by commands while the loop is running.","type":"array"},"modifiers":1,"type":"","children":[{"kind":128,"name":"$currentVars","location":{"uriHash":337609806,"range":{"start":{"line":572,"character":42},"end":{"line":572,"character":60}}},"type":"array","doc":{"description":"","type":"array"},"scope":"getScopeVariablesDiff"}],"scope":"Psy\\Shell"},{"kind":32,"name":"getUnusedCommandScopeVariableNames","location":{"uriHash":337609806,"range":{"start":{"line":590,"character":4},"end":{"line":593,"character":5}}},"doc":{"description":"Get the set of unused command-scope variable names.","type":"array"},"modifiers":1,"type":"","children":[],"scope":"Psy\\Shell"},{"kind":32,"name":"getScopeVariableNames","location":{"uriHash":337609806,"range":{"start":{"line":600,"character":4},"end":{"line":603,"character":5}}},"doc":{"description":"Get the set of variable names currently in scope.","type":"array"},"modifiers":1,"type":"","children":[],"scope":"Psy\\Shell"},{"kind":32,"name":"getScopeVariable","location":{"uriHash":337609806,"range":{"start":{"line":612,"character":4},"end":{"line":615,"character":5}}},"doc":{"description":"Get a scope variable value by name.","type":"mixed"},"modifiers":1,"type":"","children":[{"kind":128,"name":"$name","location":{"uriHash":337609806,"range":{"start":{"line":612,"character":37},"end":{"line":612,"character":42}}},"doc":{"description":"","type":"string"},"scope":"getScopeVariable"}],"scope":"Psy\\Shell"},{"kind":32,"name":"setBoundObject","location":{"uriHash":337609806,"range":{"start":{"line":622,"character":4},"end":{"line":625,"character":5}}},"doc":{"description":"Set the bound object ($this variable) for the interactive shell.","type":""},"modifiers":1,"type":"","children":[{"kind":128,"name":"$boundObject","location":{"uriHash":337609806,"range":{"start":{"line":622,"character":35},"end":{"line":622,"character":47}}},"doc":{"description":"","type":"object|null"},"scope":"setBoundObject"}],"scope":"Psy\\Shell"},{"kind":32,"name":"getBoundObject","location":{"uriHash":337609806,"range":{"start":{"line":632,"character":4},"end":{"line":635,"character":5}}},"doc":{"description":"Get the bound object ($this variable) for the interactive shell.","type":"object|null"},"modifiers":1,"type":"","children":[],"scope":"Psy\\Shell"},{"kind":32,"name":"setBoundClass","location":{"uriHash":337609806,"range":{"start":{"line":642,"character":4},"end":{"line":645,"character":5}}},"doc":{"description":"Set the bound class (self) for the interactive shell.","type":""},"modifiers":1,"type":"","children":[{"kind":128,"name":"$boundClass","location":{"uriHash":337609806,"range":{"start":{"line":642,"character":34},"end":{"line":642,"character":45}}},"doc":{"description":"","type":"string|null"},"scope":"setBoundClass"}],"scope":"Psy\\Shell"},{"kind":32,"name":"getBoundClass","location":{"uriHash":337609806,"range":{"start":{"line":652,"character":4},"end":{"line":655,"character":5}}},"doc":{"description":"Get the bound class (self) for the interactive shell.","type":"string|null"},"modifiers":1,"type":"","children":[],"scope":"Psy\\Shell"},{"kind":32,"name":"setIncludes","location":{"uriHash":337609806,"range":{"start":{"line":662,"character":4},"end":{"line":665,"character":5}}},"doc":{"description":"Add includes, to be parsed and executed before running the interactive shell.","type":""},"modifiers":1,"type":"","children":[{"kind":128,"name":"$includes","location":{"uriHash":337609806,"range":{"start":{"line":662,"character":32},"end":{"line":662,"character":52}}},"type":"array","doc":{"description":"","type":"array"},"value":"[]","scope":"setIncludes"}],"scope":"Psy\\Shell"},{"kind":32,"name":"getIncludes","location":{"uriHash":337609806,"range":{"start":{"line":672,"character":4},"end":{"line":675,"character":5}}},"doc":{"description":"Get PHP files to be parsed and executed before running the interactive shell.","type":"array"},"modifiers":1,"type":"","children":[],"scope":"Psy\\Shell"},{"kind":32,"name":"hasCode","location":{"uriHash":337609806,"range":{"start":{"line":682,"character":4},"end":{"line":685,"character":5}}},"doc":{"description":"Check whether this shell's code buffer contains code.","type":"bool"},"modifiers":1,"type":"","children":[],"scope":"Psy\\Shell"},{"kind":32,"name":"hasValidCode","location":{"uriHash":337609806,"range":{"start":{"line":694,"character":4},"end":{"line":697,"character":5}}},"doc":{"description":"Check whether the code in this shell's code buffer is valid.\n\nIf the code is valid, the code buffer should be flushed and evaluated.","type":"bool"},"modifiers":2,"type":"","children":[],"scope":"Psy\\Shell"},{"kind":32,"name":"addCode","location":{"uriHash":337609806,"range":{"start":{"line":705,"character":4},"end":{"line":724,"character":5}}},"doc":{"description":"Add code to the code buffer.","type":""},"modifiers":1,"type":"","children":[{"kind":128,"name":"$code","location":{"uriHash":337609806,"range":{"start":{"line":705,"character":28},"end":{"line":705,"character":33}}},"doc":{"description":"","type":"string"},"scope":"addCode"},{"kind":128,"name":"$silent","location":{"uriHash":337609806,"range":{"start":{"line":705,"character":35},"end":{"line":705,"character":50}}},"doc":{"description":"","type":"bool"},"value":"false","scope":"addCode"}],"scope":"Psy\\Shell"},{"kind":32,"name":"setCode","location":{"uriHash":337609806,"range":{"start":{"line":738,"character":4},"end":{"line":762,"character":5}}},"doc":{"description":"Set the code buffer.\n\nThis is mostly used by `Shell::execute`. Any existing code in the input\nbuffer is pushed onto a stack and will come back after this new code is\nexecuted.","type":""},"modifiers":4,"type":"","children":[{"kind":128,"name":"$code","location":{"uriHash":337609806,"range":{"start":{"line":738,"character":29},"end":{"line":738,"character":34}}},"doc":{"description":"","type":"string"},"scope":"setCode"},{"kind":128,"name":"$silent","location":{"uriHash":337609806,"range":{"start":{"line":738,"character":36},"end":{"line":738,"character":51}}},"doc":{"description":"","type":"bool"},"value":"false","scope":"setCode"}],"scope":"Psy\\Shell"},{"kind":32,"name":"getCodeBuffer","location":{"uriHash":337609806,"range":{"start":{"line":771,"character":4},"end":{"line":774,"character":5}}},"doc":{"description":"Get the current code buffer.\n\nThis is useful for commands which manipulate the buffer.","type":"array"},"modifiers":1,"type":"","children":[],"scope":"Psy\\Shell"},{"kind":32,"name":"runCommand","location":{"uriHash":337609806,"range":{"start":{"line":785,"character":4},"end":{"line":803,"character":5}}},"doc":{"description":"Run a Psy Shell command given the user input.","type":"mixed"},"modifiers":2,"type":"","children":[{"kind":128,"name":"$input","location":{"uriHash":337609806,"range":{"start":{"line":785,"character":34},"end":{"line":785,"character":40}}},"doc":{"description":"User input string\n","type":"string"},"scope":"runCommand"}],"scope":"Psy\\Shell"},{"kind":32,"name":"resetCodeBuffer","location":{"uriHash":337609806,"range":{"start":{"line":811,"character":4},"end":{"line":815,"character":5}}},"doc":{"description":"Reset the current code buffer.\n\nThis should be run after evaluating user input, catching exceptions, or\non demand by commands such as BufferCommand.","type":""},"modifiers":1,"type":"","children":[],"scope":"Psy\\Shell"},{"kind":32,"name":"addInput","location":{"uriHash":337609806,"range":{"start":{"line":825,"character":4},"end":{"line":830,"character":5}}},"doc":{"description":"Inject input into the input buffer.\n\nThis is useful for commands which want to replay history.","type":""},"modifiers":1,"type":"","children":[{"kind":128,"name":"$input","location":{"uriHash":337609806,"range":{"start":{"line":825,"character":29},"end":{"line":825,"character":35}}},"doc":{"description":"","type":"string|array"},"scope":"addInput"},{"kind":128,"name":"$silent","location":{"uriHash":337609806,"range":{"start":{"line":825,"character":37},"end":{"line":825,"character":52}}},"doc":{"description":"","type":"bool"},"value":"false","scope":"addInput"}],"scope":"Psy\\Shell"},{"kind":32,"name":"flushCode","location":{"uriHash":337609806,"range":{"start":{"line":840,"character":4},"end":{"line":849,"character":5}}},"doc":{"description":"Flush the current (valid) code buffer.\n\nIf the code buffer is valid, resets the code buffer and returns the\ncurrent code.","type":"string"},"modifiers":1,"type":"","children":[],"scope":"Psy\\Shell"},{"kind":32,"name":"popCodeStack","location":{"uriHash":337609806,"range":{"start":{"line":854,"character":4},"end":{"line":867,"character":5}}},"doc":{"description":"Reset the code buffer and restore any code pushed during `execute` calls.","type":""},"modifiers":4,"type":"","children":[],"scope":"Psy\\Shell"},{"kind":32,"name":"addHistory","location":{"uriHash":337609806,"range":{"start":{"line":881,"character":4},"end":{"line":891,"character":5}}},"doc":{"description":"(Possibly) add a line to the readline history.\n\nLike Bash, if the line starts with a space character, it will be omitted\nfrom history. Note that an entire block multi-line code input will be\nomitted iff the first line begins with a space.\n\nAdditionally, if a line is \"silent\", i.e. it was initially added with the\nsilent flag, it will also be omitted.","type":""},"modifiers":4,"type":"","children":[{"kind":128,"name":"$line","location":{"uriHash":337609806,"range":{"start":{"line":881,"character":32},"end":{"line":881,"character":37}}},"doc":{"description":"","type":"string|Psy\\Input\\SilentInput"},"scope":"addHistory"}],"scope":"Psy\\Shell"},{"kind":32,"name":"addCodeBufferToHistory","location":{"uriHash":337609806,"range":{"start":{"line":896,"character":4},"end":{"line":903,"character":5}}},"doc":{"description":"Filter silent input from code buffer, write the rest to readline history.","type":""},"modifiers":4,"type":"","children":[{"kind":64,"name":"#anon#file:///home/jfvilladiego/proyectos_laravel/cotizaciones_vcb_laravel/vendor/psy/psysh/src/Shell.php#24984","location":{"uriHash":337609806,"range":{"start":{"line":898,"character":55},"end":{"line":900,"character":9}}},"modifiers":512,"type":"","children":[{"kind":128,"name":"$line","location":{"uriHash":337609806,"range":{"start":{"line":898,"character":65},"end":{"line":898,"character":70}}},"scope":"#anon#file:///home/jfvilladiego/proyectos_laravel/cotizaciones_vcb_laravel/vendor/psy/psysh/src/Shell.php#24984"}],"scope":"addCodeBufferToHistory"}],"scope":"Psy\\Shell"},{"kind":32,"name":"getNamespace","location":{"uriHash":337609806,"range":{"start":{"line":912,"character":4},"end":{"line":917,"character":5}}},"doc":{"description":"Get the current evaluation scope namespace.","type":"string"},"modifiers":1,"type":"","children":[],"scope":"Psy\\Shell"},{"kind":32,"name":"writeStdout","location":{"uriHash":337609806,"range":{"start":{"line":927,"character":4},"end":{"line":952,"character":5}}},"doc":{"description":"Write a string to stdout.\n\nThis is used by the shell loop for rendering output from evaluated code.","type":""},"modifiers":1,"type":"","children":[{"kind":128,"name":"$out","location":{"uriHash":337609806,"range":{"start":{"line":927,"character":32},"end":{"line":927,"character":36}}},"doc":{"description":"","type":"string"},"scope":"writeStdout"},{"kind":128,"name":"$phase","location":{"uriHash":337609806,"range":{"start":{"line":927,"character":38},"end":{"line":927,"character":69}}},"doc":{"description":"Output buffering phase","type":"int"},"value":"PHP_OUTPUT_HANDLER_END","scope":"writeStdout"}],"scope":"Psy\\Shell"},{"kind":32,"name":"writeReturnValue","location":{"uriHash":337609806,"range":{"start":{"line":964,"character":4},"end":{"line":977,"character":5}}},"doc":{"description":"Write a return value to stdout.\n\nThe return value is formatted or pretty-printed, and rendered in a\nvisibly distinct manner (in this case, as cyan).","type":""},"modifiers":1,"type":"","children":[{"kind":128,"name":"$ret","location":{"uriHash":337609806,"range":{"start":{"line":964,"character":37},"end":{"line":964,"character":41}}},"doc":{"description":"","type":"mixed"},"scope":"writeReturnValue"}],"scope":"Psy\\Shell"},{"kind":32,"name":"writeException","location":{"uriHash":337609806,"range":{"start":{"line":989,"character":4},"end":{"line":995,"character":5}}},"doc":{"description":"Renders a caught Exception.\n\nExceptions are formatted according to severity. ErrorExceptions which were\nwarnings or Strict errors aren't rendered as harshly as real errors.\n\nStores $e as the last Exception in the Shell Context.","type":""},"modifiers":1,"type":"","children":[{"kind":128,"name":"$e","location":{"uriHash":337609806,"range":{"start":{"line":989,"character":35},"end":{"line":989,"character":48}}},"type":"Exception","doc":{"description":"An exception instance","type":"Exception"},"scope":"writeException"}],"scope":"Psy\\Shell"},{"kind":32,"name":"getLastExecSuccess","location":{"uriHash":337609806,"range":{"start":{"line":1004,"character":4},"end":{"line":1007,"character":5}}},"doc":{"description":"Check whether the last exec was successful.\n\nReturns true if a return value was logged rather than an exception.","type":"bool"},"modifiers":1,"type":"","children":[],"scope":"Psy\\Shell"},{"kind":32,"name":"formatException","location":{"uriHash":337609806,"range":{"start":{"line":1018,"character":4},"end":{"line":1040,"character":5}}},"doc":{"description":"Helper for formatting an exception for writeException().","type":"string"},"modifiers":1,"type":"","children":[{"kind":128,"name":"$e","location":{"uriHash":337609806,"range":{"start":{"line":1018,"character":36},"end":{"line":1018,"character":49}}},"type":"Exception","doc":{"description":"","type":"Exception"},"scope":"formatException"}],"scope":"Psy\\Shell"},{"kind":32,"name":"getSeverity","location":{"uriHash":337609806,"range":{"start":{"line":1049,"character":4},"end":{"line":1070,"character":5}}},"doc":{"description":"Helper for getting an output style for the given ErrorException's level.","type":"string"},"modifiers":2,"type":"","children":[{"kind":128,"name":"$e","location":{"uriHash":337609806,"range":{"start":{"line":1049,"character":35},"end":{"line":1049,"character":53}}},"type":"ErrorException","doc":{"description":"","type":"ErrorException"},"scope":"getSeverity"}],"scope":"Psy\\Shell"},{"kind":32,"name":"execute","location":{"uriHash":337609806,"range":{"start":{"line":1080,"character":4},"end":{"line":1098,"character":5}}},"doc":{"description":"Execute code in the shell execution context.","type":"mixed"},"modifiers":1,"type":"","children":[{"kind":128,"name":"$code","location":{"uriHash":337609806,"range":{"start":{"line":1080,"character":28},"end":{"line":1080,"character":33}}},"doc":{"description":"","type":"string"},"scope":"execute"},{"kind":128,"name":"$throwExceptions","location":{"uriHash":337609806,"range":{"start":{"line":1080,"character":35},"end":{"line":1080,"character":59}}},"doc":{"description":"","type":"bool"},"value":"false","scope":"execute"}],"scope":"Psy\\Shell"},{"kind":32,"name":"handleError","location":{"uriHash":337609806,"range":{"start":{"line":1126,"character":4},"end":{"line":1134,"character":5}}},"doc":{"description":"Helper for throwing an ErrorException.\n\nThis allows us to:\n\nset_error_handler(array($psysh, 'handleError'));\n\nUnlike ErrorException::throwException, this error handler respects the\ncurrent error_reporting level; i.e. it logs warnings and notices, but\ndoesn't throw an exception unless it's above the current error_reporting\nthreshold. This should probably only be used in the inner execution loop\nof the shell, as most of the time a thrown exception is much more useful.\n\nIf the error type matches the `errorLoggingLevel` config, it will be\nlogged as well, regardless of the `error_reporting` level.","type":""},"modifiers":1,"type":"","children":[{"kind":128,"name":"$errno","location":{"uriHash":337609806,"range":{"start":{"line":1126,"character":32},"end":{"line":1126,"character":38}}},"doc":{"description":"Error type","type":"int"},"scope":"handleError"},{"kind":128,"name":"$errstr","location":{"uriHash":337609806,"range":{"start":{"line":1126,"character":40},"end":{"line":1126,"character":47}}},"doc":{"description":"Message","type":"string"},"scope":"handleError"},{"kind":128,"name":"$errfile","location":{"uriHash":337609806,"range":{"start":{"line":1126,"character":49},"end":{"line":1126,"character":57}}},"doc":{"description":"Filename","type":"string"},"scope":"handleError"},{"kind":128,"name":"$errline","location":{"uriHash":337609806,"range":{"start":{"line":1126,"character":59},"end":{"line":1126,"character":67}}},"doc":{"description":"Line number","type":"int"},"scope":"handleError"}],"scope":"Psy\\Shell"},{"kind":32,"name":"presentValue","location":{"uriHash":337609806,"range":{"start":{"line":1145,"character":4},"end":{"line":1148,"character":5}}},"doc":{"description":"Format a value for display.","type":"string"},"modifiers":2,"type":"","children":[{"kind":128,"name":"$val","location":{"uriHash":337609806,"range":{"start":{"line":1145,"character":36},"end":{"line":1145,"character":40}}},"doc":{"description":"","type":"mixed"},"scope":"presentValue"}],"scope":"Psy\\Shell"},{"kind":32,"name":"getCommand","location":{"uriHash":337609806,"range":{"start":{"line":1157,"character":4},"end":{"line":1163,"character":5}}},"doc":{"description":"Get a command (if one exists) for the current input string.","type":"null|Symfony\\Component\\Console\\Command\\Command"},"modifiers":2,"type":"","children":[{"kind":128,"name":"$input","location":{"uriHash":337609806,"range":{"start":{"line":1157,"character":34},"end":{"line":1157,"character":40}}},"doc":{"description":"","type":"string"},"scope":"getCommand"}],"scope":"Psy\\Shell"},{"kind":32,"name":"hasCommand","location":{"uriHash":337609806,"range":{"start":{"line":1172,"character":4},"end":{"line":1179,"character":5}}},"doc":{"description":"Check whether a command is set for the current input string.","type":"bool"},"modifiers":2,"type":"","children":[{"kind":128,"name":"$input","location":{"uriHash":337609806,"range":{"start":{"line":1172,"character":34},"end":{"line":1172,"character":40}}},"doc":{"description":"","type":"string"},"scope":"hasCommand"}],"scope":"Psy\\Shell"},{"kind":32,"name":"getPrompt","location":{"uriHash":337609806,"range":{"start":{"line":1186,"character":4},"end":{"line":1193,"character":5}}},"doc":{"description":"Get the current input prompt.","type":"string"},"modifiers":2,"type":"","children":[],"scope":"Psy\\Shell"},{"kind":32,"name":"readline","location":{"uriHash":337609806,"range":{"start":{"line":1206,"character":4},"end":{"line":1228,"character":5}}},"doc":{"description":"Read a line of user input.\n\nThis will return a line from the input buffer (if any exist). Otherwise,\nit will ask the user for input.\n\nIf readline is enabled, this delegates to readline. Otherwise, it's an\nugly `fgets` call.","type":"string"},"modifiers":2,"type":"","children":[],"scope":"Psy\\Shell"},{"kind":32,"name":"getHeader","location":{"uriHash":337609806,"range":{"start":{"line":1235,"character":4},"end":{"line":1238,"character":5}}},"doc":{"description":"Get the shell output header.","type":"string"},"modifiers":2,"type":"","children":[],"scope":"Psy\\Shell"},{"kind":32,"name":"getVersion","location":{"uriHash":337609806,"range":{"start":{"line":1245,"character":4},"end":{"line":1250,"character":5}}},"doc":{"description":"Get the current version of Psy Shell.","type":"string"},"modifiers":1,"type":"","children":[],"scope":"Psy\\Shell"},{"kind":32,"name":"getManualDb","location":{"uriHash":337609806,"range":{"start":{"line":1257,"character":4},"end":{"line":1260,"character":5}}},"doc":{"description":"Get a PHP manual database instance.","type":"PDO|null"},"modifiers":1,"type":"","children":[],"scope":"Psy\\Shell"},{"kind":32,"name":"autocomplete","location":{"uriHash":337609806,"range":{"start":{"line":1265,"character":4},"end":{"line":1268,"character":5}}},"modifiers":2,"type":"","children":[{"kind":128,"name":"$text","location":{"uriHash":337609806,"range":{"start":{"line":1265,"character":36},"end":{"line":1265,"character":41}}},"scope":"autocomplete"}],"scope":"Psy\\Shell"},{"kind":32,"name":"initializeTabCompletion","location":{"uriHash":337609806,"range":{"start":{"line":1276,"character":4},"end":{"line":1290,"character":5}}},"doc":{"description":"Initialize tab completion matchers.\n\nIf tab completion is enabled this adds tab completion matchers to the\nauto completer and sets context if needed.","type":""},"modifiers":2,"type":"","children":[],"scope":"Psy\\Shell"},{"kind":32,"name":"addMatchersToAutoCompleter","location":{"uriHash":337609806,"range":{"start":{"line":1297,"character":4},"end":{"line":1305,"character":5}}},"doc":{"description":"Add matchers to the auto completer, setting context if needed.","type":""},"modifiers":4,"type":"","children":[{"kind":128,"name":"$matchers","location":{"uriHash":337609806,"range":{"start":{"line":1297,"character":48},"end":{"line":1297,"character":63}}},"type":"array","doc":{"description":"","type":"array"},"scope":"addMatchersToAutoCompleter"}],"scope":"Psy\\Shell"},{"kind":32,"name":"writeVersionInfo","location":{"uriHash":337609806,"range":{"start":{"line":1313,"character":4},"end":{"line":1327,"character":5}}},"doc":{"description":"","type":"void|string"},"modifiers":2,"type":"","children":[],"scope":"Psy\\Shell"},{"kind":32,"name":"writeStartupMessage","location":{"uriHash":337609806,"range":{"start":{"line":1332,"character":4},"end":{"line":1338,"character":5}}},"doc":{"description":"Write a startup message if set.","type":""},"modifiers":2,"type":"","children":[],"scope":"Psy\\Shell"}],"associated":[{"kind":1,"name":"Symfony\\Component\\Console\\Application"}],"doc":{"description":"The Psy Shell application.\n\nUsage:\n\n$shell = new Shell;\n$shell->run();","type":""},"modifiers":0}]},"_hash":337609806}]]