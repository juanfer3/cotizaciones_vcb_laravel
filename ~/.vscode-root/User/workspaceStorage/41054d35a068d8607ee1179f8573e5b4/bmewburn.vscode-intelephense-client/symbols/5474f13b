[["file:///home/jfvilladiego/proyectos_laravel/cotizaciones_vcb_laravel/vendor/paragonie/random_compat/lib/byte_safe_strings.php",{"_uri":"file:///home/jfvilladiego/proyectos_laravel/cotizaciones_vcb_laravel/vendor/paragonie/random_compat/lib/byte_safe_strings.php","_root":{"kind":4096,"name":"file:///home/jfvilladiego/proyectos_laravel/cotizaciones_vcb_laravel/vendor/paragonie/random_compat/lib/byte_safe_strings.php","location":{"uriHash":1416950075,"range":{"start":{"line":0,"character":0},"end":{"line":195,"character":0}}},"children":[{"kind":64,"name":"RandomCompat_strlen","location":{"uriHash":1416950075,"range":{"start":{"line":46,"character":8},"end":{"line":55,"character":9}}},"doc":{"description":"strlen() implementation that isn't brittle to mbstring.func_overload\n\nThis version uses mb_strlen() in '8bit' mode to treat strings as raw\nbinary rather than UTF-8, ISO-8859-1, etc","type":"int"},"type":"","children":[{"kind":128,"name":"$binary_string","location":{"uriHash":1416950075,"range":{"start":{"line":46,"character":37},"end":{"line":46,"character":51}}},"doc":{"description":"","type":"string"},"scope":"RandomCompat_strlen"}]},{"kind":64,"name":"RandomCompat_strlen","location":{"uriHash":1416950075,"range":{"start":{"line":69,"character":8},"end":{"line":77,"character":9}}},"doc":{"description":"strlen() implementation that isn't brittle to mbstring.func_overload\n\nThis version just used the default strlen()","type":"int"},"type":"","children":[{"kind":128,"name":"$binary_string","location":{"uriHash":1416950075,"range":{"start":{"line":69,"character":37},"end":{"line":69,"character":51}}},"doc":{"description":"","type":"string"},"scope":"RandomCompat_strlen"}]},{"kind":64,"name":"RandomCompat_substr","location":{"uriHash":1416950075,"range":{"start":{"line":102,"character":8},"end":{"line":143,"character":9}}},"doc":{"description":"substr() implementation that isn't brittle to mbstring.func_overload\n\nThis version uses mb_substr() in '8bit' mode to treat strings as raw\nbinary rather than UTF-8, ISO-8859-1, etc","type":"string"},"type":"","children":[{"kind":128,"name":"$binary_string","location":{"uriHash":1416950075,"range":{"start":{"line":102,"character":37},"end":{"line":102,"character":51}}},"doc":{"description":"","type":"string"},"scope":"RandomCompat_substr"},{"kind":128,"name":"$start","location":{"uriHash":1416950075,"range":{"start":{"line":102,"character":53},"end":{"line":102,"character":59}}},"doc":{"description":"","type":"int"},"scope":"RandomCompat_substr"},{"kind":128,"name":"$length","location":{"uriHash":1416950075,"range":{"start":{"line":102,"character":61},"end":{"line":102,"character":75}}},"doc":{"description":"(optional)\n","type":"int|null"},"value":"null","scope":"RandomCompat_substr"}]},{"kind":64,"name":"RandomCompat_substr","location":{"uriHash":1416950075,"range":{"start":{"line":160,"character":8},"end":{"line":192,"character":9}}},"doc":{"description":"substr() implementation that isn't brittle to mbstring.func_overload\n\nThis version just uses the default substr()","type":"string"},"type":"","children":[{"kind":128,"name":"$binary_string","location":{"uriHash":1416950075,"range":{"start":{"line":160,"character":37},"end":{"line":160,"character":51}}},"doc":{"description":"","type":"string"},"scope":"RandomCompat_substr"},{"kind":128,"name":"$start","location":{"uriHash":1416950075,"range":{"start":{"line":160,"character":53},"end":{"line":160,"character":59}}},"doc":{"description":"","type":"int"},"scope":"RandomCompat_substr"},{"kind":128,"name":"$length","location":{"uriHash":1416950075,"range":{"start":{"line":160,"character":61},"end":{"line":160,"character":75}}},"doc":{"description":"(optional)\n","type":"int|null"},"value":"null","scope":"RandomCompat_substr"}]}]},"_hash":1416950075}]]