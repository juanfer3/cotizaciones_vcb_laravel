[["file:///home/jfvilladiego/proyectos_laravel/cotizaciones_vcb_laravel/vendor/phpdocumentor/reflection-docblock/src/DocBlock/StandardTagFactory.php",{"_uri":"file:///home/jfvilladiego/proyectos_laravel/cotizaciones_vcb_laravel/vendor/phpdocumentor/reflection-docblock/src/DocBlock/StandardTagFactory.php","_root":{"kind":4096,"name":"file:///home/jfvilladiego/proyectos_laravel/cotizaciones_vcb_laravel/vendor/phpdocumentor/reflection-docblock/src/DocBlock/StandardTagFactory.php","location":{"uriHash":1114940721,"range":{"start":{"line":0,"character":0},"end":{"line":320,"character":0}}},"children":[{"kind":512,"name":"phpDocumentor\\Reflection\\DocBlock","location":{"uriHash":1114940721,"range":{"start":{"line":12,"character":0},"end":{"line":12,"character":44}}}},{"kind":1,"name":"StaticMethod","location":{"uriHash":1114940721,"range":{"start":{"line":14,"character":4},"end":{"line":14,"character":63}}},"modifiers":4096,"associated":[{"kind":1,"name":"phpDocumentor\\Reflection\\DocBlock\\Tags\\Factory\\StaticMethod"}]},{"kind":1,"name":"Generic","location":{"uriHash":1114940721,"range":{"start":{"line":15,"character":4},"end":{"line":15,"character":50}}},"modifiers":4096,"associated":[{"kind":1,"name":"phpDocumentor\\Reflection\\DocBlock\\Tags\\Generic"}]},{"kind":1,"name":"FqsenResolver","location":{"uriHash":1114940721,"range":{"start":{"line":16,"character":4},"end":{"line":16,"character":42}}},"modifiers":4096,"associated":[{"kind":1,"name":"phpDocumentor\\Reflection\\FqsenResolver"}]},{"kind":1,"name":"TypeContext","location":{"uriHash":1114940721,"range":{"start":{"line":17,"character":46},"end":{"line":17,"character":57}}},"modifiers":4096,"associated":[{"kind":1,"name":"phpDocumentor\\Reflection\\Types\\Context"}]},{"kind":1,"name":"Assert","location":{"uriHash":1114940721,"range":{"start":{"line":18,"character":4},"end":{"line":18,"character":27}}},"modifiers":4096,"associated":[{"kind":1,"name":"Webmozart\\Assert\\Assert"}]},{"kind":1,"name":"phpDocumentor\\Reflection\\DocBlock\\StandardTagFactory","location":{"uriHash":1114940721,"range":{"start":{"line":37,"character":0},"end":{"line":319,"character":1}}},"children":[{"kind":1024,"name":"REGEX_TAGNAME","location":{"uriHash":1114940721,"range":{"start":{"line":40,"character":10},"end":{"line":40,"character":41}}},"modifiers":33,"value":"'[\\w\\-\\_\\\\\\\\]+'","scope":"phpDocumentor\\Reflection\\DocBlock\\StandardTagFactory"},{"kind":16,"name":"$tagHandlerMappings","location":{"uriHash":1114940721,"range":{"start":{"line":45,"character":12},"end":{"line":65,"character":5}}},"doc":{"description":"An array with a tag as a key, and an FQCN to a class that handles it as an array value.","type":"string[]"},"value":"","modifiers":4,"scope":"phpDocumentor\\Reflection\\DocBlock\\StandardTagFactory"},{"kind":16,"name":"$tagHandlerParameterCache","location":{"uriHash":1114940721,"range":{"start":{"line":70,"character":12},"end":{"line":70,"character":42}}},"doc":{"description":"a lazy-loading cache containing parameters for each tagHandler that has been used.","type":"ReflectionParameter[][]"},"value":"","modifiers":4,"scope":"phpDocumentor\\Reflection\\DocBlock\\StandardTagFactory"},{"kind":16,"name":"$fqsenResolver","location":{"uriHash":1114940721,"range":{"start":{"line":75,"character":12},"end":{"line":75,"character":26}}},"doc":{"description":"","type":"phpDocumentor\\Reflection\\FqsenResolver"},"modifiers":4,"scope":"phpDocumentor\\Reflection\\DocBlock\\StandardTagFactory"},{"kind":16,"name":"$serviceLocator","location":{"uriHash":1114940721,"range":{"start":{"line":81,"character":12},"end":{"line":81,"character":32}}},"doc":{"description":"an array representing a simple Service Locator where we can store parameters and\nservices that can be inserted into the Factory Methods of Tag Handlers.","type":"mixed[]"},"value":"","modifiers":4,"scope":"phpDocumentor\\Reflection\\DocBlock\\StandardTagFactory"},{"kind":32,"name":"__construct","location":{"uriHash":1114940721,"range":{"start":{"line":94,"character":4},"end":{"line":102,"character":5}}},"doc":{"description":"Initialize this tag factory with the means to resolve an FQSEN and optionally a list of tag handlers.\n\nIf no tag handlers are provided than the default list in the {@see self::$tagHandlerMappings} property\nis used.","type":""},"modifiers":1,"type":"","children":[{"kind":128,"name":"$fqsenResolver","location":{"uriHash":1114940721,"range":{"start":{"line":94,"character":32},"end":{"line":94,"character":60}}},"type":"phpDocumentor\\Reflection\\FqsenResolver","doc":{"description":"","type":"phpDocumentor\\Reflection\\FqsenResolver"},"scope":"__construct"},{"kind":128,"name":"$tagHandlers","location":{"uriHash":1114940721,"range":{"start":{"line":94,"character":62},"end":{"line":94,"character":87}}},"type":"array","doc":{"description":"","type":"string[]"},"value":"null","scope":"__construct"}],"scope":"phpDocumentor\\Reflection\\DocBlock\\StandardTagFactory"},{"kind":32,"name":"create","location":{"uriHash":1114940721,"range":{"start":{"line":107,"character":4},"end":{"line":122,"character":5}}},"doc":{"description":"{@inheritDoc}","type":""},"modifiers":1,"type":"","children":[{"kind":128,"name":"$tagLine","location":{"uriHash":1114940721,"range":{"start":{"line":107,"character":27},"end":{"line":107,"character":35}}},"scope":"create"},{"kind":128,"name":"$context","location":{"uriHash":1114940721,"range":{"start":{"line":107,"character":37},"end":{"line":107,"character":64}}},"type":"phpDocumentor\\Reflection\\Types\\Context","value":"null","scope":"create"}],"scope":"phpDocumentor\\Reflection\\DocBlock\\StandardTagFactory"},{"kind":32,"name":"addParameter","location":{"uriHash":1114940721,"range":{"start":{"line":127,"character":4},"end":{"line":130,"character":5}}},"doc":{"description":"{@inheritDoc}","type":""},"modifiers":1,"type":"","children":[{"kind":128,"name":"$name","location":{"uriHash":1114940721,"range":{"start":{"line":127,"character":33},"end":{"line":127,"character":38}}},"scope":"addParameter"},{"kind":128,"name":"$value","location":{"uriHash":1114940721,"range":{"start":{"line":127,"character":40},"end":{"line":127,"character":46}}},"scope":"addParameter"}],"scope":"phpDocumentor\\Reflection\\DocBlock\\StandardTagFactory"},{"kind":32,"name":"addService","location":{"uriHash":1114940721,"range":{"start":{"line":135,"character":4},"end":{"line":138,"character":5}}},"doc":{"description":"{@inheritDoc}","type":""},"modifiers":1,"type":"","children":[{"kind":128,"name":"$service","location":{"uriHash":1114940721,"range":{"start":{"line":135,"character":31},"end":{"line":135,"character":39}}},"scope":"addService"},{"kind":128,"name":"$alias","location":{"uriHash":1114940721,"range":{"start":{"line":135,"character":41},"end":{"line":135,"character":54}}},"value":"null","scope":"addService"}],"scope":"phpDocumentor\\Reflection\\DocBlock\\StandardTagFactory"},{"kind":32,"name":"registerTagHandler","location":{"uriHash":1114940721,"range":{"start":{"line":143,"character":4},"end":{"line":157,"character":5}}},"doc":{"description":"{@inheritDoc}","type":""},"modifiers":1,"type":"","children":[{"kind":128,"name":"$tagName","location":{"uriHash":1114940721,"range":{"start":{"line":143,"character":39},"end":{"line":143,"character":47}}},"scope":"registerTagHandler"},{"kind":128,"name":"$handler","location":{"uriHash":1114940721,"range":{"start":{"line":143,"character":49},"end":{"line":143,"character":57}}},"scope":"registerTagHandler"}],"scope":"phpDocumentor\\Reflection\\DocBlock\\StandardTagFactory"},{"kind":32,"name":"extractTagParts","location":{"uriHash":1114940721,"range":{"start":{"line":166,"character":4},"end":{"line":180,"character":5}}},"doc":{"description":"Extracts all components for a tag.","type":"string[]"},"modifiers":4,"type":"","children":[{"kind":128,"name":"$tagLine","location":{"uriHash":1114940721,"range":{"start":{"line":166,"character":37},"end":{"line":166,"character":45}}},"doc":{"description":"","type":"string"},"scope":"extractTagParts"}],"scope":"phpDocumentor\\Reflection\\DocBlock\\StandardTagFactory"},{"kind":32,"name":"createTag","location":{"uriHash":1114940721,"range":{"start":{"line":192,"character":4},"end":{"line":202,"character":5}}},"doc":{"description":"Creates a new tag object with the given name and body or returns null if the tag name was recognized but the\nbody was invalid.","type":"phpDocumentor\\Reflection\\DocBlock\\Tag|null"},"modifiers":4,"type":"","children":[{"kind":128,"name":"$body","location":{"uriHash":1114940721,"range":{"start":{"line":192,"character":31},"end":{"line":192,"character":36}}},"doc":{"description":"","type":"string"},"scope":"createTag"},{"kind":128,"name":"$name","location":{"uriHash":1114940721,"range":{"start":{"line":192,"character":38},"end":{"line":192,"character":43}}},"doc":{"description":"","type":"string"},"scope":"createTag"},{"kind":128,"name":"$context","location":{"uriHash":1114940721,"range":{"start":{"line":192,"character":45},"end":{"line":192,"character":65}}},"type":"phpDocumentor\\Reflection\\Types\\Context","doc":{"description":"","type":"phpDocumentor\\Reflection\\Types\\Context"},"scope":"createTag"}],"scope":"phpDocumentor\\Reflection\\DocBlock\\StandardTagFactory"},{"kind":32,"name":"findHandlerClassName","location":{"uriHash":1114940721,"range":{"start":{"line":212,"character":4},"end":{"line":226,"character":5}}},"doc":{"description":"Determines the Fully Qualified Class Name of the Factory or Tag (containing a Factory Method `create`).","type":"string"},"modifiers":4,"type":"","children":[{"kind":128,"name":"$tagName","location":{"uriHash":1114940721,"range":{"start":{"line":212,"character":42},"end":{"line":212,"character":50}}},"doc":{"description":"","type":"string"},"scope":"findHandlerClassName"},{"kind":128,"name":"$context","location":{"uriHash":1114940721,"range":{"start":{"line":212,"character":52},"end":{"line":212,"character":72}}},"type":"phpDocumentor\\Reflection\\Types\\Context","doc":{"description":"","type":"phpDocumentor\\Reflection\\Types\\Context"},"scope":"findHandlerClassName"}],"scope":"phpDocumentor\\Reflection\\DocBlock\\StandardTagFactory"},{"kind":32,"name":"getArgumentsForParametersFromWiring","location":{"uriHash":1114940721,"range":{"start":{"line":237,"character":4},"end":{"line":257,"character":5}}},"doc":{"description":"Retrieves the arguments that need to be passed to the Factory Method with the given Parameters.","type":"mixed[]"},"modifiers":4,"type":"","children":[{"kind":128,"name":"$parameters","location":{"uriHash":1114940721,"range":{"start":{"line":237,"character":57},"end":{"line":237,"character":68}}},"doc":{"description":"","type":"ReflectionParameter[]"},"scope":"getArgumentsForParametersFromWiring"},{"kind":128,"name":"$locator","location":{"uriHash":1114940721,"range":{"start":{"line":237,"character":70},"end":{"line":237,"character":78}}},"doc":{"description":"","type":"mixed[]"},"scope":"getArgumentsForParametersFromWiring"}],"scope":"phpDocumentor\\Reflection\\DocBlock\\StandardTagFactory"},{"kind":32,"name":"fetchParametersForHandlerFactoryMethod","location":{"uriHash":1114940721,"range":{"start":{"line":267,"character":4},"end":{"line":275,"character":5}}},"doc":{"description":"Retrieves a series of ReflectionParameter objects for the static 'create' method of the given\ntag handler class name.","type":"ReflectionParameter[]"},"modifiers":4,"type":"","children":[{"kind":128,"name":"$handlerClassName","location":{"uriHash":1114940721,"range":{"start":{"line":267,"character":60},"end":{"line":267,"character":77}}},"doc":{"description":"","type":"string"},"scope":"fetchParametersForHandlerFactoryMethod"}],"scope":"phpDocumentor\\Reflection\\DocBlock\\StandardTagFactory"},{"kind":32,"name":"getServiceLocatorWithDynamicParameters","location":{"uriHash":1114940721,"range":{"start":{"line":287,"character":4},"end":{"line":299,"character":5}}},"doc":{"description":"Returns a copy of this class' Service Locator with added dynamic parameters, such as the tag's name, body and\nContext.","type":"mixed[]"},"modifiers":4,"type":"","children":[{"kind":128,"name":"$context","location":{"uriHash":1114940721,"range":{"start":{"line":287,"character":60},"end":{"line":287,"character":80}}},"type":"phpDocumentor\\Reflection\\Types\\Context","doc":{"description":"The Context (namespace and aliasses) that may be passed and is used to resolve FQSENs.","type":"phpDocumentor\\Reflection\\Types\\Context"},"scope":"getServiceLocatorWithDynamicParameters"},{"kind":128,"name":"$tagName","location":{"uriHash":1114940721,"range":{"start":{"line":287,"character":82},"end":{"line":287,"character":90}}},"doc":{"description":"The name of the tag that may be passed onto the factory method of the Tag class.","type":"string"},"scope":"getServiceLocatorWithDynamicParameters"},{"kind":128,"name":"$tagBody","location":{"uriHash":1114940721,"range":{"start":{"line":287,"character":92},"end":{"line":287,"character":100}}},"doc":{"description":"The body of the tag that may be passed onto the factory method of the Tag class.\n","type":"string"},"scope":"getServiceLocatorWithDynamicParameters"}],"scope":"phpDocumentor\\Reflection\\DocBlock\\StandardTagFactory"},{"kind":32,"name":"isAnnotation","location":{"uriHash":1114940721,"range":{"start":{"line":310,"character":4},"end":{"line":318,"character":5}}},"doc":{"description":"Returns whether the given tag belongs to an annotation.","type":"bool"},"modifiers":4,"type":"","children":[{"kind":128,"name":"$tagContent","location":{"uriHash":1114940721,"range":{"start":{"line":310,"character":34},"end":{"line":310,"character":45}}},"doc":{"description":"","type":"string"},"scope":"isAnnotation"}],"scope":"phpDocumentor\\Reflection\\DocBlock\\StandardTagFactory"}],"associated":[{"kind":2,"name":"phpDocumentor\\Reflection\\DocBlock\\TagFactory"}],"doc":{"description":"Creates a Tag object given the contents of a tag.\n\nThis Factory is capable of determining the appropriate class for a tag and instantiate it using its `create`\nfactory method. The `create` factory method of a Tag can have a variable number of arguments; this way you can\npass the dependencies that you need to construct a tag object.\n\n> Important: each parameter in addition to the body variable for the `create` method must default to null, otherwise\n> it violates the constraint with the interface; it is recommended to use the {@see Assert::notNull()} method to\n> verify that a dependency is actually passed.\n\nThis Factory also features a Service Locator component that is used to pass the right dependencies to the\n`create` method of a tag; each dependency should be registered as a service or as a parameter.\n\nWhen you want to use a Tag of your own with custom handling you need to call the `registerTagHandler` method, pass\nthe name of the tag and a Fully Qualified Class Name pointing to a class that implements the Tag interface.","type":""},"modifiers":8}]},"_hash":1114940721}]]