[["file:///home/jfvilladiego/proyectos_laravel/cotizaciones_vcb_laravel/vendor/hamcrest/hamcrest-php/hamcrest/Hamcrest/MatcherAssert.php",{"_uri":"file:///home/jfvilladiego/proyectos_laravel/cotizaciones_vcb_laravel/vendor/hamcrest/hamcrest-php/hamcrest/Hamcrest/MatcherAssert.php","_root":{"kind":4096,"name":"file:///home/jfvilladiego/proyectos_laravel/cotizaciones_vcb_laravel/vendor/hamcrest/hamcrest-php/hamcrest/Hamcrest/MatcherAssert.php","location":{"uriHash":561416439,"range":{"start":{"line":0,"character":0},"end":{"line":118,"character":0}}},"children":[{"kind":512,"name":"Hamcrest","location":{"uriHash":561416439,"range":{"start":{"line":1,"character":0},"end":{"line":1,"character":19}}}},{"kind":1,"name":"Hamcrest\\MatcherAssert","location":{"uriHash":561416439,"range":{"start":{"line":7,"character":0},"end":{"line":117,"character":1}}},"children":[{"kind":16,"name":"$_count","location":{"uriHash":561416439,"range":{"start":{"line":15,"character":19},"end":{"line":15,"character":30}}},"doc":{"description":"","type":"int"},"value":"0","modifiers":36,"scope":"Hamcrest\\MatcherAssert"},{"kind":32,"name":"assertThat","location":{"uriHash":561416439,"range":{"start":{"line":37,"character":4},"end":{"line":69,"character":5}}},"doc":{"description":"Make an assertion and throw {@link Hamcrest\\AssertionError} if it fails.\n\nThe first parameter may optionally be a string identifying the assertion\nto be included in the failure message.\n\nIf the third parameter is not a matcher it is passed to\n{@link Hamcrest\\Core\\IsEqual#equalTo} to create one.\n\nExample:\n<pre>\n// With an identifier\nassertThat(\"apple flavour\", $apple->flavour(), equalTo(\"tasty\"));\n// Without an identifier\nassertThat($apple->flavour(), equalTo(\"tasty\"));\n// Evaluating a boolean expression\nassertThat(\"some error\", $a > $b);\nassertThat($a > $b);\n</pre>","type":""},"modifiers":33,"type":"","children":[],"scope":"Hamcrest\\MatcherAssert"},{"kind":32,"name":"getCount","location":{"uriHash":561416439,"range":{"start":{"line":76,"character":4},"end":{"line":79,"character":5}}},"doc":{"description":"Returns the number of assertions performed.","type":"int"},"modifiers":33,"type":"","children":[],"scope":"Hamcrest\\MatcherAssert"},{"kind":32,"name":"resetCount","location":{"uriHash":561416439,"range":{"start":{"line":84,"character":4},"end":{"line":87,"character":5}}},"doc":{"description":"Resets the number of assertions performed to zero.","type":""},"modifiers":33,"type":"","children":[],"scope":"Hamcrest\\MatcherAssert"},{"kind":32,"name":"doAssert","location":{"uriHash":561416439,"range":{"start":{"line":101,"character":4},"end":{"line":116,"character":5}}},"doc":{"description":"Performs the actual assertion logic.\n\nIf <code>$matcher</code> doesn't match <code>$actual</code>,\nthrows a {@link Hamcrest\\AssertionError} with a description\nof the failure along with the optional <code>$identifier</code>.","type":""},"modifiers":36,"type":"","children":[{"kind":128,"name":"$identifier","location":{"uriHash":561416439,"range":{"start":{"line":101,"character":37},"end":{"line":101,"character":48}}},"doc":{"description":"added to the message upon failure","type":"string"},"scope":"doAssert"},{"kind":128,"name":"$actual","location":{"uriHash":561416439,"range":{"start":{"line":101,"character":50},"end":{"line":101,"character":57}}},"doc":{"description":"value to compare against <code>$matcher</code>","type":"mixed"},"scope":"doAssert"},{"kind":128,"name":"$matcher","location":{"uriHash":561416439,"range":{"start":{"line":101,"character":59},"end":{"line":101,"character":75}}},"type":"Hamcrest\\Matcher","doc":{"description":"applied to <code>$actual</code>","type":"Hamcrest\\Matcher"},"scope":"doAssert"}],"scope":"Hamcrest\\MatcherAssert"}],"associated":[],"modifiers":0}]},"_hash":561416439}]]