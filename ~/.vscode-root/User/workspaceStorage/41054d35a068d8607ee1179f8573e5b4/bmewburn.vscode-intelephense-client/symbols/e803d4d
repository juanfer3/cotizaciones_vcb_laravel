[["file:///home/jfvilladiego/proyectos_laravel/cotizaciones_vcb_laravel/vendor/phpunit/phpunit-mock-objects/src/Framework/MockObject/Matcher/ConsecutiveParameters.php",{"_uri":"file:///home/jfvilladiego/proyectos_laravel/cotizaciones_vcb_laravel/vendor/phpunit/phpunit-mock-objects/src/Framework/MockObject/Matcher/ConsecutiveParameters.php","_root":{"kind":4096,"name":"file:///home/jfvilladiego/proyectos_laravel/cotizaciones_vcb_laravel/vendor/phpunit/phpunit-mock-objects/src/Framework/MockObject/Matcher/ConsecutiveParameters.php","location":{"uriHash":243285325,"range":{"start":{"line":0,"character":0},"end":{"line":126,"character":0}}},"children":[{"kind":1,"name":"PHPUnit_Framework_MockObject_Matcher_ConsecutiveParameters","location":{"uriHash":243285325,"range":{"start":{"line":20,"character":0},"end":{"line":125,"character":1}}},"children":[{"kind":16,"name":"$parameterGroups","location":{"uriHash":243285325,"range":{"start":{"line":25,"character":12},"end":{"line":25,"character":33}}},"doc":{"description":"","type":"array"},"value":"","modifiers":4,"scope":"PHPUnit_Framework_MockObject_Matcher_ConsecutiveParameters"},{"kind":16,"name":"$invocations","location":{"uriHash":243285325,"range":{"start":{"line":30,"character":12},"end":{"line":30,"character":29}}},"doc":{"description":"","type":"array"},"value":"","modifiers":4,"scope":"PHPUnit_Framework_MockObject_Matcher_ConsecutiveParameters"},{"kind":32,"name":"__construct","location":{"uriHash":243285325,"range":{"start":{"line":35,"character":4},"end":{"line":46,"character":5}}},"doc":{"description":"","type":""},"modifiers":1,"type":"","children":[{"kind":128,"name":"$parameterGroups","location":{"uriHash":243285325,"range":{"start":{"line":35,"character":32},"end":{"line":35,"character":54}}},"type":"array","doc":{"description":"","type":"array"},"scope":"__construct"}],"scope":"PHPUnit_Framework_MockObject_Matcher_ConsecutiveParameters"},{"kind":32,"name":"toString","location":{"uriHash":243285325,"range":{"start":{"line":51,"character":4},"end":{"line":56,"character":5}}},"doc":{"description":"","type":"string"},"modifiers":1,"type":"","children":[],"scope":"PHPUnit_Framework_MockObject_Matcher_ConsecutiveParameters"},{"kind":32,"name":"matches","location":{"uriHash":243285325,"range":{"start":{"line":63,"character":4},"end":{"line":71,"character":5}}},"doc":{"description":"","type":"bool"},"modifiers":1,"type":"","children":[{"kind":128,"name":"$invocation","location":{"uriHash":243285325,"range":{"start":{"line":63,"character":28},"end":{"line":63,"character":79}}},"type":"PHPUnit_Framework_MockObject_Invocation","doc":{"description":"","type":"PHPUnit_Framework_MockObject_Invocation"},"scope":"matches"}],"scope":"PHPUnit_Framework_MockObject_Matcher_ConsecutiveParameters"},{"kind":32,"name":"verify","location":{"uriHash":243285325,"range":{"start":{"line":73,"character":4},"end":{"line":78,"character":5}}},"modifiers":1,"type":"","children":[],"scope":"PHPUnit_Framework_MockObject_Matcher_ConsecutiveParameters"},{"kind":32,"name":"verifyInvocation","location":{"uriHash":243285325,"range":{"start":{"line":88,"character":4},"end":{"line":124,"character":5}}},"doc":{"description":"Verify a single invocation","type":""},"modifiers":4,"type":"","children":[{"kind":128,"name":"$invocation","location":{"uriHash":243285325,"range":{"start":{"line":88,"character":38},"end":{"line":88,"character":89}}},"type":"PHPUnit_Framework_MockObject_Invocation","doc":{"description":"","type":"PHPUnit_Framework_MockObject_Invocation"},"scope":"verifyInvocation"},{"kind":128,"name":"$callIndex","location":{"uriHash":243285325,"range":{"start":{"line":88,"character":91},"end":{"line":88,"character":101}}},"doc":{"description":"","type":"int"},"scope":"verifyInvocation"}],"scope":"PHPUnit_Framework_MockObject_Matcher_ConsecutiveParameters"}],"associated":[{"kind":1,"name":"PHPUnit_Framework_MockObject_Matcher_StatelessInvocation"}],"doc":{"description":"Invocation matcher which looks for sets of specific parameters in the invocations.\n\nChecks the parameters of the incoming invocations, the parameter list is\nchecked against the defined constraints in $parameters. If the constraint\nis met it will return true in matches().\n\nIt takes a list of match groups and and increases a call index after each invocation.\nSo the first invocation uses the first group of constraints, the second the next and so on.","type":""},"modifiers":0}]},"_hash":243285325}]]