[["file:///home/jfvilladiego/proyectos_laravel/cotizaciones_vcb_laravel/vendor/sebastian/comparator/src/Factory.php",{"_uri":"file:///home/jfvilladiego/proyectos_laravel/cotizaciones_vcb_laravel/vendor/sebastian/comparator/src/Factory.php","_root":{"kind":4096,"name":"file:///home/jfvilladiego/proyectos_laravel/cotizaciones_vcb_laravel/vendor/sebastian/comparator/src/Factory.php","location":{"uriHash":112765663,"range":{"start":{"line":0,"character":0},"end":{"line":107,"character":0}}},"children":[{"kind":512,"name":"SebastianBergmann\\Comparator","location":{"uriHash":112765663,"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":39}}}},{"kind":1,"name":"SebastianBergmann\\Comparator\\Factory","location":{"uriHash":112765663,"range":{"start":{"line":15,"character":0},"end":{"line":106,"character":1}}},"children":[{"kind":16,"name":"$comparators","location":{"uriHash":112765663,"range":{"start":{"line":20,"character":12},"end":{"line":20,"character":34}}},"doc":{"description":"","type":"SebastianBergmann\\Comparator\\Comparator[]"},"value":"","modifiers":4,"scope":"SebastianBergmann\\Comparator\\Factory"},{"kind":16,"name":"$instance","location":{"uriHash":112765663,"range":{"start":{"line":25,"character":19},"end":{"line":25,"character":28}}},"doc":{"description":"","type":"SebastianBergmann\\Comparator\\Factory"},"modifiers":36,"scope":"SebastianBergmann\\Comparator\\Factory"},{"kind":32,"name":"__construct","location":{"uriHash":112765663,"range":{"start":{"line":30,"character":4},"end":{"line":44,"character":5}}},"doc":{"description":"Constructs a new factory.","type":""},"modifiers":1,"type":"","children":[],"scope":"SebastianBergmann\\Comparator\\Factory"},{"kind":32,"name":"getInstance","location":{"uriHash":112765663,"range":{"start":{"line":49,"character":4},"end":{"line":56,"character":5}}},"doc":{"description":"","type":"SebastianBergmann\\Comparator\\Factory"},"modifiers":33,"type":"","children":[],"scope":"SebastianBergmann\\Comparator\\Factory"},{"kind":32,"name":"getComparatorFor","location":{"uriHash":112765663,"range":{"start":{"line":65,"character":4},"end":{"line":72,"character":5}}},"doc":{"description":"Returns the correct comparator for comparing two values.","type":"SebastianBergmann\\Comparator\\Comparator"},"modifiers":1,"type":"","children":[{"kind":128,"name":"$expected","location":{"uriHash":112765663,"range":{"start":{"line":65,"character":37},"end":{"line":65,"character":46}}},"doc":{"description":"The first value to compare","type":"mixed"},"scope":"getComparatorFor"},{"kind":128,"name":"$actual","location":{"uriHash":112765663,"range":{"start":{"line":65,"character":48},"end":{"line":65,"character":55}}},"doc":{"description":"The second value to compare","type":"mixed"},"scope":"getComparatorFor"}],"scope":"SebastianBergmann\\Comparator\\Factory"},{"kind":32,"name":"register","location":{"uriHash":112765663,"range":{"start":{"line":84,"character":4},"end":{"line":89,"character":5}}},"doc":{"description":"Registers a new comparator.\n\nThis comparator will be returned by getInstance() if its accept() method\nreturns TRUE for the compared values. It has higher priority than the\nexisting comparators, meaning that its accept() method will be tested\nbefore those of the other comparators.","type":""},"modifiers":1,"type":"","children":[{"kind":128,"name":"$comparator","location":{"uriHash":112765663,"range":{"start":{"line":84,"character":29},"end":{"line":84,"character":51}}},"type":"SebastianBergmann\\Comparator\\Comparator","doc":{"description":"The registered comparator","type":"SebastianBergmann\\Comparator\\Comparator"},"scope":"register"}],"scope":"SebastianBergmann\\Comparator\\Factory"},{"kind":32,"name":"unregister","location":{"uriHash":112765663,"range":{"start":{"line":98,"character":4},"end":{"line":105,"character":5}}},"doc":{"description":"Unregisters a comparator.\n\nThis comparator will no longer be returned by getInstance().","type":""},"modifiers":1,"type":"","children":[{"kind":128,"name":"$comparator","location":{"uriHash":112765663,"range":{"start":{"line":98,"character":31},"end":{"line":98,"character":53}}},"type":"SebastianBergmann\\Comparator\\Comparator","doc":{"description":"The unregistered comparator","type":"SebastianBergmann\\Comparator\\Comparator"},"scope":"unregister"}],"scope":"SebastianBergmann\\Comparator\\Factory"}],"associated":[],"doc":{"description":"Factory for comparators which compare values for equality.","type":""},"modifiers":0}]},"_hash":112765663}]]