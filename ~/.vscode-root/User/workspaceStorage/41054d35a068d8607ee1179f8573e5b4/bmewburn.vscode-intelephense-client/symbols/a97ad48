[["file:///home/jfvilladiego/proyectos_laravel/cotizaciones_vcb_laravel/vendor/phpunit/phpunit/src/Framework/Constraint/IsEqual.php",{"_uri":"file:///home/jfvilladiego/proyectos_laravel/cotizaciones_vcb_laravel/vendor/phpunit/phpunit/src/Framework/Constraint/IsEqual.php","_root":{"kind":4096,"name":"file:///home/jfvilladiego/proyectos_laravel/cotizaciones_vcb_laravel/vendor/phpunit/phpunit/src/Framework/Constraint/IsEqual.php","location":{"uriHash":177712456,"range":{"start":{"line":0,"character":0},"end":{"line":177,"character":0}}},"children":[{"kind":1,"name":"PHPUnit_Framework_Constraint_IsEqual","location":{"uriHash":177712456,"range":{"start":{"line":19,"character":0},"end":{"line":176,"character":1}}},"children":[{"kind":16,"name":"$value","location":{"uriHash":177712456,"range":{"start":{"line":24,"character":14},"end":{"line":24,"character":20}}},"doc":{"description":"","type":"mixed"},"modifiers":2,"scope":"PHPUnit_Framework_Constraint_IsEqual"},{"kind":16,"name":"$delta","location":{"uriHash":177712456,"range":{"start":{"line":29,"character":14},"end":{"line":29,"character":26}}},"doc":{"description":"","type":"float"},"value":"0.0","modifiers":2,"scope":"PHPUnit_Framework_Constraint_IsEqual"},{"kind":16,"name":"$maxDepth","location":{"uriHash":177712456,"range":{"start":{"line":34,"character":14},"end":{"line":34,"character":28}}},"doc":{"description":"","type":"int"},"value":"10","modifiers":2,"scope":"PHPUnit_Framework_Constraint_IsEqual"},{"kind":16,"name":"$canonicalize","location":{"uriHash":177712456,"range":{"start":{"line":39,"character":14},"end":{"line":39,"character":35}}},"doc":{"description":"","type":"bool"},"value":"","modifiers":2,"scope":"PHPUnit_Framework_Constraint_IsEqual"},{"kind":16,"name":"$ignoreCase","location":{"uriHash":177712456,"range":{"start":{"line":44,"character":14},"end":{"line":44,"character":33}}},"doc":{"description":"","type":"bool"},"value":"","modifiers":2,"scope":"PHPUnit_Framework_Constraint_IsEqual"},{"kind":16,"name":"$lastFailure","location":{"uriHash":177712456,"range":{"start":{"line":49,"character":14},"end":{"line":49,"character":26}}},"doc":{"description":"","type":"SebastianBergmann\\Comparator\\ComparisonFailure"},"modifiers":2,"scope":"PHPUnit_Framework_Constraint_IsEqual"},{"kind":32,"name":"__construct","location":{"uriHash":177712456,"range":{"start":{"line":60,"character":4},"end":{"line":85,"character":5}}},"doc":{"description":"","type":""},"modifiers":1,"type":"","children":[{"kind":128,"name":"$value","location":{"uriHash":177712456,"range":{"start":{"line":60,"character":32},"end":{"line":60,"character":38}}},"doc":{"description":"","type":"mixed"},"scope":"__construct"},{"kind":128,"name":"$delta","location":{"uriHash":177712456,"range":{"start":{"line":60,"character":40},"end":{"line":60,"character":52}}},"doc":{"description":"","type":"float"},"value":"0.0","scope":"__construct"},{"kind":128,"name":"$maxDepth","location":{"uriHash":177712456,"range":{"start":{"line":60,"character":54},"end":{"line":60,"character":68}}},"doc":{"description":"","type":"int"},"value":"10","scope":"__construct"},{"kind":128,"name":"$canonicalize","location":{"uriHash":177712456,"range":{"start":{"line":60,"character":70},"end":{"line":60,"character":91}}},"doc":{"description":"","type":"bool"},"value":"false","scope":"__construct"},{"kind":128,"name":"$ignoreCase","location":{"uriHash":177712456,"range":{"start":{"line":60,"character":93},"end":{"line":60,"character":112}}},"doc":{"description":"","type":"bool"},"value":"false","scope":"__construct"}],"scope":"PHPUnit_Framework_Constraint_IsEqual"},{"kind":32,"name":"evaluate","location":{"uriHash":177712456,"range":{"start":{"line":105,"character":4},"end":{"line":141,"character":5}}},"doc":{"description":"Evaluates the constraint for parameter $other\n\nIf $returnResult is set to false (the default), an exception is thrown\nin case of a failure. null is returned otherwise.\n\nIf $returnResult is true, the result of the evaluation is returned as\na boolean value instead: true in case of success, false in case of a\nfailure.","type":"mixed"},"modifiers":1,"type":"","children":[{"kind":128,"name":"$other","location":{"uriHash":177712456,"range":{"start":{"line":105,"character":29},"end":{"line":105,"character":35}}},"doc":{"description":"Value or object to evaluate.","type":"mixed"},"scope":"evaluate"},{"kind":128,"name":"$description","location":{"uriHash":177712456,"range":{"start":{"line":105,"character":37},"end":{"line":105,"character":54}}},"doc":{"description":"Additional information about the test","type":"string"},"value":"''","scope":"evaluate"},{"kind":128,"name":"$returnResult","location":{"uriHash":177712456,"range":{"start":{"line":105,"character":56},"end":{"line":105,"character":77}}},"doc":{"description":"Whether to return a result or throw an exception\n","type":"bool"},"value":"false","scope":"evaluate"}],"scope":"PHPUnit_Framework_Constraint_IsEqual"},{"kind":32,"name":"toString","location":{"uriHash":177712456,"range":{"start":{"line":148,"character":4},"end":{"line":175,"character":5}}},"doc":{"description":"Returns a string representation of the constraint.","type":"string"},"modifiers":1,"type":"","children":[],"scope":"PHPUnit_Framework_Constraint_IsEqual"}],"associated":[{"kind":1,"name":"PHPUnit_Framework_Constraint"}],"doc":{"description":"Constraint that checks if one value is equal to another.\n\nEquality is checked with PHP's == operator, the operator is explained in\ndetail at {@url http://www.php.net/manual/en/types.comparisons.php}.\nTwo values are equal if they have the same value disregarding type.\n\nThe expected value is passed in the constructor.","type":""},"modifiers":0}]},"_hash":177712456}]]