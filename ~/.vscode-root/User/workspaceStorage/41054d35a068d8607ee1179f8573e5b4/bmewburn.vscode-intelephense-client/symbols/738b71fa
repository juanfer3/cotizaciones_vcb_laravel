[["file:///home/jfvilladiego/proyectos_laravel/cotizaciones_vcb_laravel/vendor/mockery/mockery/library/Mockery/MockInterface.php",{"_uri":"file:///home/jfvilladiego/proyectos_laravel/cotizaciones_vcb_laravel/vendor/mockery/mockery/library/Mockery/MockInterface.php","_root":{"kind":4096,"name":"file:///home/jfvilladiego/proyectos_laravel/cotizaciones_vcb_laravel/vendor/mockery/mockery/library/Mockery/MockInterface.php","location":{"uriHash":1938518522,"range":{"start":{"line":0,"character":0},"end":{"line":242,"character":0}}},"children":[{"kind":512,"name":"Mockery","location":{"uriHash":1938518522,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":18}}}},{"kind":2,"name":"Mockery\\MockInterface","location":{"uriHash":1938518522,"range":{"start":{"line":22,"character":0},"end":{"line":241,"character":1}}},"doc":{"description":"Mockery\n\nLICENSE\n\nThis source file is subject to the new BSD license that is bundled\nwith this package in the file LICENSE.txt.\nIt is also available through the world-wide-web at this URL:\nhttp://github.com/padraic/mockery/blob/master/LICENSE\nIf you did not receive a copy of the license and are unable to\nobtain it through the world-wide-web, please send an email\nto padraic@php.net so we can send you a copy immediately.","type":""},"children":[{"kind":32,"name":"mockery_init","location":{"uriHash":1938518522,"range":{"start":{"line":32,"character":4},"end":{"line":32,"character":94}}},"doc":{"description":"Alternative setup method to constructor","type":"void"},"modifiers":1,"type":"","children":[{"kind":128,"name":"$container","location":{"uriHash":1938518522,"range":{"start":{"line":32,"character":33},"end":{"line":32,"character":69}}},"type":"Mockery\\Container","doc":{"description":"","type":"Mockery\\Container"},"value":"null","scope":"mockery_init"},{"kind":128,"name":"$partialObject","location":{"uriHash":1938518522,"range":{"start":{"line":32,"character":71},"end":{"line":32,"character":92}}},"doc":{"description":"","type":"object"},"value":"null","scope":"mockery_init"}],"scope":"Mockery\\MockInterface"},{"kind":32,"name":"shouldReceive","location":{"uriHash":1938518522,"range":{"start":{"line":40,"character":4},"end":{"line":40,"character":36}}},"doc":{"description":"Set expected method calls","type":"Mockery\\Expectation"},"modifiers":1,"type":"","children":[],"scope":"Mockery\\MockInterface"},{"kind":32,"name":"shouldNotReceive","location":{"uriHash":1938518522,"range":{"start":{"line":48,"character":4},"end":{"line":48,"character":39}}},"doc":{"description":"Shortcut method for setting an expectation that a method should not be called.","type":"Mockery\\Expectation"},"modifiers":1,"type":"","children":[],"scope":"Mockery\\MockInterface"},{"kind":32,"name":"shouldAllowMockingMethod","location":{"uriHash":1938518522,"range":{"start":{"line":54,"character":4},"end":{"line":54,"character":54}}},"doc":{"description":"Allows additional methods to be mocked that do not explicitly exist on mocked class","type":""},"modifiers":1,"type":"","children":[{"kind":128,"name":"$method","location":{"uriHash":1938518522,"range":{"start":{"line":54,"character":45},"end":{"line":54,"character":52}}},"doc":{"description":"name of the method to be mocked","type":"String"},"scope":"shouldAllowMockingMethod"}],"scope":"Mockery\\MockInterface"},{"kind":32,"name":"shouldIgnoreMissing","location":{"uriHash":1938518522,"range":{"start":{"line":61,"character":4},"end":{"line":61,"character":61}}},"doc":{"description":"Set mock to ignore unexpected methods and return Undefined class","type":"Mockery\\Mock"},"modifiers":1,"type":"","children":[{"kind":128,"name":"$returnValue","location":{"uriHash":1938518522,"range":{"start":{"line":61,"character":40},"end":{"line":61,"character":59}}},"doc":{"description":"the default return value for calls to missing functions on this mock","type":"mixed"},"value":"null","scope":"shouldIgnoreMissing"}],"scope":"Mockery\\MockInterface"},{"kind":32,"name":"shouldAllowMockingProtectedMethods","location":{"uriHash":1938518522,"range":{"start":{"line":66,"character":4},"end":{"line":66,"character":57}}},"doc":{"description":"","type":"Mockery\\Mock"},"modifiers":1,"type":"","children":[],"scope":"Mockery\\MockInterface"},{"kind":32,"name":"shouldDeferMissing","location":{"uriHash":1938518522,"range":{"start":{"line":73,"character":4},"end":{"line":73,"character":41}}},"doc":{"description":"Set mock to defer unexpected methods to its parent if possible","type":"Mockery\\Mock"},"modifiers":1,"type":"","children":[],"scope":"Mockery\\MockInterface"},{"kind":32,"name":"makePartial","location":{"uriHash":1938518522,"range":{"start":{"line":80,"character":4},"end":{"line":80,"character":34}}},"doc":{"description":"Set mock to defer unexpected methods to its parent if possible","type":"Mockery\\Mock"},"modifiers":1,"type":"","children":[],"scope":"Mockery\\MockInterface"},{"kind":32,"name":"shouldHaveReceived","location":{"uriHash":1938518522,"range":{"start":{"line":87,"character":4},"end":{"line":87,"character":62}}},"doc":{"description":"","type":"Mockery\\Expectation"},"modifiers":1,"type":"","children":[{"kind":128,"name":"$method","location":{"uriHash":1938518522,"range":{"start":{"line":87,"character":39},"end":{"line":87,"character":46}}},"scope":"shouldHaveReceived"},{"kind":128,"name":"$args","location":{"uriHash":1938518522,"range":{"start":{"line":87,"character":48},"end":{"line":87,"character":60}}},"doc":{"description":"","type":"null"},"value":"null","scope":"shouldHaveReceived"}],"scope":"Mockery\\MockInterface"},{"kind":32,"name":"shouldNotHaveReceived","location":{"uriHash":1938518522,"range":{"start":{"line":94,"character":4},"end":{"line":94,"character":65}}},"doc":{"description":"","type":"null"},"modifiers":1,"type":"","children":[{"kind":128,"name":"$method","location":{"uriHash":1938518522,"range":{"start":{"line":94,"character":42},"end":{"line":94,"character":49}}},"scope":"shouldNotHaveReceived"},{"kind":128,"name":"$args","location":{"uriHash":1938518522,"range":{"start":{"line":94,"character":51},"end":{"line":94,"character":63}}},"doc":{"description":"","type":"null"},"value":"null","scope":"shouldNotHaveReceived"}],"scope":"Mockery\\MockInterface"},{"kind":32,"name":"byDefault","location":{"uriHash":1938518522,"range":{"start":{"line":104,"character":4},"end":{"line":104,"character":32}}},"doc":{"description":"In the event shouldReceive() accepting an array of methods/returns\nthis method will switch them from normal expectations to default\nexpectations","type":"Mockery\\MockInterface"},"modifiers":1,"type":"","children":[],"scope":"Mockery\\MockInterface"},{"kind":32,"name":"mockery_verify","location":{"uriHash":1938518522,"range":{"start":{"line":126,"character":4},"end":{"line":126,"character":37}}},"doc":{"description":"Iterate across all expectation directors and validate each","type":"void"},"modifiers":1,"type":"","children":[],"scope":"Mockery\\MockInterface"},{"kind":32,"name":"mockery_teardown","location":{"uriHash":1938518522,"range":{"start":{"line":133,"character":4},"end":{"line":133,"character":39}}},"doc":{"description":"Tear down tasks for this mock","type":"void"},"modifiers":1,"type":"","children":[],"scope":"Mockery\\MockInterface"},{"kind":32,"name":"mockery_allocateOrder","location":{"uriHash":1938518522,"range":{"start":{"line":140,"character":4},"end":{"line":140,"character":44}}},"doc":{"description":"Fetch the next available allocation order number","type":"int"},"modifiers":1,"type":"","children":[],"scope":"Mockery\\MockInterface"},{"kind":32,"name":"mockery_setGroup","location":{"uriHash":1938518522,"range":{"start":{"line":148,"character":4},"end":{"line":148,"character":53}}},"doc":{"description":"Set ordering for a group","type":""},"modifiers":1,"type":"","children":[{"kind":128,"name":"$group","location":{"uriHash":1938518522,"range":{"start":{"line":148,"character":37},"end":{"line":148,"character":43}}},"doc":{"description":"","type":"mixed"},"scope":"mockery_setGroup"},{"kind":128,"name":"$order","location":{"uriHash":1938518522,"range":{"start":{"line":148,"character":45},"end":{"line":148,"character":51}}},"doc":{"description":"","type":"int"},"scope":"mockery_setGroup"}],"scope":"Mockery\\MockInterface"},{"kind":32,"name":"mockery_getGroups","location":{"uriHash":1938518522,"range":{"start":{"line":155,"character":4},"end":{"line":155,"character":40}}},"doc":{"description":"Fetch array of ordered groups","type":"array"},"modifiers":1,"type":"","children":[],"scope":"Mockery\\MockInterface"},{"kind":32,"name":"mockery_setCurrentOrder","location":{"uriHash":1938518522,"range":{"start":{"line":162,"character":4},"end":{"line":162,"character":52}}},"doc":{"description":"Set current ordered number","type":""},"modifiers":1,"type":"","children":[{"kind":128,"name":"$order","location":{"uriHash":1938518522,"range":{"start":{"line":162,"character":44},"end":{"line":162,"character":50}}},"doc":{"description":"","type":"int"},"scope":"mockery_setCurrentOrder"}],"scope":"Mockery\\MockInterface"},{"kind":32,"name":"mockery_getCurrentOrder","location":{"uriHash":1938518522,"range":{"start":{"line":169,"character":4},"end":{"line":169,"character":46}}},"doc":{"description":"Get current ordered number","type":"int"},"modifiers":1,"type":"","children":[],"scope":"Mockery\\MockInterface"},{"kind":32,"name":"mockery_validateOrder","location":{"uriHash":1938518522,"range":{"start":{"line":179,"character":4},"end":{"line":179,"character":59}}},"doc":{"description":"Validate the current mock's ordering","type":"void"},"modifiers":1,"type":"","children":[{"kind":128,"name":"$method","location":{"uriHash":1938518522,"range":{"start":{"line":179,"character":42},"end":{"line":179,"character":49}}},"doc":{"description":"","type":"string"},"scope":"mockery_validateOrder"},{"kind":128,"name":"$order","location":{"uriHash":1938518522,"range":{"start":{"line":179,"character":51},"end":{"line":179,"character":57}}},"doc":{"description":"","type":"int"},"scope":"mockery_validateOrder"}],"scope":"Mockery\\MockInterface"},{"kind":32,"name":"mockery_getExpectationCount","location":{"uriHash":1938518522,"range":{"start":{"line":186,"character":4},"end":{"line":186,"character":50}}},"doc":{"description":"Gets the count of expectations for this mock","type":"int"},"modifiers":1,"type":"","children":[],"scope":"Mockery\\MockInterface"},{"kind":32,"name":"mockery_setExpectationsFor","location":{"uriHash":1938518522,"range":{"start":{"line":194,"character":4},"end":{"line":194,"character":96}}},"doc":{"description":"Return the expectations director for the given method","type":"Mockery\\ExpectationDirector|null"},"modifiers":1,"type":"","children":[{"kind":128,"name":"$method","location":{"uriHash":1938518522,"range":{"start":{"line":194,"character":47},"end":{"line":194,"character":54}}},"scope":"mockery_setExpectationsFor"},{"kind":128,"name":"$director","location":{"uriHash":1938518522,"range":{"start":{"line":194,"character":56},"end":{"line":194,"character":94}}},"type":"Mockery\\ExpectationDirector","scope":"mockery_setExpectationsFor"}],"scope":"Mockery\\MockInterface"},{"kind":32,"name":"mockery_getExpectationsFor","location":{"uriHash":1938518522,"range":{"start":{"line":202,"character":4},"end":{"line":202,"character":56}}},"doc":{"description":"Return the expectations director for the given method","type":"Mockery\\ExpectationDirector|null"},"modifiers":1,"type":"","children":[{"kind":128,"name":"$method","location":{"uriHash":1938518522,"range":{"start":{"line":202,"character":47},"end":{"line":202,"character":54}}},"scope":"mockery_getExpectationsFor"}],"scope":"Mockery\\MockInterface"},{"kind":32,"name":"mockery_findExpectation","location":{"uriHash":1938518522,"range":{"start":{"line":211,"character":4},"end":{"line":211,"character":66}}},"doc":{"description":"Find an expectation matching the given method and arguments","type":"Mockery\\Expectation|null"},"modifiers":1,"type":"","children":[{"kind":128,"name":"$method","location":{"uriHash":1938518522,"range":{"start":{"line":211,"character":44},"end":{"line":211,"character":51}}},"scope":"mockery_findExpectation"},{"kind":128,"name":"$args","location":{"uriHash":1938518522,"range":{"start":{"line":211,"character":53},"end":{"line":211,"character":64}}},"type":"array","scope":"mockery_findExpectation"}],"scope":"Mockery\\MockInterface"},{"kind":32,"name":"mockery_getContainer","location":{"uriHash":1938518522,"range":{"start":{"line":218,"character":4},"end":{"line":218,"character":43}}},"doc":{"description":"Return the container for this mock","type":"Mockery\\Container"},"modifiers":1,"type":"","children":[],"scope":"Mockery\\MockInterface"},{"kind":32,"name":"mockery_getName","location":{"uriHash":1938518522,"range":{"start":{"line":225,"character":4},"end":{"line":225,"character":38}}},"doc":{"description":"Return the name for this mock","type":"string"},"modifiers":1,"type":"","children":[],"scope":"Mockery\\MockInterface"},{"kind":32,"name":"mockery_getMockableProperties","location":{"uriHash":1938518522,"range":{"start":{"line":230,"character":4},"end":{"line":230,"character":52}}},"doc":{"description":"","type":"array"},"modifiers":1,"type":"","children":[],"scope":"Mockery\\MockInterface"},{"kind":32,"name":"mockery_getMockableMethods","location":{"uriHash":1938518522,"range":{"start":{"line":235,"character":4},"end":{"line":235,"character":49}}},"doc":{"description":"","type":"string[]"},"modifiers":1,"type":"","children":[],"scope":"Mockery\\MockInterface"},{"kind":32,"name":"mockery_isAnonymous","location":{"uriHash":1938518522,"range":{"start":{"line":240,"character":4},"end":{"line":240,"character":42}}},"doc":{"description":"","type":"bool"},"modifiers":1,"type":"","children":[],"scope":"Mockery\\MockInterface"}],"associated":[]}]},"_hash":1938518522}]]