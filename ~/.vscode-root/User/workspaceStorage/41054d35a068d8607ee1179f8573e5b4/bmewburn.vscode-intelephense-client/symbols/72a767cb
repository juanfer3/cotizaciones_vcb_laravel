[["file:///home/jfvilladiego/proyectos_laravel/cotizaciones_vcb_laravel/vendor/psy/psysh/src/CodeCleaner/UseStatementPass.php",{"_uri":"file:///home/jfvilladiego/proyectos_laravel/cotizaciones_vcb_laravel/vendor/psy/psysh/src/CodeCleaner/UseStatementPass.php","_root":{"kind":4096,"name":"file:///home/jfvilladiego/proyectos_laravel/cotizaciones_vcb_laravel/vendor/psy/psysh/src/CodeCleaner/UseStatementPass.php","location":{"uriHash":1923573707,"range":{"start":{"line":0,"character":0},"end":{"line":126,"character":0}}},"children":[{"kind":512,"name":"Psy\\CodeCleaner","location":{"uriHash":1923573707,"range":{"start":{"line":11,"character":0},"end":{"line":11,"character":26}}}},{"kind":1,"name":"Node","location":{"uriHash":1923573707,"range":{"start":{"line":13,"character":4},"end":{"line":13,"character":18}}},"modifiers":4096,"associated":[{"kind":1,"name":"PhpParser\\Node"}]},{"kind":1,"name":"Name","location":{"uriHash":1923573707,"range":{"start":{"line":14,"character":4},"end":{"line":14,"character":23}}},"modifiers":4096,"associated":[{"kind":1,"name":"PhpParser\\Node\\Name"}]},{"kind":1,"name":"FullyQualifiedName","location":{"uriHash":1923573707,"range":{"start":{"line":15,"character":42},"end":{"line":15,"character":60}}},"modifiers":4096,"associated":[{"kind":1,"name":"PhpParser\\Node\\Name\\FullyQualified"}]},{"kind":1,"name":"GroupUse","location":{"uriHash":1923573707,"range":{"start":{"line":16,"character":4},"end":{"line":16,"character":32}}},"modifiers":4096,"associated":[{"kind":1,"name":"PhpParser\\Node\\Stmt\\GroupUse"}]},{"kind":1,"name":"Namespace_","location":{"uriHash":1923573707,"range":{"start":{"line":17,"character":4},"end":{"line":17,"character":34}}},"modifiers":4096,"associated":[{"kind":1,"name":"PhpParser\\Node\\Stmt\\Namespace_"}]},{"kind":1,"name":"Use_","location":{"uriHash":1923573707,"range":{"start":{"line":18,"character":4},"end":{"line":18,"character":28}}},"modifiers":4096,"associated":[{"kind":1,"name":"PhpParser\\Node\\Stmt\\Use_"}]},{"kind":1,"name":"NodeTraverser","location":{"uriHash":1923573707,"range":{"start":{"line":19,"character":4},"end":{"line":19,"character":27}}},"modifiers":4096,"associated":[{"kind":1,"name":"PhpParser\\NodeTraverser"}]},{"kind":1,"name":"Psy\\CodeCleaner\\UseStatementPass","location":{"uriHash":1923573707,"range":{"start":{"line":31,"character":0},"end":{"line":125,"character":1}}},"children":[{"kind":16,"name":"$aliases","location":{"uriHash":1923573707,"range":{"start":{"line":33,"character":12},"end":{"line":33,"character":31}}},"value":"","modifiers":4,"scope":"Psy\\CodeCleaner\\UseStatementPass"},{"kind":16,"name":"$lastAliases","location":{"uriHash":1923573707,"range":{"start":{"line":34,"character":12},"end":{"line":34,"character":31}}},"value":"","modifiers":4,"scope":"Psy\\CodeCleaner\\UseStatementPass"},{"kind":16,"name":"$lastNamespace","location":{"uriHash":1923573707,"range":{"start":{"line":35,"character":12},"end":{"line":35,"character":33}}},"value":"","modifiers":4,"scope":"Psy\\CodeCleaner\\UseStatementPass"},{"kind":32,"name":"enterNode","location":{"uriHash":1923573707,"range":{"start":{"line":46,"character":4},"end":{"line":55,"character":5}}},"doc":{"description":"Re-load the last set of use statements on re-entering a namespace.\n\nThis isn't how namespaces normally work, but because PsySH has to spin\nup a new namespace for every line of code, we do this to make things\nwork like you'd expect.","type":""},"modifiers":1,"type":"","children":[{"kind":128,"name":"$node","location":{"uriHash":1923573707,"range":{"start":{"line":46,"character":30},"end":{"line":46,"character":40}}},"type":"PhpParser\\Node","doc":{"description":"","type":"PhpParser\\Node"},"scope":"enterNode"}],"scope":"Psy\\CodeCleaner\\UseStatementPass"},{"kind":32,"name":"leaveNode","location":{"uriHash":1923573707,"range":{"start":{"line":65,"character":4},"end":{"line":105,"character":5}}},"doc":{"description":"If this statement is a namespace, forget all the aliases we had.\n\nIf it's a use statement, remember the alias for later. Otherwise, apply\nremembered aliases to the code.","type":""},"modifiers":1,"type":"","children":[{"kind":128,"name":"$node","location":{"uriHash":1923573707,"range":{"start":{"line":65,"character":30},"end":{"line":65,"character":40}}},"type":"PhpParser\\Node","doc":{"description":"","type":"PhpParser\\Node"},"scope":"leaveNode"}],"scope":"Psy\\CodeCleaner\\UseStatementPass"},{"kind":32,"name":"findAlias","location":{"uriHash":1923573707,"range":{"start":{"line":114,"character":4},"end":{"line":124,"character":5}}},"doc":{"description":"Find class/namespace aliases.","type":"PhpParser\\Node\\Name\\FullyQualified|null"},"modifiers":4,"type":"","children":[{"kind":128,"name":"$name","location":{"uriHash":1923573707,"range":{"start":{"line":114,"character":31},"end":{"line":114,"character":41}}},"type":"PhpParser\\Node\\Name","doc":{"description":"","type":"PhpParser\\Node\\Name"},"scope":"findAlias"}],"scope":"Psy\\CodeCleaner\\UseStatementPass"}],"associated":[{"kind":1,"name":"Psy\\CodeCleaner\\CodeCleanerPass"}],"doc":{"description":"Provide implicit use statements for subsequent execution.\n\nThe use statement pass remembers the last use statement line encountered:\n\nuse Foo\\Bar as Baz;\n\n... which it then applies implicitly to all future evaluated code, until the\ncurrent namespace is replaced by another namespace.","type":""},"modifiers":0}]},"_hash":1923573707}]]