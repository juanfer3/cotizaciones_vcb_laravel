[["file:///home/jfvilladiego/proyectos_laravel/cotizaciones_vcb_laravel/vendor/ramsey/uuid/src/UuidInterface.php",{"_uri":"file:///home/jfvilladiego/proyectos_laravel/cotizaciones_vcb_laravel/vendor/ramsey/uuid/src/UuidInterface.php","_root":{"kind":4096,"name":"file:///home/jfvilladiego/proyectos_laravel/cotizaciones_vcb_laravel/vendor/ramsey/uuid/src/UuidInterface.php","location":{"uriHash":626267669,"range":{"start":{"line":0,"character":0},"end":{"line":270,"character":0}}},"children":[{"kind":512,"name":"Ramsey\\Uuid","location":{"uriHash":626267669,"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":22}}}},{"kind":1,"name":"NumberConverterInterface","location":{"uriHash":626267669,"range":{"start":{"line":16,"character":4},"end":{"line":16,"character":50}}},"modifiers":4096,"associated":[{"kind":1,"name":"Ramsey\\Uuid\\Converter\\NumberConverterInterface"}]},{"kind":1,"name":"UnsupportedOperationException","location":{"uriHash":626267669,"range":{"start":{"line":17,"character":4},"end":{"line":17,"character":55}}},"modifiers":4096,"associated":[{"kind":1,"name":"Ramsey\\Uuid\\Exception\\UnsupportedOperationException"}]},{"kind":2,"name":"Ramsey\\Uuid\\UuidInterface","location":{"uriHash":626267669,"range":{"start":{"line":23,"character":0},"end":{"line":269,"character":1}}},"doc":{"description":"UuidInterface defines common functionality for all universally unique\nidentifiers (UUIDs)","type":""},"children":[{"kind":32,"name":"compareTo","location":{"uriHash":626267669,"range":{"start":{"line":38,"character":4},"end":{"line":38,"character":52}}},"doc":{"description":"Compares this UUID to the specified UUID.\n\nThe first of two UUIDs is greater than the second if the most\nsignificant field in which the UUIDs differ is greater for the first\nUUID.\n\n* Q. What's the value of being able to sort UUIDs?\n* A. Use them as keys in a B-Tree or similar mapping.","type":"int"},"modifiers":1,"type":"","children":[{"kind":128,"name":"$other","location":{"uriHash":626267669,"range":{"start":{"line":38,"character":30},"end":{"line":38,"character":50}}},"type":"Ramsey\\Uuid\\UuidInterface","doc":{"description":"UUID to which this UUID is compared","type":"Ramsey\\Uuid\\UuidInterface"},"scope":"compareTo"}],"scope":"Ramsey\\Uuid\\UuidInterface"},{"kind":32,"name":"equals","location":{"uriHash":626267669,"range":{"start":{"line":50,"character":4},"end":{"line":50,"character":35}}},"doc":{"description":"Compares this object to the specified object.\n\nThe result is true if and only if the argument is not null, is a UUID\nobject, has the same variant, and contains the same value, bit for bit,\nas this UUID.","type":"bool"},"modifiers":1,"type":"","children":[{"kind":128,"name":"$other","location":{"uriHash":626267669,"range":{"start":{"line":50,"character":27},"end":{"line":50,"character":33}}},"doc":{"description":"","type":"object"},"scope":"equals"}],"scope":"Ramsey\\Uuid\\UuidInterface"},{"kind":32,"name":"getBytes","location":{"uriHash":626267669,"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":31}}},"doc":{"description":"Returns the UUID as a 16-byte string (containing the six integer fields\nin big-endian byte order).","type":"string"},"modifiers":1,"type":"","children":[],"scope":"Ramsey\\Uuid\\UuidInterface"},{"kind":32,"name":"getNumberConverter","location":{"uriHash":626267669,"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":41}}},"doc":{"description":"Returns the number converter to use for converting hex values to/from integers.","type":"Ramsey\\Uuid\\Converter\\NumberConverterInterface"},"modifiers":1,"type":"","children":[],"scope":"Ramsey\\Uuid\\UuidInterface"},{"kind":32,"name":"getHex","location":{"uriHash":626267669,"range":{"start":{"line":72,"character":4},"end":{"line":72,"character":29}}},"doc":{"description":"Returns the hexadecimal value of the UUID.","type":"string"},"modifiers":1,"type":"","children":[],"scope":"Ramsey\\Uuid\\UuidInterface"},{"kind":32,"name":"getFieldsHex","location":{"uriHash":626267669,"range":{"start":{"line":91,"character":4},"end":{"line":91,"character":35}}},"doc":{"description":"Returns an array of the fields of this UUID, with keys named according\nto the RFC 4122 names for the fields.\n\n* **time_low**: The low field of the timestamp, an unsigned 32-bit integer\n* **time_mid**: The middle field of the timestamp, an unsigned 16-bit integer\n* **time_hi_and_version**: The high field of the timestamp multiplexed with\nthe version number, an unsigned 16-bit integer\n* **clock_seq_hi_and_reserved**: The high field of the clock sequence\nmultiplexed with the variant, an unsigned 8-bit integer\n* **clock_seq_low**: The low field of the clock sequence, an unsigned\n8-bit integer\n* **node**: The spatially unique node identifier, an unsigned 48-bit\ninteger","type":"array"},"modifiers":1,"type":"","children":[],"scope":"Ramsey\\Uuid\\UuidInterface"},{"kind":32,"name":"getClockSeqHiAndReservedHex","location":{"uriHash":626267669,"range":{"start":{"line":99,"character":4},"end":{"line":99,"character":50}}},"doc":{"description":"Returns the high field of the clock sequence multiplexed with the variant\n(bits 65-72 of the UUID).","type":"string"},"modifiers":1,"type":"","children":[],"scope":"Ramsey\\Uuid\\UuidInterface"},{"kind":32,"name":"getClockSeqLowHex","location":{"uriHash":626267669,"range":{"start":{"line":106,"character":4},"end":{"line":106,"character":40}}},"doc":{"description":"Returns the low field of the clock sequence (bits 73-80 of the UUID).","type":"string"},"modifiers":1,"type":"","children":[],"scope":"Ramsey\\Uuid\\UuidInterface"},{"kind":32,"name":"getClockSequenceHex","location":{"uriHash":626267669,"range":{"start":{"line":113,"character":4},"end":{"line":113,"character":42}}},"doc":{"description":"Returns the clock sequence value associated with this UUID.","type":"string"},"modifiers":1,"type":"","children":[],"scope":"Ramsey\\Uuid\\UuidInterface"},{"kind":32,"name":"getDateTime","location":{"uriHash":626267669,"range":{"start":{"line":128,"character":4},"end":{"line":128,"character":34}}},"doc":{"description":"Returns a PHP `DateTime` object representing the timestamp associated\nwith this UUID.\n\nThe timestamp value is only meaningful in a time-based UUID, which\nhas version type 1. If this UUID is not a time-based UUID then\nthis method throws `UnsupportedOperationException`.","type":"DateTime"},"modifiers":1,"type":"","children":[],"scope":"Ramsey\\Uuid\\UuidInterface"},{"kind":32,"name":"getInteger","location":{"uriHash":626267669,"range":{"start":{"line":137,"character":4},"end":{"line":137,"character":33}}},"doc":{"description":"Returns the integer value of the UUID, converted to an appropriate number\nrepresentation.","type":"mixed"},"modifiers":1,"type":"","children":[],"scope":"Ramsey\\Uuid\\UuidInterface"},{"kind":32,"name":"getLeastSignificantBitsHex","location":{"uriHash":626267669,"range":{"start":{"line":144,"character":4},"end":{"line":144,"character":49}}},"doc":{"description":"Returns the least significant 64 bits of this UUID's 128 bit value.","type":"string"},"modifiers":1,"type":"","children":[],"scope":"Ramsey\\Uuid\\UuidInterface"},{"kind":32,"name":"getMostSignificantBitsHex","location":{"uriHash":626267669,"range":{"start":{"line":151,"character":4},"end":{"line":151,"character":48}}},"doc":{"description":"Returns the most significant 64 bits of this UUID's 128 bit value.","type":"string"},"modifiers":1,"type":"","children":[],"scope":"Ramsey\\Uuid\\UuidInterface"},{"kind":32,"name":"getNodeHex","location":{"uriHash":626267669,"range":{"start":{"line":177,"character":4},"end":{"line":177,"character":33}}},"doc":{"description":"Returns the node value associated with this UUID\n\nFor UUID version 1, the node field consists of an IEEE 802 MAC\naddress, usually the host address. For systems with multiple IEEE\n802 addresses, any available one can be used. The lowest addressed\noctet (octet number 10) contains the global/local bit and the\nunicast/multicast bit, and is the first octet of the address\ntransmitted on an 802.3 LAN.\n\nFor systems with no IEEE address, a randomly or pseudo-randomly\ngenerated value may be used; see RFC 4122, Section 4.5. The\nmulticast bit must be set in such addresses, in order that they\nwill never conflict with addresses obtained from network cards.\n\nFor UUID version 3 or 5, the node field is a 48-bit value constructed\nfrom a name as described in RFC 4122, Section 4.3.\n\nFor UUID version 4, the node field is a randomly or pseudo-randomly\ngenerated 48-bit value as described in RFC 4122, Section 4.4.","type":"string"},"modifiers":1,"type":"","children":[],"scope":"Ramsey\\Uuid\\UuidInterface"},{"kind":32,"name":"getTimeHiAndVersionHex","location":{"uriHash":626267669,"range":{"start":{"line":185,"character":4},"end":{"line":185,"character":45}}},"doc":{"description":"Returns the high field of the timestamp multiplexed with the version\nnumber (bits 49-64 of the UUID).","type":"string"},"modifiers":1,"type":"","children":[],"scope":"Ramsey\\Uuid\\UuidInterface"},{"kind":32,"name":"getTimeLowHex","location":{"uriHash":626267669,"range":{"start":{"line":192,"character":4},"end":{"line":192,"character":36}}},"doc":{"description":"Returns the low field of the timestamp (the first 32 bits of the UUID).","type":"string"},"modifiers":1,"type":"","children":[],"scope":"Ramsey\\Uuid\\UuidInterface"},{"kind":32,"name":"getTimeMidHex","location":{"uriHash":626267669,"range":{"start":{"line":199,"character":4},"end":{"line":199,"character":36}}},"doc":{"description":"Returns the middle field of the timestamp (bits 33-48 of the UUID).","type":"string"},"modifiers":1,"type":"","children":[],"scope":"Ramsey\\Uuid\\UuidInterface"},{"kind":32,"name":"getTimestampHex","location":{"uriHash":626267669,"range":{"start":{"line":217,"character":4},"end":{"line":217,"character":38}}},"doc":{"description":"Returns the timestamp value associated with this UUID.\n\nThe 60 bit timestamp value is constructed from the time_low,\ntime_mid, and time_hi fields of this UUID. The resulting\ntimestamp is measured in 100-nanosecond units since midnight,\nOctober 15, 1582 UTC.\n\nThe timestamp value is only meaningful in a time-based UUID, which\nhas version type 1. If this UUID is not a time-based UUID then\nthis method throws UnsupportedOperationException.","type":"string"},"modifiers":1,"type":"","children":[],"scope":"Ramsey\\Uuid\\UuidInterface"},{"kind":32,"name":"getUrn","location":{"uriHash":626267669,"range":{"start":{"line":225,"character":4},"end":{"line":225,"character":29}}},"doc":{"description":"Returns the string representation of the UUID as a URN.","type":"string"},"modifiers":1,"type":"","children":[],"scope":"Ramsey\\Uuid\\UuidInterface"},{"kind":32,"name":"getVariant","location":{"uriHash":626267669,"range":{"start":{"line":241,"character":4},"end":{"line":241,"character":33}}},"doc":{"description":"Returns the variant number associated with this UUID.\n\nThe variant number describes the layout of the UUID. The variant\nnumber has the following meaning:\n\n* 0 - Reserved for NCS backward compatibility\n* 2 - The RFC 4122 variant (used by this class)\n* 6 - Reserved, Microsoft Corporation backward compatibility\n* 7 - Reserved for future definition","type":"int"},"modifiers":1,"type":"","children":[],"scope":"Ramsey\\Uuid\\UuidInterface"},{"kind":32,"name":"getVersion","location":{"uriHash":626267669,"range":{"start":{"line":261,"character":4},"end":{"line":261,"character":33}}},"doc":{"description":"Returns the version number associated with this UUID.\n\nThe version number describes how this UUID was generated and has the\nfollowing meaning:\n\n* 1 - Time-based UUID\n* 2 - DCE security UUID\n* 3 - Name-based UUID hashed with MD5\n* 4 - Randomly generated UUID\n* 5 - Name-based UUID hashed with SHA-1\n\nReturns null if this UUID is not an RFC 4122 variant, since version\nis only meaningful for this variant.","type":"int|null"},"modifiers":1,"type":"","children":[],"scope":"Ramsey\\Uuid\\UuidInterface"},{"kind":32,"name":"toString","location":{"uriHash":626267669,"range":{"start":{"line":268,"character":4},"end":{"line":268,"character":31}}},"doc":{"description":"Converts this UUID into a string representation.","type":"string"},"modifiers":1,"type":"","children":[],"scope":"Ramsey\\Uuid\\UuidInterface"}],"associated":[{"kind":2,"name":"JsonSerializable"},{"kind":2,"name":"Serializable"}]}]},"_hash":626267669}]]