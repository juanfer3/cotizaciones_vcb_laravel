[["file:///home/jfvilladiego/proyectos_laravel/cotizaciones_vcb_laravel/vendor/symfony/http-foundation/Request.php",{"_uri":"file:///home/jfvilladiego/proyectos_laravel/cotizaciones_vcb_laravel/vendor/symfony/http-foundation/Request.php","_root":{"kind":4096,"name":"file:///home/jfvilladiego/proyectos_laravel/cotizaciones_vcb_laravel/vendor/symfony/http-foundation/Request.php","location":{"uriHash":1305804598,"range":{"start":{"line":0,"character":0},"end":{"line":2162,"character":0}}},"children":[{"kind":512,"name":"Symfony\\Component\\HttpFoundation","location":{"uriHash":1305804598,"range":{"start":{"line":11,"character":0},"end":{"line":11,"character":43}}}},{"kind":1,"name":"ConflictingHeadersException","location":{"uriHash":1305804598,"range":{"start":{"line":13,"character":4},"end":{"line":13,"character":74}}},"modifiers":4096,"associated":[{"kind":1,"name":"Symfony\\Component\\HttpFoundation\\Exception\\ConflictingHeadersException"}]},{"kind":1,"name":"SuspiciousOperationException","location":{"uriHash":1305804598,"range":{"start":{"line":14,"character":4},"end":{"line":14,"character":75}}},"modifiers":4096,"associated":[{"kind":1,"name":"Symfony\\Component\\HttpFoundation\\Exception\\SuspiciousOperationException"}]},{"kind":1,"name":"SessionInterface","location":{"uriHash":1305804598,"range":{"start":{"line":15,"character":4},"end":{"line":15,"character":61}}},"modifiers":4096,"associated":[{"kind":1,"name":"Symfony\\Component\\HttpFoundation\\Session\\SessionInterface"}]},{"kind":1,"name":"Symfony\\Component\\HttpFoundation\\Request","location":{"uriHash":1305804598,"range":{"start":{"line":30,"character":0},"end":{"line":2161,"character":1}}},"children":[{"kind":1024,"name":"HEADER_FORWARDED","location":{"uriHash":1305804598,"range":{"start":{"line":32,"character":10},"end":{"line":32,"character":36}}},"modifiers":33,"value":"0b00001","scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":1024,"name":"HEADER_X_FORWARDED_FOR","location":{"uriHash":1305804598,"range":{"start":{"line":33,"character":10},"end":{"line":33,"character":42}}},"modifiers":33,"value":"0b00010","scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":1024,"name":"HEADER_X_FORWARDED_HOST","location":{"uriHash":1305804598,"range":{"start":{"line":34,"character":10},"end":{"line":34,"character":43}}},"modifiers":33,"value":"0b00100","scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":1024,"name":"HEADER_X_FORWARDED_PROTO","location":{"uriHash":1305804598,"range":{"start":{"line":35,"character":10},"end":{"line":35,"character":44}}},"modifiers":33,"value":"0b01000","scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":1024,"name":"HEADER_X_FORWARDED_PORT","location":{"uriHash":1305804598,"range":{"start":{"line":36,"character":10},"end":{"line":36,"character":43}}},"modifiers":33,"value":"0b10000","scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":1024,"name":"HEADER_X_FORWARDED_ALL","location":{"uriHash":1305804598,"range":{"start":{"line":37,"character":10},"end":{"line":37,"character":42}}},"modifiers":33,"value":"0b11110","scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":1024,"name":"HEADER_X_FORWARDED_AWS_ELB","location":{"uriHash":1305804598,"range":{"start":{"line":38,"character":10},"end":{"line":38,"character":46}}},"modifiers":33,"value":"0b11010","scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":1024,"name":"HEADER_CLIENT_IP","location":{"uriHash":1305804598,"range":{"start":{"line":41,"character":10},"end":{"line":41,"character":57}}},"modifiers":33,"value":"self::HEADER_X_FORWARDED_FOR","scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":1024,"name":"HEADER_CLIENT_HOST","location":{"uriHash":1305804598,"range":{"start":{"line":43,"character":10},"end":{"line":43,"character":60}}},"modifiers":33,"value":"self::HEADER_X_FORWARDED_HOST","scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":1024,"name":"HEADER_CLIENT_PROTO","location":{"uriHash":1305804598,"range":{"start":{"line":45,"character":10},"end":{"line":45,"character":62}}},"modifiers":33,"value":"self::HEADER_X_FORWARDED_PROTO","scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":1024,"name":"HEADER_CLIENT_PORT","location":{"uriHash":1305804598,"range":{"start":{"line":47,"character":10},"end":{"line":47,"character":60}}},"modifiers":33,"value":"self::HEADER_X_FORWARDED_PORT","scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":1024,"name":"METHOD_HEAD","location":{"uriHash":1305804598,"range":{"start":{"line":49,"character":10},"end":{"line":49,"character":30}}},"modifiers":33,"value":"'HEAD'","scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":1024,"name":"METHOD_GET","location":{"uriHash":1305804598,"range":{"start":{"line":50,"character":10},"end":{"line":50,"character":28}}},"modifiers":33,"value":"'GET'","scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":1024,"name":"METHOD_POST","location":{"uriHash":1305804598,"range":{"start":{"line":51,"character":10},"end":{"line":51,"character":30}}},"modifiers":33,"value":"'POST'","scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":1024,"name":"METHOD_PUT","location":{"uriHash":1305804598,"range":{"start":{"line":52,"character":10},"end":{"line":52,"character":28}}},"modifiers":33,"value":"'PUT'","scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":1024,"name":"METHOD_PATCH","location":{"uriHash":1305804598,"range":{"start":{"line":53,"character":10},"end":{"line":53,"character":32}}},"modifiers":33,"value":"'PATCH'","scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":1024,"name":"METHOD_DELETE","location":{"uriHash":1305804598,"range":{"start":{"line":54,"character":10},"end":{"line":54,"character":34}}},"modifiers":33,"value":"'DELETE'","scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":1024,"name":"METHOD_PURGE","location":{"uriHash":1305804598,"range":{"start":{"line":55,"character":10},"end":{"line":55,"character":32}}},"modifiers":33,"value":"'PURGE'","scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":1024,"name":"METHOD_OPTIONS","location":{"uriHash":1305804598,"range":{"start":{"line":56,"character":10},"end":{"line":56,"character":36}}},"modifiers":33,"value":"'OPTIONS'","scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":1024,"name":"METHOD_TRACE","location":{"uriHash":1305804598,"range":{"start":{"line":57,"character":10},"end":{"line":57,"character":32}}},"modifiers":33,"value":"'TRACE'","scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":1024,"name":"METHOD_CONNECT","location":{"uriHash":1305804598,"range":{"start":{"line":58,"character":10},"end":{"line":58,"character":36}}},"modifiers":33,"value":"'CONNECT'","scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":16,"name":"$trustedProxies","location":{"uriHash":1305804598,"range":{"start":{"line":63,"character":21},"end":{"line":63,"character":46}}},"doc":{"description":"","type":"string[]"},"value":"","modifiers":34,"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":16,"name":"$trustedHostPatterns","location":{"uriHash":1305804598,"range":{"start":{"line":68,"character":21},"end":{"line":68,"character":51}}},"doc":{"description":"","type":"string[]"},"value":"","modifiers":34,"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":16,"name":"$trustedHosts","location":{"uriHash":1305804598,"range":{"start":{"line":73,"character":21},"end":{"line":73,"character":44}}},"doc":{"description":"","type":"string[]"},"value":"","modifiers":34,"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":16,"name":"$trustedHeaders","location":{"uriHash":1305804598,"range":{"start":{"line":86,"character":21},"end":{"line":92,"character":5}}},"value":"","modifiers":34,"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":16,"name":"$httpMethodParameterOverride","location":{"uriHash":1305804598,"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":57}}},"value":"","modifiers":34,"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":16,"name":"$attributes","location":{"uriHash":1305804598,"range":{"start":{"line":101,"character":11},"end":{"line":101,"character":22}}},"doc":{"description":"","type":"Symfony\\Component\\HttpFoundation\\ParameterBag"},"modifiers":1,"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":16,"name":"$request","location":{"uriHash":1305804598,"range":{"start":{"line":108,"character":11},"end":{"line":108,"character":19}}},"doc":{"description":"","type":"Symfony\\Component\\HttpFoundation\\ParameterBag"},"modifiers":1,"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":16,"name":"$query","location":{"uriHash":1305804598,"range":{"start":{"line":115,"character":11},"end":{"line":115,"character":17}}},"doc":{"description":"","type":"Symfony\\Component\\HttpFoundation\\ParameterBag"},"modifiers":1,"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":16,"name":"$server","location":{"uriHash":1305804598,"range":{"start":{"line":122,"character":11},"end":{"line":122,"character":18}}},"doc":{"description":"","type":"Symfony\\Component\\HttpFoundation\\ServerBag"},"modifiers":1,"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":16,"name":"$files","location":{"uriHash":1305804598,"range":{"start":{"line":129,"character":11},"end":{"line":129,"character":17}}},"doc":{"description":"","type":"Symfony\\Component\\HttpFoundation\\FileBag"},"modifiers":1,"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":16,"name":"$cookies","location":{"uriHash":1305804598,"range":{"start":{"line":136,"character":11},"end":{"line":136,"character":19}}},"doc":{"description":"","type":"Symfony\\Component\\HttpFoundation\\ParameterBag"},"modifiers":1,"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":16,"name":"$headers","location":{"uriHash":1305804598,"range":{"start":{"line":143,"character":11},"end":{"line":143,"character":19}}},"doc":{"description":"","type":"Symfony\\Component\\HttpFoundation\\HeaderBag"},"modifiers":1,"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":16,"name":"$content","location":{"uriHash":1305804598,"range":{"start":{"line":148,"character":14},"end":{"line":148,"character":22}}},"doc":{"description":"","type":"string|resource|false|null"},"modifiers":2,"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":16,"name":"$languages","location":{"uriHash":1305804598,"range":{"start":{"line":153,"character":14},"end":{"line":153,"character":24}}},"doc":{"description":"","type":"array"},"modifiers":2,"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":16,"name":"$charsets","location":{"uriHash":1305804598,"range":{"start":{"line":158,"character":14},"end":{"line":158,"character":23}}},"doc":{"description":"","type":"array"},"modifiers":2,"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":16,"name":"$encodings","location":{"uriHash":1305804598,"range":{"start":{"line":163,"character":14},"end":{"line":163,"character":24}}},"doc":{"description":"","type":"array"},"modifiers":2,"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":16,"name":"$acceptableContentTypes","location":{"uriHash":1305804598,"range":{"start":{"line":168,"character":14},"end":{"line":168,"character":37}}},"doc":{"description":"","type":"array"},"modifiers":2,"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":16,"name":"$pathInfo","location":{"uriHash":1305804598,"range":{"start":{"line":173,"character":14},"end":{"line":173,"character":23}}},"doc":{"description":"","type":"string"},"modifiers":2,"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":16,"name":"$requestUri","location":{"uriHash":1305804598,"range":{"start":{"line":178,"character":14},"end":{"line":178,"character":25}}},"doc":{"description":"","type":"string"},"modifiers":2,"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":16,"name":"$baseUrl","location":{"uriHash":1305804598,"range":{"start":{"line":183,"character":14},"end":{"line":183,"character":22}}},"doc":{"description":"","type":"string"},"modifiers":2,"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":16,"name":"$basePath","location":{"uriHash":1305804598,"range":{"start":{"line":188,"character":14},"end":{"line":188,"character":23}}},"doc":{"description":"","type":"string"},"modifiers":2,"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":16,"name":"$method","location":{"uriHash":1305804598,"range":{"start":{"line":193,"character":14},"end":{"line":193,"character":21}}},"doc":{"description":"","type":"string"},"modifiers":2,"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":16,"name":"$format","location":{"uriHash":1305804598,"range":{"start":{"line":198,"character":14},"end":{"line":198,"character":21}}},"doc":{"description":"","type":"string"},"modifiers":2,"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":16,"name":"$session","location":{"uriHash":1305804598,"range":{"start":{"line":203,"character":14},"end":{"line":203,"character":22}}},"doc":{"description":"","type":"Symfony\\Component\\HttpFoundation\\Session\\SessionInterface"},"modifiers":2,"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":16,"name":"$locale","location":{"uriHash":1305804598,"range":{"start":{"line":208,"character":14},"end":{"line":208,"character":21}}},"doc":{"description":"","type":"string"},"modifiers":2,"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":16,"name":"$defaultLocale","location":{"uriHash":1305804598,"range":{"start":{"line":213,"character":14},"end":{"line":213,"character":35}}},"doc":{"description":"","type":"string"},"value":"'en'","modifiers":2,"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":16,"name":"$formats","location":{"uriHash":1305804598,"range":{"start":{"line":218,"character":21},"end":{"line":218,"character":29}}},"doc":{"description":"","type":"array"},"modifiers":34,"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":16,"name":"$requestFactory","location":{"uriHash":1305804598,"range":{"start":{"line":220,"character":21},"end":{"line":220,"character":36}}},"doc":{"description":"","type":"array"},"modifiers":34,"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":16,"name":"$isHostValid","location":{"uriHash":1305804598,"range":{"start":{"line":222,"character":12},"end":{"line":222,"character":31}}},"doc":{"description":"","type":"array"},"value":"","modifiers":4,"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":16,"name":"$isForwardedValid","location":{"uriHash":1305804598,"range":{"start":{"line":223,"character":12},"end":{"line":223,"character":36}}},"doc":{"description":"","type":"array"},"value":"","modifiers":4,"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":16,"name":"$trustedHeaderSet","location":{"uriHash":1305804598,"range":{"start":{"line":225,"character":19},"end":{"line":225,"character":41}}},"doc":{"description":"","type":"array"},"value":"","modifiers":36,"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":16,"name":"$trustedHeaderNames","location":{"uriHash":1305804598,"range":{"start":{"line":228,"character":19},"end":{"line":234,"character":5}}},"value":"","modifiers":36,"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":16,"name":"$forwardedParams","location":{"uriHash":1305804598,"range":{"start":{"line":236,"character":19},"end":{"line":241,"character":5}}},"value":"","modifiers":36,"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"__construct","location":{"uriHash":1305804598,"range":{"start":{"line":252,"character":4},"end":{"line":255,"character":5}}},"doc":{"description":"","type":""},"modifiers":1,"type":"","children":[{"kind":128,"name":"$query","location":{"uriHash":1305804598,"range":{"start":{"line":252,"character":32},"end":{"line":252,"character":54}}},"type":"array","doc":{"description":"The GET parameters","type":"array"},"value":"array()","scope":"__construct"},{"kind":128,"name":"$request","location":{"uriHash":1305804598,"range":{"start":{"line":252,"character":56},"end":{"line":252,"character":80}}},"type":"array","doc":{"description":"The POST parameters","type":"array"},"value":"array()","scope":"__construct"},{"kind":128,"name":"$attributes","location":{"uriHash":1305804598,"range":{"start":{"line":252,"character":82},"end":{"line":252,"character":109}}},"type":"array","doc":{"description":"The request attributes (parameters parsed from the PATH_INFO, ...)","type":"array"},"value":"array()","scope":"__construct"},{"kind":128,"name":"$cookies","location":{"uriHash":1305804598,"range":{"start":{"line":252,"character":111},"end":{"line":252,"character":135}}},"type":"array","doc":{"description":"The COOKIE parameters","type":"array"},"value":"array()","scope":"__construct"},{"kind":128,"name":"$files","location":{"uriHash":1305804598,"range":{"start":{"line":252,"character":137},"end":{"line":252,"character":159}}},"type":"array","doc":{"description":"The FILES parameters","type":"array"},"value":"array()","scope":"__construct"},{"kind":128,"name":"$server","location":{"uriHash":1305804598,"range":{"start":{"line":252,"character":161},"end":{"line":252,"character":184}}},"type":"array","doc":{"description":"The SERVER parameters","type":"array"},"value":"array()","scope":"__construct"},{"kind":128,"name":"$content","location":{"uriHash":1305804598,"range":{"start":{"line":252,"character":186},"end":{"line":252,"character":201}}},"doc":{"description":"The raw body data","type":"string|resource|null"},"value":"null","scope":"__construct"}],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"initialize","location":{"uriHash":1305804598,"range":{"start":{"line":270,"character":4},"end":{"line":291,"character":5}}},"doc":{"description":"Sets the parameters for this request.\n\nThis method also re-initializes all properties.","type":""},"modifiers":1,"type":"","children":[{"kind":128,"name":"$query","location":{"uriHash":1305804598,"range":{"start":{"line":270,"character":31},"end":{"line":270,"character":53}}},"type":"array","doc":{"description":"The GET parameters","type":"array"},"value":"array()","scope":"initialize"},{"kind":128,"name":"$request","location":{"uriHash":1305804598,"range":{"start":{"line":270,"character":55},"end":{"line":270,"character":79}}},"type":"array","doc":{"description":"The POST parameters","type":"array"},"value":"array()","scope":"initialize"},{"kind":128,"name":"$attributes","location":{"uriHash":1305804598,"range":{"start":{"line":270,"character":81},"end":{"line":270,"character":108}}},"type":"array","doc":{"description":"The request attributes (parameters parsed from the PATH_INFO, ...)","type":"array"},"value":"array()","scope":"initialize"},{"kind":128,"name":"$cookies","location":{"uriHash":1305804598,"range":{"start":{"line":270,"character":110},"end":{"line":270,"character":134}}},"type":"array","doc":{"description":"The COOKIE parameters","type":"array"},"value":"array()","scope":"initialize"},{"kind":128,"name":"$files","location":{"uriHash":1305804598,"range":{"start":{"line":270,"character":136},"end":{"line":270,"character":158}}},"type":"array","doc":{"description":"The FILES parameters","type":"array"},"value":"array()","scope":"initialize"},{"kind":128,"name":"$server","location":{"uriHash":1305804598,"range":{"start":{"line":270,"character":160},"end":{"line":270,"character":183}}},"type":"array","doc":{"description":"The SERVER parameters","type":"array"},"value":"array()","scope":"initialize"},{"kind":128,"name":"$content","location":{"uriHash":1305804598,"range":{"start":{"line":270,"character":185},"end":{"line":270,"character":200}}},"doc":{"description":"The raw body data","type":"string|resource|null"},"value":"null","scope":"initialize"}],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"createFromGlobals","location":{"uriHash":1305804598,"range":{"start":{"line":298,"character":4},"end":{"line":323,"character":5}}},"doc":{"description":"Creates a new request with values from PHP's super globals.","type":"static"},"modifiers":33,"type":"","children":[],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"create","location":{"uriHash":1305804598,"range":{"start":{"line":341,"character":4},"end":{"line":431,"character":5}}},"doc":{"description":"Creates a Request based on a given URI and configuration.\n\nThe information contained in the URI always take precedence\nover the other information (server and parameters).","type":"static"},"modifiers":33,"type":"","children":[{"kind":128,"name":"$uri","location":{"uriHash":1305804598,"range":{"start":{"line":341,"character":34},"end":{"line":341,"character":38}}},"doc":{"description":"The URI","type":"string"},"scope":"create"},{"kind":128,"name":"$method","location":{"uriHash":1305804598,"range":{"start":{"line":341,"character":40},"end":{"line":341,"character":55}}},"doc":{"description":"The HTTP method","type":"string"},"value":"'GET'","scope":"create"},{"kind":128,"name":"$parameters","location":{"uriHash":1305804598,"range":{"start":{"line":341,"character":57},"end":{"line":341,"character":78}}},"doc":{"description":"The query (GET) or request (POST) parameters","type":"array"},"value":"array()","scope":"create"},{"kind":128,"name":"$cookies","location":{"uriHash":1305804598,"range":{"start":{"line":341,"character":80},"end":{"line":341,"character":98}}},"doc":{"description":"The request cookies ($_COOKIE)","type":"array"},"value":"array()","scope":"create"},{"kind":128,"name":"$files","location":{"uriHash":1305804598,"range":{"start":{"line":341,"character":100},"end":{"line":341,"character":116}}},"doc":{"description":"The request files ($_FILES)","type":"array"},"value":"array()","scope":"create"},{"kind":128,"name":"$server","location":{"uriHash":1305804598,"range":{"start":{"line":341,"character":118},"end":{"line":341,"character":135}}},"doc":{"description":"The server parameters ($_SERVER)","type":"array"},"value":"array()","scope":"create"},{"kind":128,"name":"$content","location":{"uriHash":1305804598,"range":{"start":{"line":341,"character":137},"end":{"line":341,"character":152}}},"doc":{"description":"The raw body data\n","type":"string|resource|null"},"value":"null","scope":"create"}],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"setFactory","location":{"uriHash":1305804598,"range":{"start":{"line":442,"character":4},"end":{"line":445,"character":5}}},"doc":{"description":"Sets a callable able to create a Request instance.\n\nThis is mainly useful when you need to override the Request class\nto keep BC with an existing system. It should not be used for any\nother purpose.","type":""},"modifiers":33,"type":"","children":[{"kind":128,"name":"$callable","location":{"uriHash":1305804598,"range":{"start":{"line":442,"character":38},"end":{"line":442,"character":47}}},"doc":{"description":"A PHP callable","type":"callable|null"},"scope":"setFactory"}],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"duplicate","location":{"uriHash":1305804598,"range":{"start":{"line":459,"character":4},"end":{"line":501,"character":5}}},"doc":{"description":"Clones a request and overrides some of its parameters.","type":"static"},"modifiers":1,"type":"","children":[{"kind":128,"name":"$query","location":{"uriHash":1305804598,"range":{"start":{"line":459,"character":30},"end":{"line":459,"character":49}}},"type":"array","doc":{"description":"The GET parameters","type":"array"},"value":"null","scope":"duplicate"},{"kind":128,"name":"$request","location":{"uriHash":1305804598,"range":{"start":{"line":459,"character":51},"end":{"line":459,"character":72}}},"type":"array","doc":{"description":"The POST parameters","type":"array"},"value":"null","scope":"duplicate"},{"kind":128,"name":"$attributes","location":{"uriHash":1305804598,"range":{"start":{"line":459,"character":74},"end":{"line":459,"character":98}}},"type":"array","doc":{"description":"The request attributes (parameters parsed from the PATH_INFO, ...)","type":"array"},"value":"null","scope":"duplicate"},{"kind":128,"name":"$cookies","location":{"uriHash":1305804598,"range":{"start":{"line":459,"character":100},"end":{"line":459,"character":121}}},"type":"array","doc":{"description":"The COOKIE parameters","type":"array"},"value":"null","scope":"duplicate"},{"kind":128,"name":"$files","location":{"uriHash":1305804598,"range":{"start":{"line":459,"character":123},"end":{"line":459,"character":142}}},"type":"array","doc":{"description":"The FILES parameters","type":"array"},"value":"null","scope":"duplicate"},{"kind":128,"name":"$server","location":{"uriHash":1305804598,"range":{"start":{"line":459,"character":144},"end":{"line":459,"character":164}}},"type":"array","doc":{"description":"The SERVER parameters\n","type":"array"},"value":"null","scope":"duplicate"}],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"__clone","location":{"uriHash":1305804598,"range":{"start":{"line":509,"character":4},"end":{"line":518,"character":5}}},"doc":{"description":"Clones the current request.\n\nNote that the session is not cloned as duplicated requests\nare most of the time sub-requests of the main one.","type":""},"modifiers":1,"type":"","children":[],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"__toString","location":{"uriHash":1305804598,"range":{"start":{"line":525,"character":4},"end":{"line":549,"character":5}}},"doc":{"description":"Returns the request as a string.","type":"string"},"modifiers":1,"type":"","children":[],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"overrideGlobals","location":{"uriHash":1305804598,"range":{"start":{"line":557,"character":4},"end":{"line":584,"character":5}}},"doc":{"description":"Overrides the PHP global variables according to this request instance.\n\nIt overrides $_GET, $_POST, $_REQUEST, $_SERVER, $_COOKIE.\n$_FILES is never overridden, see rfc1867","type":""},"modifiers":1,"type":"","children":[],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"setTrustedProxies","location":{"uriHash":1305804598,"range":{"start":{"line":596,"character":4},"end":{"line":611,"character":5}}},"doc":{"description":"Sets a list of trusted proxies.\n\nYou should only list the reverse proxies that you manage directly.","type":""},"modifiers":33,"type":"","children":[{"kind":128,"name":"$proxies","location":{"uriHash":1305804598,"range":{"start":{"line":596,"character":45},"end":{"line":596,"character":59}}},"type":"array","doc":{"description":"A list of trusted proxies","type":"array"},"scope":"setTrustedProxies"}],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"getTrustedProxies","location":{"uriHash":1305804598,"range":{"start":{"line":618,"character":4},"end":{"line":621,"character":5}}},"doc":{"description":"Gets the list of trusted proxies.","type":"array"},"modifiers":33,"type":"","children":[],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"getTrustedHeaderSet","location":{"uriHash":1305804598,"range":{"start":{"line":628,"character":4},"end":{"line":631,"character":5}}},"doc":{"description":"Gets the set of trusted headers from trusted proxies.","type":"int"},"modifiers":33,"type":"","children":[],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"setTrustedHosts","location":{"uriHash":1305804598,"range":{"start":{"line":640,"character":4},"end":{"line":647,"character":5}}},"doc":{"description":"Sets a list of trusted host patterns.\n\nYou should only list the hosts you manage using regexs.","type":""},"modifiers":33,"type":"","children":[{"kind":128,"name":"$hostPatterns","location":{"uriHash":1305804598,"range":{"start":{"line":640,"character":43},"end":{"line":640,"character":62}}},"type":"array","doc":{"description":"A list of trusted host patterns","type":"array"},"scope":"setTrustedHosts"},{"kind":64,"name":"#anon#file:///home/jfvilladiego/proyectos_laravel/cotizaciones_vcb_laravel/vendor/symfony/http-foundation/Request.php#20472","location":{"uriHash":1305804598,"range":{"start":{"line":642,"character":47},"end":{"line":644,"character":9}}},"modifiers":512,"type":"","children":[{"kind":128,"name":"$hostPattern","location":{"uriHash":1305804598,"range":{"start":{"line":642,"character":57},"end":{"line":642,"character":69}}},"scope":"#anon#file:///home/jfvilladiego/proyectos_laravel/cotizaciones_vcb_laravel/vendor/symfony/http-foundation/Request.php#20472"}],"scope":"setTrustedHosts"}],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"getTrustedHosts","location":{"uriHash":1305804598,"range":{"start":{"line":654,"character":4},"end":{"line":657,"character":5}}},"doc":{"description":"Gets the list of trusted host patterns.","type":"array"},"modifiers":33,"type":"","children":[],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"setTrustedHeaderName","location":{"uriHash":1305804598,"range":{"start":{"line":679,"character":4},"end":{"line":705,"character":5}}},"doc":{"description":"Sets the name for trusted headers.\n\nThe following header keys are supported:\n\n* Request::HEADER_CLIENT_IP:    defaults to X-Forwarded-For   (see getClientIp())\n* Request::HEADER_CLIENT_HOST:  defaults to X-Forwarded-Host  (see getHost())\n* Request::HEADER_CLIENT_PORT:  defaults to X-Forwarded-Port  (see getPort())\n* Request::HEADER_CLIENT_PROTO: defaults to X-Forwarded-Proto (see getScheme() and isSecure())\n* Request::HEADER_FORWARDED:    defaults to Forwarded         (see RFC 7239)\n\nSetting an empty value allows to disable the trusted header for the given key.","type":""},"modifiers":33,"type":"","children":[{"kind":128,"name":"$key","location":{"uriHash":1305804598,"range":{"start":{"line":679,"character":48},"end":{"line":679,"character":52}}},"doc":{"description":"The header key","type":"string"},"scope":"setTrustedHeaderName"},{"kind":128,"name":"$value","location":{"uriHash":1305804598,"range":{"start":{"line":679,"character":54},"end":{"line":679,"character":60}}},"doc":{"description":"The header name\n","type":"string"},"scope":"setTrustedHeaderName"}],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"getTrustedHeaderName","location":{"uriHash":1305804598,"range":{"start":{"line":718,"character":4},"end":{"line":729,"character":5}}},"doc":{"description":"Gets the trusted proxy header name.","type":"string"},"modifiers":33,"type":"","children":[{"kind":128,"name":"$key","location":{"uriHash":1305804598,"range":{"start":{"line":718,"character":48},"end":{"line":718,"character":52}}},"doc":{"description":"The header key\n","type":"string"},"scope":"getTrustedHeaderName"}],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"normalizeQueryString","location":{"uriHash":1305804598,"range":{"start":{"line":741,"character":4},"end":{"line":772,"character":5}}},"doc":{"description":"Normalizes a query string.\n\nIt builds a normalized query string, where keys/value pairs are alphabetized,\nhave consistent escaping and unneeded delimiters are removed.","type":"string"},"modifiers":33,"type":"","children":[{"kind":128,"name":"$qs","location":{"uriHash":1305804598,"range":{"start":{"line":741,"character":48},"end":{"line":741,"character":51}}},"doc":{"description":"Query string\n","type":"string"},"scope":"normalizeQueryString"}],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"enableHttpMethodParameterOverride","location":{"uriHash":1305804598,"range":{"start":{"line":785,"character":4},"end":{"line":788,"character":5}}},"doc":{"description":"Enables support for the _method request parameter to determine the intended HTTP method.\n\nBe warned that enabling this feature might lead to CSRF issues in your code.\nCheck that you are using CSRF tokens when required.\nIf the HTTP method parameter override is enabled, an html-form with method \"POST\" can be altered\nand used to send a \"PUT\" or \"DELETE\" request via the _method request parameter.\nIf these methods are not protected against CSRF, this presents a possible vulnerability.\n\nThe HTTP method can only be overridden when the real HTTP method is POST.","type":""},"modifiers":33,"type":"","children":[],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"getHttpMethodParameterOverride","location":{"uriHash":1305804598,"range":{"start":{"line":795,"character":4},"end":{"line":798,"character":5}}},"doc":{"description":"Checks whether support for the _method request parameter is enabled.","type":"bool"},"modifiers":33,"type":"","children":[],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"get","location":{"uriHash":1305804598,"range":{"start":{"line":814,"character":4},"end":{"line":829,"character":5}}},"doc":{"description":"Gets a \"parameter\" value from any bag.\n\nThis method is mainly useful for libraries that want to provide some flexibility. If you don't need the\nflexibility in controllers, it is better to explicitly get request parameters from the appropriate\npublic property instead (attributes, query, request).\n\nOrder of precedence: PATH (routing placeholders or custom attributes), GET, BODY","type":"mixed"},"modifiers":1,"type":"","children":[{"kind":128,"name":"$key","location":{"uriHash":1305804598,"range":{"start":{"line":814,"character":24},"end":{"line":814,"character":28}}},"doc":{"description":"The key","type":"string"},"scope":"get"},{"kind":128,"name":"$default","location":{"uriHash":1305804598,"range":{"start":{"line":814,"character":30},"end":{"line":814,"character":45}}},"doc":{"description":"The default value if the parameter key does not exist\n","type":"mixed"},"value":"null","scope":"get"}],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"getSession","location":{"uriHash":1305804598,"range":{"start":{"line":836,"character":4},"end":{"line":839,"character":5}}},"doc":{"description":"Gets the Session.","type":"Symfony\\Component\\HttpFoundation\\Session\\SessionInterface|null"},"modifiers":1,"type":"","children":[],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"hasPreviousSession","location":{"uriHash":1305804598,"range":{"start":{"line":847,"character":4},"end":{"line":851,"character":5}}},"doc":{"description":"Whether the request contains a Session which was started in one of the\nprevious requests.","type":"bool"},"modifiers":1,"type":"","children":[],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"hasSession","location":{"uriHash":1305804598,"range":{"start":{"line":862,"character":4},"end":{"line":865,"character":5}}},"doc":{"description":"Whether the request contains a Session object.\n\nThis method does not give any information about the state of the session object,\nlike whether the session is started or not. It is just a way to check if this Request\nis associated with a Session instance.","type":"bool"},"modifiers":1,"type":"","children":[],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"setSession","location":{"uriHash":1305804598,"range":{"start":{"line":872,"character":4},"end":{"line":875,"character":5}}},"doc":{"description":"Sets the Session.","type":""},"modifiers":1,"type":"","children":[{"kind":128,"name":"$session","location":{"uriHash":1305804598,"range":{"start":{"line":872,"character":31},"end":{"line":872,"character":56}}},"type":"Symfony\\Component\\HttpFoundation\\Session\\SessionInterface","doc":{"description":"The Session","type":"Symfony\\Component\\HttpFoundation\\Session\\SessionInterface"},"scope":"setSession"}],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"getClientIps","location":{"uriHash":1305804598,"range":{"start":{"line":890,"character":4},"end":{"line":899,"character":5}}},"doc":{"description":"Returns the client IP addresses.\n\nIn the returned array the most trusted IP address is first, and the\nleast trusted one last. The \"real\" client IP address is the last one,\nbut this is also the least trusted one. Trusted proxies are stripped.\n\nUse this method carefully; you should use getClientIp() instead.","type":"array"},"modifiers":1,"type":"","children":[],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"getClientIp","location":{"uriHash":1305804598,"range":{"start":{"line":919,"character":4},"end":{"line":924,"character":5}}},"doc":{"description":"Returns the client IP address.\n\nThis method can read the client IP address from the \"X-Forwarded-For\" header\nwhen trusted proxies were set via \"setTrustedProxies()\". The \"X-Forwarded-For\"\nheader value is a comma+space separated list of IP addresses, the left-most\nbeing the original client, and each successive proxy that passed the request\nadding the IP address where it received the request from.\n\nIf your reverse proxy uses a different header name than \"X-Forwarded-For\",\n(\"Client-Ip\" for instance), configure it via the $trustedHeaderSet\nargument of the Request::setTrustedProxies() method instead.","type":"string|null"},"modifiers":1,"type":"","children":[],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"getScriptName","location":{"uriHash":1305804598,"range":{"start":{"line":931,"character":4},"end":{"line":934,"character":5}}},"doc":{"description":"Returns current script name.","type":"string"},"modifiers":1,"type":"","children":[],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"getPathInfo","location":{"uriHash":1305804598,"range":{"start":{"line":950,"character":4},"end":{"line":957,"character":5}}},"doc":{"description":"Returns the path being requested relative to the executed script.\n\nThe path info always starts with a /.\n\nSuppose this request is instantiated from /mysite on localhost:\n\n* http://localhost/mysite              returns an empty string\n* http://localhost/mysite/about        returns '/about'\n* http://localhost/mysite/enco%20ded   returns '/enco%20ded'\n* http://localhost/mysite/about?var=1  returns '/about'","type":"string"},"modifiers":1,"type":"","children":[],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"getBasePath","location":{"uriHash":1305804598,"range":{"start":{"line":971,"character":4},"end":{"line":978,"character":5}}},"doc":{"description":"Returns the root path from which this request is executed.\n\nSuppose that an index.php file instantiates this request object:\n\n* http://localhost/index.php         returns an empty string\n* http://localhost/index.php/page    returns an empty string\n* http://localhost/web/index.php     returns '/web'\n* http://localhost/we%20b/index.php  returns '/we%20b'","type":"string"},"modifiers":1,"type":"","children":[],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"getBaseUrl","location":{"uriHash":1305804598,"range":{"start":{"line":990,"character":4},"end":{"line":997,"character":5}}},"doc":{"description":"Returns the root URL from which this request is executed.\n\nThe base URL never ends with a /.\n\nThis is similar to getBasePath(), except that it also includes the\nscript filename (e.g. index.php) if one exists.","type":"string"},"modifiers":1,"type":"","children":[],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"getScheme","location":{"uriHash":1305804598,"range":{"start":{"line":1004,"character":4},"end":{"line":1007,"character":5}}},"doc":{"description":"Gets the request's scheme.","type":"string"},"modifiers":1,"type":"","children":[],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"getPort","location":{"uriHash":1305804598,"range":{"start":{"line":1023,"character":4},"end":{"line":1044,"character":5}}},"doc":{"description":"Returns the port on which the request is made.\n\nThis method can read the client port from the \"X-Forwarded-Port\" header\nwhen trusted proxies were set via \"setTrustedProxies()\".\n\nThe \"X-Forwarded-Port\" header must contain the client port.\n\nIf your reverse proxy uses a different header name than \"X-Forwarded-Port\",\nconfigure it via via the $trustedHeaderSet argument of the\nRequest::setTrustedProxies() method instead.","type":"int|string"},"modifiers":1,"type":"","children":[],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"getUser","location":{"uriHash":1305804598,"range":{"start":{"line":1051,"character":4},"end":{"line":1054,"character":5}}},"doc":{"description":"Returns the user.","type":"string|null"},"modifiers":1,"type":"","children":[],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"getPassword","location":{"uriHash":1305804598,"range":{"start":{"line":1061,"character":4},"end":{"line":1064,"character":5}}},"doc":{"description":"Returns the password.","type":"string|null"},"modifiers":1,"type":"","children":[],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"getUserInfo","location":{"uriHash":1305804598,"range":{"start":{"line":1071,"character":4},"end":{"line":1081,"character":5}}},"doc":{"description":"Gets the user info.","type":"string"},"modifiers":1,"type":"","children":[],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"getHttpHost","location":{"uriHash":1305804598,"range":{"start":{"line":1090,"character":4},"end":{"line":1100,"character":5}}},"doc":{"description":"Returns the HTTP host being requested.\n\nThe port name will be appended to the host if it's non-standard.","type":"string"},"modifiers":1,"type":"","children":[],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"getRequestUri","location":{"uriHash":1305804598,"range":{"start":{"line":1107,"character":4},"end":{"line":1114,"character":5}}},"doc":{"description":"Returns the requested URI (path and query string).","type":"string"},"modifiers":1,"type":"","children":[],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"getSchemeAndHttpHost","location":{"uriHash":1305804598,"range":{"start":{"line":1124,"character":4},"end":{"line":1127,"character":5}}},"doc":{"description":"Gets the scheme and HTTP host.\n\nIf the URL was called with basic authentication, the user\nand the password are not added to the generated string.","type":"string"},"modifiers":1,"type":"","children":[],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"getUri","location":{"uriHash":1305804598,"range":{"start":{"line":1136,"character":4},"end":{"line":1143,"character":5}}},"doc":{"description":"Generates a normalized URI (URL) for the Request.","type":"string"},"modifiers":1,"type":"","children":[],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"getUriForPath","location":{"uriHash":1305804598,"range":{"start":{"line":1152,"character":4},"end":{"line":1155,"character":5}}},"doc":{"description":"Generates a normalized URI for the given path.","type":"string"},"modifiers":1,"type":"","children":[{"kind":128,"name":"$path","location":{"uriHash":1305804598,"range":{"start":{"line":1152,"character":34},"end":{"line":1152,"character":39}}},"doc":{"description":"A path to use instead of the current one\n","type":"string"},"scope":"getUriForPath"}],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"getRelativeUriForPath","location":{"uriHash":1305804598,"range":{"start":{"line":1176,"character":4},"end":{"line":1210,"character":5}}},"doc":{"description":"Returns the path as relative reference from the current Request path.\n\nOnly the URIs path component (no schema, host etc.) is relevant and must be given.\nBoth paths must be absolute and not contain relative parts.\nRelative URLs from one resource to another are useful when generating self-contained downloadable document archives.\nFurthermore, they can be used to reduce the link size in documents.\n\nExample target paths, given a base path of \"/a/b/c/d\":\n- \"/a/b/c/d\"     -> \"\"\n- \"/a/b/c/\"      -> \"./\"\n- \"/a/b/\"        -> \"../\"\n- \"/a/b/c/other\" -> \"other\"\n- \"/a/x/y\"       -> \"../../x/y\"","type":"string"},"modifiers":1,"type":"","children":[{"kind":128,"name":"$path","location":{"uriHash":1305804598,"range":{"start":{"line":1176,"character":42},"end":{"line":1176,"character":47}}},"doc":{"description":"The target path\n","type":"string"},"scope":"getRelativeUriForPath"}],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"getQueryString","location":{"uriHash":1305804598,"range":{"start":{"line":1220,"character":4},"end":{"line":1225,"character":5}}},"doc":{"description":"Generates the normalized query string for the Request.\n\nIt builds a normalized query string, where keys/value pairs are alphabetized\nand have consistent escaping.","type":"string|null"},"modifiers":1,"type":"","children":[],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"isSecure","location":{"uriHash":1305804598,"range":{"start":{"line":1241,"character":4},"end":{"line":1250,"character":5}}},"doc":{"description":"Checks whether the request is secure or not.\n\nThis method can read the client protocol from the \"X-Forwarded-Proto\" header\nwhen trusted proxies were set via \"setTrustedProxies()\".\n\nThe \"X-Forwarded-Proto\" header must contain the protocol: \"https\" or \"http\".\n\nIf your reverse proxy uses a different header name than \"X-Forwarded-Proto\"\n(\"SSL_HTTPS\" for instance), configure it via the $trustedHeaderSet\nargument of the Request::setTrustedProxies() method instead.","type":"bool"},"modifiers":1,"type":"","children":[],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"getHost","location":{"uriHash":1305804598,"range":{"start":{"line":1268,"character":4},"end":{"line":1318,"character":5}}},"doc":{"description":"Returns the host name.\n\nThis method can read the client host name from the \"X-Forwarded-Host\" header\nwhen trusted proxies were set via \"setTrustedProxies()\".\n\nThe \"X-Forwarded-Host\" header must contain the client host name.\n\nIf your reverse proxy uses a different header name than \"X-Forwarded-Host\",\nconfigure it via the $trustedHeaderSet argument of the\nRequest::setTrustedProxies() method instead.","type":"string"},"modifiers":1,"type":"","children":[],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"setMethod","location":{"uriHash":1305804598,"range":{"start":{"line":1325,"character":4},"end":{"line":1329,"character":5}}},"doc":{"description":"Sets the request method.","type":""},"modifiers":1,"type":"","children":[{"kind":128,"name":"$method","location":{"uriHash":1305804598,"range":{"start":{"line":1325,"character":30},"end":{"line":1325,"character":37}}},"doc":{"description":"","type":"string"},"scope":"setMethod"}],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"getMethod","location":{"uriHash":1305804598,"range":{"start":{"line":1346,"character":4},"end":{"line":1364,"character":5}}},"doc":{"description":"Gets the request \"intended\" method.\n\nIf the X-HTTP-Method-Override header is set, and if the method is a POST,\nthen it is used to determine the \"real\" intended HTTP method.\n\nThe _method request parameter can also be used to determine the HTTP method,\nbut only if enableHttpMethodParameterOverride() has been called.\n\nThe method is always an uppercased string.","type":"string"},"modifiers":1,"type":"","children":[],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"getRealMethod","location":{"uriHash":1305804598,"range":{"start":{"line":1373,"character":4},"end":{"line":1376,"character":5}}},"doc":{"description":"Gets the \"real\" request method.","type":"string"},"modifiers":1,"type":"","children":[],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"getMimeType","location":{"uriHash":1305804598,"range":{"start":{"line":1385,"character":4},"end":{"line":1392,"character":5}}},"doc":{"description":"Gets the mime type associated with the format.","type":"string|null"},"modifiers":1,"type":"","children":[{"kind":128,"name":"$format","location":{"uriHash":1305804598,"range":{"start":{"line":1385,"character":32},"end":{"line":1385,"character":39}}},"doc":{"description":"The format\n","type":"string"},"scope":"getMimeType"}],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"getMimeTypes","location":{"uriHash":1305804598,"range":{"start":{"line":1401,"character":4},"end":{"line":1408,"character":5}}},"doc":{"description":"Gets the mime types associated with the format.","type":"array"},"modifiers":33,"type":"","children":[{"kind":128,"name":"$format","location":{"uriHash":1305804598,"range":{"start":{"line":1401,"character":40},"end":{"line":1401,"character":47}}},"doc":{"description":"The format\n","type":"string"},"scope":"getMimeTypes"}],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"getFormat","location":{"uriHash":1305804598,"range":{"start":{"line":1417,"character":4},"end":{"line":1436,"character":5}}},"doc":{"description":"Gets the format associated with the mime type.","type":"string|null"},"modifiers":1,"type":"","children":[{"kind":128,"name":"$mimeType","location":{"uriHash":1305804598,"range":{"start":{"line":1417,"character":30},"end":{"line":1417,"character":39}}},"doc":{"description":"The associated mime type\n","type":"string"},"scope":"getFormat"}],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"setFormat","location":{"uriHash":1305804598,"range":{"start":{"line":1444,"character":4},"end":{"line":1451,"character":5}}},"doc":{"description":"Associates a format with mime types.","type":""},"modifiers":1,"type":"","children":[{"kind":128,"name":"$format","location":{"uriHash":1305804598,"range":{"start":{"line":1444,"character":30},"end":{"line":1444,"character":37}}},"doc":{"description":"The format","type":"string"},"scope":"setFormat"},{"kind":128,"name":"$mimeTypes","location":{"uriHash":1305804598,"range":{"start":{"line":1444,"character":39},"end":{"line":1444,"character":49}}},"doc":{"description":"The associated mime types (the preferred one must be the first as it will be used as the content type)","type":"string|array"},"scope":"setFormat"}],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"getRequestFormat","location":{"uriHash":1305804598,"range":{"start":{"line":1466,"character":4},"end":{"line":1473,"character":5}}},"doc":{"description":"Gets the request format.\n\nHere is the process to determine the format:\n\n* format defined by the user (with setRequestFormat())\n* _format request attribute\n* $default","type":"string"},"modifiers":1,"type":"","children":[{"kind":128,"name":"$default","location":{"uriHash":1305804598,"range":{"start":{"line":1466,"character":37},"end":{"line":1466,"character":54}}},"doc":{"description":"The default format\n","type":"string|null"},"value":"'html'","scope":"getRequestFormat"}],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"setRequestFormat","location":{"uriHash":1305804598,"range":{"start":{"line":1480,"character":4},"end":{"line":1483,"character":5}}},"doc":{"description":"Sets the request format.","type":""},"modifiers":1,"type":"","children":[{"kind":128,"name":"$format","location":{"uriHash":1305804598,"range":{"start":{"line":1480,"character":37},"end":{"line":1480,"character":44}}},"doc":{"description":"The request format","type":"string"},"scope":"setRequestFormat"}],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"getContentType","location":{"uriHash":1305804598,"range":{"start":{"line":1490,"character":4},"end":{"line":1493,"character":5}}},"doc":{"description":"Gets the format associated with the request.","type":"string|null"},"modifiers":1,"type":"","children":[],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"setDefaultLocale","location":{"uriHash":1305804598,"range":{"start":{"line":1500,"character":4},"end":{"line":1507,"character":5}}},"doc":{"description":"Sets the default locale.","type":""},"modifiers":1,"type":"","children":[{"kind":128,"name":"$locale","location":{"uriHash":1305804598,"range":{"start":{"line":1500,"character":37},"end":{"line":1500,"character":44}}},"doc":{"description":"","type":"string"},"scope":"setDefaultLocale"}],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"getDefaultLocale","location":{"uriHash":1305804598,"range":{"start":{"line":1514,"character":4},"end":{"line":1517,"character":5}}},"doc":{"description":"Get the default locale.","type":"string"},"modifiers":1,"type":"","children":[],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"setLocale","location":{"uriHash":1305804598,"range":{"start":{"line":1524,"character":4},"end":{"line":1527,"character":5}}},"doc":{"description":"Sets the locale.","type":""},"modifiers":1,"type":"","children":[{"kind":128,"name":"$locale","location":{"uriHash":1305804598,"range":{"start":{"line":1524,"character":30},"end":{"line":1524,"character":37}}},"doc":{"description":"","type":"string"},"scope":"setLocale"}],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"getLocale","location":{"uriHash":1305804598,"range":{"start":{"line":1534,"character":4},"end":{"line":1537,"character":5}}},"doc":{"description":"Get the locale.","type":"string"},"modifiers":1,"type":"","children":[],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"isMethod","location":{"uriHash":1305804598,"range":{"start":{"line":1546,"character":4},"end":{"line":1549,"character":5}}},"doc":{"description":"Checks if the request method is of specified type.","type":"bool"},"modifiers":1,"type":"","children":[{"kind":128,"name":"$method","location":{"uriHash":1305804598,"range":{"start":{"line":1546,"character":29},"end":{"line":1546,"character":36}}},"doc":{"description":"Uppercase request method (GET, POST etc)\n","type":"string"},"scope":"isMethod"}],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"isMethodSafe","location":{"uriHash":1305804598,"range":{"start":{"line":1560,"character":4},"end":{"line":1571,"character":5}}},"doc":{"description":"Checks whether or not the method is safe.","type":"bool"},"modifiers":1,"type":"","children":[],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"isMethodIdempotent","location":{"uriHash":1305804598,"range":{"start":{"line":1578,"character":4},"end":{"line":1581,"character":5}}},"doc":{"description":"Checks whether or not the method is idempotent.","type":"bool"},"modifiers":1,"type":"","children":[],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"isMethodCacheable","location":{"uriHash":1305804598,"range":{"start":{"line":1590,"character":4},"end":{"line":1593,"character":5}}},"doc":{"description":"Checks whether the method is cacheable or not.","type":"bool"},"modifiers":1,"type":"","children":[],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"getProtocolVersion","location":{"uriHash":1305804598,"range":{"start":{"line":1606,"character":4},"end":{"line":1617,"character":5}}},"doc":{"description":"Returns the protocol version.\n\nIf the application is behind a proxy, the protocol version used in the\nrequests between the client and the proxy and between the proxy and the\nserver might be different. This returns the former (from the \"Via\" header)\nif the proxy is trusted (see \"setTrustedProxies()\"), otherwise it returns\nthe latter (from the \"SERVER_PROTOCOL\" server parameter).","type":"string"},"modifiers":1,"type":"","children":[],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"getContent","location":{"uriHash":1305804598,"range":{"start":{"line":1628,"character":4},"end":{"line":1667,"character":5}}},"doc":{"description":"Returns the request body content.","type":"string|resource"},"modifiers":1,"type":"","children":[{"kind":128,"name":"$asResource","location":{"uriHash":1305804598,"range":{"start":{"line":1628,"character":31},"end":{"line":1628,"character":50}}},"doc":{"description":"If true, a resource will be returned\n","type":"bool"},"value":"false","scope":"getContent"}],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"getETags","location":{"uriHash":1305804598,"range":{"start":{"line":1674,"character":4},"end":{"line":1677,"character":5}}},"doc":{"description":"Gets the Etags.","type":"array"},"modifiers":1,"type":"","children":[],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"isNoCache","location":{"uriHash":1305804598,"range":{"start":{"line":1682,"character":4},"end":{"line":1685,"character":5}}},"doc":{"description":"","type":"bool"},"modifiers":1,"type":"","children":[],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"getPreferredLanguage","location":{"uriHash":1305804598,"range":{"start":{"line":1694,"character":4},"end":{"line":1720,"character":5}}},"doc":{"description":"Returns the preferred language.","type":"string|null"},"modifiers":1,"type":"","children":[{"kind":128,"name":"$locales","location":{"uriHash":1305804598,"range":{"start":{"line":1694,"character":41},"end":{"line":1694,"character":62}}},"type":"array","doc":{"description":"An array of ordered available locales\n","type":"array"},"value":"null","scope":"getPreferredLanguage"}],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"getLanguages","location":{"uriHash":1305804598,"range":{"start":{"line":1727,"character":4},"end":{"line":1760,"character":5}}},"doc":{"description":"Gets a list of languages acceptable by the client browser.","type":"array"},"modifiers":1,"type":"","children":[],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"getCharsets","location":{"uriHash":1305804598,"range":{"start":{"line":1767,"character":4},"end":{"line":1774,"character":5}}},"doc":{"description":"Gets a list of charsets acceptable by the client browser.","type":"array"},"modifiers":1,"type":"","children":[],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"getEncodings","location":{"uriHash":1305804598,"range":{"start":{"line":1781,"character":4},"end":{"line":1788,"character":5}}},"doc":{"description":"Gets a list of encodings acceptable by the client browser.","type":"array"},"modifiers":1,"type":"","children":[],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"getAcceptableContentTypes","location":{"uriHash":1305804598,"range":{"start":{"line":1795,"character":4},"end":{"line":1802,"character":5}}},"doc":{"description":"Gets a list of content types acceptable by the client browser.","type":"array"},"modifiers":1,"type":"","children":[],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"isXmlHttpRequest","location":{"uriHash":1305804598,"range":{"start":{"line":1814,"character":4},"end":{"line":1817,"character":5}}},"doc":{"description":"Returns true if the request is a XMLHttpRequest.\n\nIt works if your JavaScript library sets an X-Requested-With HTTP header.\nIt is known to work with common JavaScript frameworks:","type":"bool"},"modifiers":1,"type":"","children":[],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"prepareRequestUri","location":{"uriHash":1305804598,"range":{"start":{"line":1827,"character":4},"end":{"line":1856,"character":5}}},"modifiers":2,"type":"","children":[],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"prepareBaseUrl","location":{"uriHash":1305804598,"range":{"start":{"line":1863,"character":4},"end":{"line":1925,"character":5}}},"doc":{"description":"Prepares the base URL.","type":"string"},"modifiers":2,"type":"","children":[],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"prepareBasePath","location":{"uriHash":1305804598,"range":{"start":{"line":1932,"character":4},"end":{"line":1951,"character":5}}},"doc":{"description":"Prepares the base path.","type":"string"},"modifiers":2,"type":"","children":[],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"preparePathInfo","location":{"uriHash":1305804598,"range":{"start":{"line":1958,"character":4},"end":{"line":1983,"character":5}}},"doc":{"description":"Prepares the path info.","type":"string"},"modifiers":2,"type":"","children":[],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"initializeFormats","location":{"uriHash":1305804598,"range":{"start":{"line":1988,"character":4},"end":{"line":2003,"character":5}}},"doc":{"description":"Initializes HTTP request formats.","type":""},"modifiers":34,"type":"","children":[],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"setPhpDefaultLocale","location":{"uriHash":1305804598,"range":{"start":{"line":2010,"character":4},"end":{"line":2021,"character":5}}},"doc":{"description":"Sets the default PHP locale.","type":""},"modifiers":4,"type":"","children":[{"kind":128,"name":"$locale","location":{"uriHash":1305804598,"range":{"start":{"line":2010,"character":41},"end":{"line":2010,"character":48}}},"doc":{"description":"","type":"string"},"scope":"setPhpDefaultLocale"}],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"getUrlencodedPrefix","location":{"uriHash":1305804598,"range":{"start":{"line":2032,"character":4},"end":{"line":2045,"character":5}}},"modifiers":4,"type":"","children":[{"kind":128,"name":"$string","location":{"uriHash":1305804598,"range":{"start":{"line":2032,"character":41},"end":{"line":2032,"character":48}}},"scope":"getUrlencodedPrefix"},{"kind":128,"name":"$prefix","location":{"uriHash":1305804598,"range":{"start":{"line":2032,"character":50},"end":{"line":2032,"character":57}}},"scope":"getUrlencodedPrefix"}],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"createRequestFromFactory","location":{"uriHash":1305804598,"range":{"start":{"line":2047,"character":4},"end":{"line":2060,"character":5}}},"modifiers":36,"type":"","children":[{"kind":128,"name":"$query","location":{"uriHash":1305804598,"range":{"start":{"line":2047,"character":53},"end":{"line":2047,"character":75}}},"type":"array","value":"array()","scope":"createRequestFromFactory"},{"kind":128,"name":"$request","location":{"uriHash":1305804598,"range":{"start":{"line":2047,"character":77},"end":{"line":2047,"character":101}}},"type":"array","value":"array()","scope":"createRequestFromFactory"},{"kind":128,"name":"$attributes","location":{"uriHash":1305804598,"range":{"start":{"line":2047,"character":103},"end":{"line":2047,"character":130}}},"type":"array","value":"array()","scope":"createRequestFromFactory"},{"kind":128,"name":"$cookies","location":{"uriHash":1305804598,"range":{"start":{"line":2047,"character":132},"end":{"line":2047,"character":156}}},"type":"array","value":"array()","scope":"createRequestFromFactory"},{"kind":128,"name":"$files","location":{"uriHash":1305804598,"range":{"start":{"line":2047,"character":158},"end":{"line":2047,"character":180}}},"type":"array","value":"array()","scope":"createRequestFromFactory"},{"kind":128,"name":"$server","location":{"uriHash":1305804598,"range":{"start":{"line":2047,"character":182},"end":{"line":2047,"character":205}}},"type":"array","value":"array()","scope":"createRequestFromFactory"},{"kind":128,"name":"$content","location":{"uriHash":1305804598,"range":{"start":{"line":2047,"character":207},"end":{"line":2047,"character":222}}},"value":"null","scope":"createRequestFromFactory"}],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"isFromTrustedProxy","location":{"uriHash":1305804598,"range":{"start":{"line":2070,"character":4},"end":{"line":2073,"character":5}}},"doc":{"description":"Indicates whether this request originated from a trusted proxy.\n\nThis can be useful to determine whether or not to trust the\ncontents of a proxy-specific header.","type":"bool"},"modifiers":1,"type":"","children":[],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"getTrustedValues","location":{"uriHash":1305804598,"range":{"start":{"line":2075,"character":4},"end":{"line":2118,"character":5}}},"modifiers":4,"type":"","children":[{"kind":128,"name":"$type","location":{"uriHash":1305804598,"range":{"start":{"line":2075,"character":38},"end":{"line":2075,"character":43}}},"scope":"getTrustedValues"},{"kind":128,"name":"$ip","location":{"uriHash":1305804598,"range":{"start":{"line":2075,"character":45},"end":{"line":2075,"character":55}}},"value":"null","scope":"getTrustedValues"}],"scope":"Symfony\\Component\\HttpFoundation\\Request"},{"kind":32,"name":"normalizeAndFilterClientIps","location":{"uriHash":1305804598,"range":{"start":{"line":2120,"character":4},"end":{"line":2160,"character":5}}},"modifiers":4,"type":"","children":[{"kind":128,"name":"$clientIps","location":{"uriHash":1305804598,"range":{"start":{"line":2120,"character":49},"end":{"line":2120,"character":65}}},"type":"array","scope":"normalizeAndFilterClientIps"},{"kind":128,"name":"$ip","location":{"uriHash":1305804598,"range":{"start":{"line":2120,"character":67},"end":{"line":2120,"character":70}}},"scope":"normalizeAndFilterClientIps"}],"scope":"Symfony\\Component\\HttpFoundation\\Request"}],"associated":[],"doc":{"description":"Request represents an HTTP request.\n\nThe methods dealing with URL accept / return a raw path (% encoded):\n* getBasePath\n* getBaseUrl\n* getPathInfo\n* getRequestUri\n* getUri\n* getUriForPath","type":""},"modifiers":0}]},"_hash":1305804598}]]