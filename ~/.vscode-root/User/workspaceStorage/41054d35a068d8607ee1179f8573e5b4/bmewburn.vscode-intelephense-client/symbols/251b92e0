[["file:///home/jfvilladiego/proyectos_laravel/cotizaciones_vcb_laravel/vendor/hamcrest/hamcrest-php/hamcrest/Hamcrest.php",{"_uri":"file:///home/jfvilladiego/proyectos_laravel/cotizaciones_vcb_laravel/vendor/hamcrest/hamcrest-php/hamcrest/Hamcrest.php","_root":{"kind":4096,"name":"file:///home/jfvilladiego/proyectos_laravel/cotizaciones_vcb_laravel/vendor/hamcrest/hamcrest-php/hamcrest/Hamcrest.php","location":{"uriHash":622564064,"range":{"start":{"line":0,"character":0},"end":{"line":805,"character":0}}},"children":[{"kind":64,"name":"assertThat","location":{"uriHash":622564064,"range":{"start":{"line":22,"character":4},"end":{"line":29,"character":5}}},"doc":{"description":"Make an assertion and throw {@link Hamcrest_AssertionError} if it fails.\n\nExample:\n<pre>\n//With an identifier\nassertThat(\"assertion identifier\", $apple->flavour(), equalTo(\"tasty\"));\n//Without an identifier\nassertThat($apple->flavour(), equalTo(\"tasty\"));\n//Evaluating a boolean expression\nassertThat(\"some error\", $a > $b);\n</pre>","type":""},"type":"","children":[]},{"kind":64,"name":"anArray","location":{"uriHash":622564064,"range":{"start":{"line":35,"character":4},"end":{"line":39,"character":5}}},"doc":{"description":"Evaluates to true only if each $matcher[$i] is satisfied by $array[$i].","type":""},"type":"","children":[]},{"kind":64,"name":"hasItemInArray","location":{"uriHash":622564064,"range":{"start":{"line":49,"character":4},"end":{"line":52,"character":5}}},"doc":{"description":"Evaluates to true if any item in an array satisfies the given matcher.","type":"Hamcrest\\Arrays\\IsArrayContaining"},"type":"","children":[{"kind":128,"name":"$item","location":{"uriHash":622564064,"range":{"start":{"line":49,"character":28},"end":{"line":49,"character":33}}},"doc":{"description":"as a {@link Hamcrest\\Matcher} or a value.\n","type":"mixed"},"scope":"hasItemInArray"}]},{"kind":64,"name":"hasValue","location":{"uriHash":622564064,"range":{"start":{"line":62,"character":4},"end":{"line":65,"character":5}}},"doc":{"description":"Evaluates to true if any item in an array satisfies the given matcher.","type":"Hamcrest\\Arrays\\IsArrayContaining"},"type":"","children":[{"kind":128,"name":"$item","location":{"uriHash":622564064,"range":{"start":{"line":62,"character":22},"end":{"line":62,"character":27}}},"doc":{"description":"as a {@link Hamcrest\\Matcher} or a value.\n","type":"mixed"},"scope":"hasValue"}]},{"kind":64,"name":"arrayContainingInAnyOrder","location":{"uriHash":622564064,"range":{"start":{"line":71,"character":4},"end":{"line":75,"character":5}}},"doc":{"description":"An array with elements that match the given matchers.","type":""},"type":"","children":[]},{"kind":64,"name":"containsInAnyOrder","location":{"uriHash":622564064,"range":{"start":{"line":81,"character":4},"end":{"line":85,"character":5}}},"doc":{"description":"An array with elements that match the given matchers.","type":""},"type":"","children":[]},{"kind":64,"name":"arrayContaining","location":{"uriHash":622564064,"range":{"start":{"line":91,"character":4},"end":{"line":95,"character":5}}},"doc":{"description":"An array with elements that match the given matchers in the same order.","type":""},"type":"","children":[]},{"kind":64,"name":"contains","location":{"uriHash":622564064,"range":{"start":{"line":101,"character":4},"end":{"line":105,"character":5}}},"doc":{"description":"An array with elements that match the given matchers in the same order.","type":""},"type":"","children":[]},{"kind":64,"name":"hasKeyInArray","location":{"uriHash":622564064,"range":{"start":{"line":115,"character":4},"end":{"line":118,"character":5}}},"doc":{"description":"Evaluates to true if any key in an array matches the given matcher.","type":"Hamcrest\\Arrays\\IsArrayContainingKey"},"type":"","children":[{"kind":128,"name":"$key","location":{"uriHash":622564064,"range":{"start":{"line":115,"character":27},"end":{"line":115,"character":31}}},"doc":{"description":"as a {@link Hamcrest\\Matcher} or a value.\n","type":"mixed"},"scope":"hasKeyInArray"}]},{"kind":64,"name":"hasKey","location":{"uriHash":622564064,"range":{"start":{"line":128,"character":4},"end":{"line":131,"character":5}}},"doc":{"description":"Evaluates to true if any key in an array matches the given matcher.","type":"Hamcrest\\Arrays\\IsArrayContainingKey"},"type":"","children":[{"kind":128,"name":"$key","location":{"uriHash":622564064,"range":{"start":{"line":128,"character":20},"end":{"line":128,"character":24}}},"doc":{"description":"as a {@link Hamcrest\\Matcher} or a value.\n","type":"mixed"},"scope":"hasKey"}]},{"kind":64,"name":"hasKeyValuePair","location":{"uriHash":622564064,"range":{"start":{"line":137,"character":4},"end":{"line":140,"character":5}}},"doc":{"description":"Test if an array has both an key and value in parity with each other.","type":""},"type":"","children":[{"kind":128,"name":"$key","location":{"uriHash":622564064,"range":{"start":{"line":137,"character":29},"end":{"line":137,"character":33}}},"scope":"hasKeyValuePair"},{"kind":128,"name":"$value","location":{"uriHash":622564064,"range":{"start":{"line":137,"character":35},"end":{"line":137,"character":41}}},"scope":"hasKeyValuePair"}]},{"kind":64,"name":"hasEntry","location":{"uriHash":622564064,"range":{"start":{"line":146,"character":4},"end":{"line":149,"character":5}}},"doc":{"description":"Test if an array has both an key and value in parity with each other.","type":""},"type":"","children":[{"kind":128,"name":"$key","location":{"uriHash":622564064,"range":{"start":{"line":146,"character":22},"end":{"line":146,"character":26}}},"scope":"hasEntry"},{"kind":128,"name":"$value","location":{"uriHash":622564064,"range":{"start":{"line":146,"character":28},"end":{"line":146,"character":34}}},"scope":"hasEntry"}]},{"kind":64,"name":"arrayWithSize","location":{"uriHash":622564064,"range":{"start":{"line":159,"character":4},"end":{"line":162,"character":5}}},"doc":{"description":"Does array size satisfy a given matcher?","type":"Hamcrest\\Arrays\\IsArrayWithSize"},"type":"","children":[{"kind":128,"name":"$size","location":{"uriHash":622564064,"range":{"start":{"line":159,"character":27},"end":{"line":159,"character":32}}},"doc":{"description":"as a {@link Hamcrest\\Matcher} or a value.\n","type":"Hamcrest\\Matcher|int"},"scope":"arrayWithSize"}]},{"kind":64,"name":"emptyArray","location":{"uriHash":622564064,"range":{"start":{"line":168,"character":4},"end":{"line":171,"character":5}}},"doc":{"description":"Matches an empty array.","type":""},"type":"","children":[]},{"kind":64,"name":"nonEmptyArray","location":{"uriHash":622564064,"range":{"start":{"line":177,"character":4},"end":{"line":180,"character":5}}},"doc":{"description":"Matches an empty array.","type":""},"type":"","children":[]},{"kind":64,"name":"emptyTraversable","location":{"uriHash":622564064,"range":{"start":{"line":186,"character":4},"end":{"line":189,"character":5}}},"doc":{"description":"Returns true if traversable is empty.","type":""},"type":"","children":[]},{"kind":64,"name":"nonEmptyTraversable","location":{"uriHash":622564064,"range":{"start":{"line":195,"character":4},"end":{"line":198,"character":5}}},"doc":{"description":"Returns true if traversable is not empty.","type":""},"type":"","children":[]},{"kind":64,"name":"traversableWithSize","location":{"uriHash":622564064,"range":{"start":{"line":204,"character":4},"end":{"line":207,"character":5}}},"doc":{"description":"Does traversable size satisfy a given matcher?","type":""},"type":"","children":[{"kind":128,"name":"$size","location":{"uriHash":622564064,"range":{"start":{"line":204,"character":33},"end":{"line":204,"character":38}}},"scope":"traversableWithSize"}]},{"kind":64,"name":"allOf","location":{"uriHash":622564064,"range":{"start":{"line":213,"character":4},"end":{"line":217,"character":5}}},"doc":{"description":"Evaluates to true only if ALL of the passed in matchers evaluate to true.","type":""},"type":"","children":[]},{"kind":64,"name":"anyOf","location":{"uriHash":622564064,"range":{"start":{"line":223,"character":4},"end":{"line":227,"character":5}}},"doc":{"description":"Evaluates to true if ANY of the passed in matchers evaluate to true.","type":""},"type":"","children":[]},{"kind":64,"name":"noneOf","location":{"uriHash":622564064,"range":{"start":{"line":233,"character":4},"end":{"line":237,"character":5}}},"doc":{"description":"Evaluates to false if ANY of the passed in matchers evaluate to true.","type":""},"type":"","children":[]},{"kind":64,"name":"both","location":{"uriHash":622564064,"range":{"start":{"line":247,"character":4},"end":{"line":250,"character":5}}},"doc":{"description":"This is useful for fluently combining matchers that must both pass.\nFor example:\n<pre>\nassertThat($string, both(containsString(\"a\"))->andAlso(containsString(\"b\")));\n</pre>","type":""},"type":"","children":[{"kind":128,"name":"$matcher","location":{"uriHash":622564064,"range":{"start":{"line":247,"character":18},"end":{"line":247,"character":44}}},"type":"Hamcrest\\Matcher","scope":"both"}]},{"kind":64,"name":"either","location":{"uriHash":622564064,"range":{"start":{"line":260,"character":4},"end":{"line":263,"character":5}}},"doc":{"description":"This is useful for fluently combining matchers where either may pass,\nfor example:\n<pre>\nassertThat($string, either(containsString(\"a\"))->orElse(containsString(\"b\")));\n</pre>","type":""},"type":"","children":[{"kind":128,"name":"$matcher","location":{"uriHash":622564064,"range":{"start":{"line":260,"character":20},"end":{"line":260,"character":46}}},"type":"Hamcrest\\Matcher","scope":"either"}]},{"kind":64,"name":"describedAs","location":{"uriHash":622564064,"range":{"start":{"line":269,"character":4},"end":{"line":273,"character":5}}},"doc":{"description":"Wraps an existing matcher and overrides the description when it fails.","type":""},"type":"","children":[]},{"kind":64,"name":"everyItem","location":{"uriHash":622564064,"range":{"start":{"line":283,"character":4},"end":{"line":286,"character":5}}},"doc":{"description":"","type":"Hamcrest\\Core\\Every"},"type":"","children":[{"kind":128,"name":"$itemMatcher","location":{"uriHash":622564064,"range":{"start":{"line":283,"character":23},"end":{"line":283,"character":53}}},"type":"Hamcrest\\Matcher","doc":{"description":"A matcher to apply to every element in an array.\n","type":"Matcher"},"scope":"everyItem"}]},{"kind":64,"name":"hasToString","location":{"uriHash":622564064,"range":{"start":{"line":292,"character":4},"end":{"line":295,"character":5}}},"doc":{"description":"Does array size satisfy a given matcher?","type":""},"type":"","children":[{"kind":128,"name":"$matcher","location":{"uriHash":622564064,"range":{"start":{"line":292,"character":25},"end":{"line":292,"character":33}}},"scope":"hasToString"}]},{"kind":64,"name":"is","location":{"uriHash":622564064,"range":{"start":{"line":305,"character":4},"end":{"line":308,"character":5}}},"doc":{"description":"Decorates another Matcher, retaining the behavior but allowing tests\nto be slightly more expressive.\n\nFor example:  assertThat($cheese, equalTo($smelly))\nvs.  assertThat($cheese, is(equalTo($smelly)))","type":""},"type":"","children":[{"kind":128,"name":"$value","location":{"uriHash":622564064,"range":{"start":{"line":305,"character":16},"end":{"line":305,"character":22}}},"scope":"is"}]},{"kind":64,"name":"anything","location":{"uriHash":622564064,"range":{"start":{"line":318,"character":4},"end":{"line":321,"character":5}}},"doc":{"description":"This matcher always evaluates to true.","type":"Hamcrest\\Core\\IsAnything"},"type":"","children":[{"kind":128,"name":"$description","location":{"uriHash":622564064,"range":{"start":{"line":318,"character":22},"end":{"line":318,"character":47}}},"doc":{"description":"A meaningful string used when describing itself.\n","type":"string"},"value":"'ANYTHING'","scope":"anything"}]},{"kind":64,"name":"hasItem","location":{"uriHash":622564064,"range":{"start":{"line":334,"character":4},"end":{"line":338,"character":5}}},"doc":{"description":"Test if the value is an array containing this matcher.\n\nExample:\n<pre>\nassertThat(array('a', 'b'), hasItem(equalTo('b')));\n//Convenience defaults to equalTo()\nassertThat(array('a', 'b'), hasItem('b'));\n</pre>","type":""},"type":"","children":[]},{"kind":64,"name":"hasItems","location":{"uriHash":622564064,"range":{"start":{"line":350,"character":4},"end":{"line":354,"character":5}}},"doc":{"description":"Test if the value is an array containing elements that match all of these\nmatchers.\n\nExample:\n<pre>\nassertThat(array('a', 'b', 'c'), hasItems(equalTo('a'), equalTo('b')));\n</pre>","type":""},"type":"","children":[]},{"kind":64,"name":"equalTo","location":{"uriHash":622564064,"range":{"start":{"line":361,"character":4},"end":{"line":364,"character":5}}},"doc":{"description":"Is the value equal to another value, as tested by the use of the \"==\"\ncomparison operator?","type":""},"type":"","children":[{"kind":128,"name":"$item","location":{"uriHash":622564064,"range":{"start":{"line":361,"character":21},"end":{"line":361,"character":26}}},"scope":"equalTo"}]},{"kind":64,"name":"identicalTo","location":{"uriHash":622564064,"range":{"start":{"line":370,"character":4},"end":{"line":373,"character":5}}},"doc":{"description":"Tests of the value is identical to $value as tested by the \"===\" operator.","type":""},"type":"","children":[{"kind":128,"name":"$value","location":{"uriHash":622564064,"range":{"start":{"line":370,"character":25},"end":{"line":370,"character":31}}},"scope":"identicalTo"}]},{"kind":64,"name":"anInstanceOf","location":{"uriHash":622564064,"range":{"start":{"line":382,"character":4},"end":{"line":385,"character":5}}},"doc":{"description":"Is the value an instance of a particular type?\nThis version assumes no relationship between the required type and\nthe signature of the method that sets it up, for example in\n<code>assertThat($anObject, anInstanceOf('Thing'));</code>","type":""},"type":"","children":[{"kind":128,"name":"$theClass","location":{"uriHash":622564064,"range":{"start":{"line":382,"character":26},"end":{"line":382,"character":35}}},"scope":"anInstanceOf"}]},{"kind":64,"name":"any","location":{"uriHash":622564064,"range":{"start":{"line":394,"character":4},"end":{"line":397,"character":5}}},"doc":{"description":"Is the value an instance of a particular type?\nThis version assumes no relationship between the required type and\nthe signature of the method that sets it up, for example in\n<code>assertThat($anObject, anInstanceOf('Thing'));</code>","type":""},"type":"","children":[{"kind":128,"name":"$theClass","location":{"uriHash":622564064,"range":{"start":{"line":394,"character":17},"end":{"line":394,"character":26}}},"scope":"any"}]},{"kind":64,"name":"not","location":{"uriHash":622564064,"range":{"start":{"line":403,"character":4},"end":{"line":406,"character":5}}},"doc":{"description":"Matches if value does not match $value.","type":""},"type":"","children":[{"kind":128,"name":"$value","location":{"uriHash":622564064,"range":{"start":{"line":403,"character":17},"end":{"line":403,"character":23}}},"scope":"not"}]},{"kind":64,"name":"nullValue","location":{"uriHash":622564064,"range":{"start":{"line":412,"character":4},"end":{"line":415,"character":5}}},"doc":{"description":"Matches if value is null.","type":""},"type":"","children":[]},{"kind":64,"name":"notNullValue","location":{"uriHash":622564064,"range":{"start":{"line":421,"character":4},"end":{"line":424,"character":5}}},"doc":{"description":"Matches if value is not null.","type":""},"type":"","children":[]},{"kind":64,"name":"sameInstance","location":{"uriHash":622564064,"range":{"start":{"line":436,"character":4},"end":{"line":439,"character":5}}},"doc":{"description":"Creates a new instance of IsSame.","type":"Hamcrest\\Core\\IsSame"},"type":"","children":[{"kind":128,"name":"$object","location":{"uriHash":622564064,"range":{"start":{"line":436,"character":26},"end":{"line":436,"character":33}}},"doc":{"description":"The predicate evaluates to true only when the argument is\nthis object.\n","type":"mixed"},"scope":"sameInstance"}]},{"kind":64,"name":"typeOf","location":{"uriHash":622564064,"range":{"start":{"line":445,"character":4},"end":{"line":448,"character":5}}},"doc":{"description":"Is the value a particular built-in type?","type":""},"type":"","children":[{"kind":128,"name":"$theType","location":{"uriHash":622564064,"range":{"start":{"line":445,"character":20},"end":{"line":445,"character":28}}},"scope":"typeOf"}]},{"kind":64,"name":"set","location":{"uriHash":622564064,"range":{"start":{"line":454,"character":4},"end":{"line":457,"character":5}}},"doc":{"description":"Matches if value (class, object, or array) has named $property.","type":""},"type":"","children":[{"kind":128,"name":"$property","location":{"uriHash":622564064,"range":{"start":{"line":454,"character":17},"end":{"line":454,"character":26}}},"scope":"set"}]},{"kind":64,"name":"notSet","location":{"uriHash":622564064,"range":{"start":{"line":463,"character":4},"end":{"line":466,"character":5}}},"doc":{"description":"Matches if value (class, object, or array) does not have named $property.","type":""},"type":"","children":[{"kind":128,"name":"$property","location":{"uriHash":622564064,"range":{"start":{"line":463,"character":20},"end":{"line":463,"character":29}}},"scope":"notSet"}]},{"kind":64,"name":"closeTo","location":{"uriHash":622564064,"range":{"start":{"line":473,"character":4},"end":{"line":476,"character":5}}},"doc":{"description":"Matches if value is a number equal to $value within some range of\nacceptable error $delta.","type":""},"type":"","children":[{"kind":128,"name":"$value","location":{"uriHash":622564064,"range":{"start":{"line":473,"character":21},"end":{"line":473,"character":27}}},"scope":"closeTo"},{"kind":128,"name":"$delta","location":{"uriHash":622564064,"range":{"start":{"line":473,"character":29},"end":{"line":473,"character":35}}},"scope":"closeTo"}]},{"kind":64,"name":"comparesEqualTo","location":{"uriHash":622564064,"range":{"start":{"line":482,"character":4},"end":{"line":485,"character":5}}},"doc":{"description":"The value is not > $value, nor < $value.","type":""},"type":"","children":[{"kind":128,"name":"$value","location":{"uriHash":622564064,"range":{"start":{"line":482,"character":29},"end":{"line":482,"character":35}}},"scope":"comparesEqualTo"}]},{"kind":64,"name":"greaterThan","location":{"uriHash":622564064,"range":{"start":{"line":491,"character":4},"end":{"line":494,"character":5}}},"doc":{"description":"The value is > $value.","type":""},"type":"","children":[{"kind":128,"name":"$value","location":{"uriHash":622564064,"range":{"start":{"line":491,"character":25},"end":{"line":491,"character":31}}},"scope":"greaterThan"}]},{"kind":64,"name":"greaterThanOrEqualTo","location":{"uriHash":622564064,"range":{"start":{"line":500,"character":4},"end":{"line":503,"character":5}}},"doc":{"description":"The value is >= $value.","type":""},"type":"","children":[{"kind":128,"name":"$value","location":{"uriHash":622564064,"range":{"start":{"line":500,"character":34},"end":{"line":500,"character":40}}},"scope":"greaterThanOrEqualTo"}]},{"kind":64,"name":"atLeast","location":{"uriHash":622564064,"range":{"start":{"line":509,"character":4},"end":{"line":512,"character":5}}},"doc":{"description":"The value is >= $value.","type":""},"type":"","children":[{"kind":128,"name":"$value","location":{"uriHash":622564064,"range":{"start":{"line":509,"character":21},"end":{"line":509,"character":27}}},"scope":"atLeast"}]},{"kind":64,"name":"lessThan","location":{"uriHash":622564064,"range":{"start":{"line":518,"character":4},"end":{"line":521,"character":5}}},"doc":{"description":"The value is < $value.","type":""},"type":"","children":[{"kind":128,"name":"$value","location":{"uriHash":622564064,"range":{"start":{"line":518,"character":22},"end":{"line":518,"character":28}}},"scope":"lessThan"}]},{"kind":64,"name":"lessThanOrEqualTo","location":{"uriHash":622564064,"range":{"start":{"line":527,"character":4},"end":{"line":530,"character":5}}},"doc":{"description":"The value is <= $value.","type":""},"type":"","children":[{"kind":128,"name":"$value","location":{"uriHash":622564064,"range":{"start":{"line":527,"character":31},"end":{"line":527,"character":37}}},"scope":"lessThanOrEqualTo"}]},{"kind":64,"name":"atMost","location":{"uriHash":622564064,"range":{"start":{"line":536,"character":4},"end":{"line":539,"character":5}}},"doc":{"description":"The value is <= $value.","type":""},"type":"","children":[{"kind":128,"name":"$value","location":{"uriHash":622564064,"range":{"start":{"line":536,"character":20},"end":{"line":536,"character":26}}},"scope":"atMost"}]},{"kind":64,"name":"isEmptyString","location":{"uriHash":622564064,"range":{"start":{"line":545,"character":4},"end":{"line":548,"character":5}}},"doc":{"description":"Matches if value is a zero-length string.","type":""},"type":"","children":[]},{"kind":64,"name":"emptyString","location":{"uriHash":622564064,"range":{"start":{"line":554,"character":4},"end":{"line":557,"character":5}}},"doc":{"description":"Matches if value is a zero-length string.","type":""},"type":"","children":[]},{"kind":64,"name":"isEmptyOrNullString","location":{"uriHash":622564064,"range":{"start":{"line":563,"character":4},"end":{"line":566,"character":5}}},"doc":{"description":"Matches if value is null or a zero-length string.","type":""},"type":"","children":[]},{"kind":64,"name":"nullOrEmptyString","location":{"uriHash":622564064,"range":{"start":{"line":572,"character":4},"end":{"line":575,"character":5}}},"doc":{"description":"Matches if value is null or a zero-length string.","type":""},"type":"","children":[]},{"kind":64,"name":"isNonEmptyString","location":{"uriHash":622564064,"range":{"start":{"line":581,"character":4},"end":{"line":584,"character":5}}},"doc":{"description":"Matches if value is a non-zero-length string.","type":""},"type":"","children":[]},{"kind":64,"name":"nonEmptyString","location":{"uriHash":622564064,"range":{"start":{"line":590,"character":4},"end":{"line":593,"character":5}}},"doc":{"description":"Matches if value is a non-zero-length string.","type":""},"type":"","children":[]},{"kind":64,"name":"equalToIgnoringCase","location":{"uriHash":622564064,"range":{"start":{"line":599,"character":4},"end":{"line":602,"character":5}}},"doc":{"description":"Matches if value is a string equal to $string, regardless of the case.","type":""},"type":"","children":[{"kind":128,"name":"$string","location":{"uriHash":622564064,"range":{"start":{"line":599,"character":33},"end":{"line":599,"character":40}}},"scope":"equalToIgnoringCase"}]},{"kind":64,"name":"equalToIgnoringWhiteSpace","location":{"uriHash":622564064,"range":{"start":{"line":608,"character":4},"end":{"line":611,"character":5}}},"doc":{"description":"Matches if value is a string equal to $string, regardless of whitespace.","type":""},"type":"","children":[{"kind":128,"name":"$string","location":{"uriHash":622564064,"range":{"start":{"line":608,"character":39},"end":{"line":608,"character":46}}},"scope":"equalToIgnoringWhiteSpace"}]},{"kind":64,"name":"matchesPattern","location":{"uriHash":622564064,"range":{"start":{"line":617,"character":4},"end":{"line":620,"character":5}}},"doc":{"description":"Matches if value is a string that matches regular expression $pattern.","type":""},"type":"","children":[{"kind":128,"name":"$pattern","location":{"uriHash":622564064,"range":{"start":{"line":617,"character":28},"end":{"line":617,"character":36}}},"scope":"matchesPattern"}]},{"kind":64,"name":"containsString","location":{"uriHash":622564064,"range":{"start":{"line":626,"character":4},"end":{"line":629,"character":5}}},"doc":{"description":"Matches if value is a string that contains $substring.","type":""},"type":"","children":[{"kind":128,"name":"$substring","location":{"uriHash":622564064,"range":{"start":{"line":626,"character":28},"end":{"line":626,"character":38}}},"scope":"containsString"}]},{"kind":64,"name":"containsStringIgnoringCase","location":{"uriHash":622564064,"range":{"start":{"line":635,"character":4},"end":{"line":638,"character":5}}},"doc":{"description":"Matches if value is a string that contains $substring regardless of the case.","type":""},"type":"","children":[{"kind":128,"name":"$substring","location":{"uriHash":622564064,"range":{"start":{"line":635,"character":40},"end":{"line":635,"character":50}}},"scope":"containsStringIgnoringCase"}]},{"kind":64,"name":"stringContainsInOrder","location":{"uriHash":622564064,"range":{"start":{"line":644,"character":4},"end":{"line":648,"character":5}}},"doc":{"description":"Matches if value contains $substrings in a constrained order.","type":""},"type":"","children":[]},{"kind":64,"name":"endsWith","location":{"uriHash":622564064,"range":{"start":{"line":654,"character":4},"end":{"line":657,"character":5}}},"doc":{"description":"Matches if value is a string that ends with $substring.","type":""},"type":"","children":[{"kind":128,"name":"$substring","location":{"uriHash":622564064,"range":{"start":{"line":654,"character":22},"end":{"line":654,"character":32}}},"scope":"endsWith"}]},{"kind":64,"name":"startsWith","location":{"uriHash":622564064,"range":{"start":{"line":663,"character":4},"end":{"line":666,"character":5}}},"doc":{"description":"Matches if value is a string that starts with $substring.","type":""},"type":"","children":[{"kind":128,"name":"$substring","location":{"uriHash":622564064,"range":{"start":{"line":663,"character":24},"end":{"line":663,"character":34}}},"scope":"startsWith"}]},{"kind":64,"name":"arrayValue","location":{"uriHash":622564064,"range":{"start":{"line":672,"character":4},"end":{"line":675,"character":5}}},"doc":{"description":"Is the value an array?","type":""},"type":"","children":[]},{"kind":64,"name":"booleanValue","location":{"uriHash":622564064,"range":{"start":{"line":681,"character":4},"end":{"line":684,"character":5}}},"doc":{"description":"Is the value a boolean?","type":""},"type":"","children":[]},{"kind":64,"name":"boolValue","location":{"uriHash":622564064,"range":{"start":{"line":690,"character":4},"end":{"line":693,"character":5}}},"doc":{"description":"Is the value a boolean?","type":""},"type":"","children":[]},{"kind":64,"name":"callableValue","location":{"uriHash":622564064,"range":{"start":{"line":699,"character":4},"end":{"line":702,"character":5}}},"doc":{"description":"Is the value callable?","type":""},"type":"","children":[]},{"kind":64,"name":"doubleValue","location":{"uriHash":622564064,"range":{"start":{"line":708,"character":4},"end":{"line":711,"character":5}}},"doc":{"description":"Is the value a float/double?","type":""},"type":"","children":[]},{"kind":64,"name":"floatValue","location":{"uriHash":622564064,"range":{"start":{"line":717,"character":4},"end":{"line":720,"character":5}}},"doc":{"description":"Is the value a float/double?","type":""},"type":"","children":[]},{"kind":64,"name":"integerValue","location":{"uriHash":622564064,"range":{"start":{"line":726,"character":4},"end":{"line":729,"character":5}}},"doc":{"description":"Is the value an integer?","type":""},"type":"","children":[]},{"kind":64,"name":"intValue","location":{"uriHash":622564064,"range":{"start":{"line":735,"character":4},"end":{"line":738,"character":5}}},"doc":{"description":"Is the value an integer?","type":""},"type":"","children":[]},{"kind":64,"name":"numericValue","location":{"uriHash":622564064,"range":{"start":{"line":744,"character":4},"end":{"line":747,"character":5}}},"doc":{"description":"Is the value a numeric?","type":""},"type":"","children":[]},{"kind":64,"name":"objectValue","location":{"uriHash":622564064,"range":{"start":{"line":753,"character":4},"end":{"line":756,"character":5}}},"doc":{"description":"Is the value an object?","type":""},"type":"","children":[]},{"kind":64,"name":"anObject","location":{"uriHash":622564064,"range":{"start":{"line":762,"character":4},"end":{"line":765,"character":5}}},"doc":{"description":"Is the value an object?","type":""},"type":"","children":[]},{"kind":64,"name":"resourceValue","location":{"uriHash":622564064,"range":{"start":{"line":771,"character":4},"end":{"line":774,"character":5}}},"doc":{"description":"Is the value a resource?","type":""},"type":"","children":[]},{"kind":64,"name":"scalarValue","location":{"uriHash":622564064,"range":{"start":{"line":780,"character":4},"end":{"line":783,"character":5}}},"doc":{"description":"Is the value a scalar (boolean, integer, double, or string)?","type":""},"type":"","children":[]},{"kind":64,"name":"stringValue","location":{"uriHash":622564064,"range":{"start":{"line":789,"character":4},"end":{"line":792,"character":5}}},"doc":{"description":"Is the value a string?","type":""},"type":"","children":[]},{"kind":64,"name":"hasXPath","location":{"uriHash":622564064,"range":{"start":{"line":800,"character":4},"end":{"line":803,"character":5}}},"doc":{"description":"Wraps <code>$matcher</code> with {@link Hamcrest\\Core\\IsEqual)\nif it's not a matcher and the XPath in <code>count()</code>\nif it's an integer.","type":""},"type":"","children":[{"kind":128,"name":"$xpath","location":{"uriHash":622564064,"range":{"start":{"line":800,"character":22},"end":{"line":800,"character":28}}},"scope":"hasXPath"},{"kind":128,"name":"$matcher","location":{"uriHash":622564064,"range":{"start":{"line":800,"character":30},"end":{"line":800,"character":45}}},"value":"null","scope":"hasXPath"}]}]},"_hash":622564064}]]