[["file:///home/jfvilladiego/proyectos_laravel/cotizaciones_vcb_laravel/vendor/mockery/mockery/library/Mockery/Mock.php",{"_uri":"file:///home/jfvilladiego/proyectos_laravel/cotizaciones_vcb_laravel/vendor/mockery/mockery/library/Mockery/Mock.php","_root":{"kind":4096,"name":"file:///home/jfvilladiego/proyectos_laravel/cotizaciones_vcb_laravel/vendor/mockery/mockery/library/Mockery/Mock.php","location":{"uriHash":1528578605,"range":{"start":{"line":0,"character":0},"end":{"line":758,"character":0}}},"children":[{"kind":512,"name":"Mockery","location":{"uriHash":1528578605,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":18}}}},{"kind":1,"name":"MockInterface","location":{"uriHash":1528578605,"range":{"start":{"line":22,"character":4},"end":{"line":22,"character":25}}},"modifiers":4096,"associated":[{"kind":1,"name":"Mockery\\MockInterface"}]},{"kind":1,"name":"Mockery\\Mock","location":{"uriHash":1528578605,"range":{"start":{"line":24,"character":0},"end":{"line":757,"character":1}}},"children":[{"kind":16,"name":"$_mockery_expectations","location":{"uriHash":1528578605,"range":{"start":{"line":32,"character":14},"end":{"line":32,"character":46}}},"doc":{"description":"","type":"array"},"value":"","modifiers":2,"scope":"Mockery\\Mock"},{"kind":16,"name":"$_mockery_ignoreMissing","location":{"uriHash":1528578605,"range":{"start":{"line":40,"character":14},"end":{"line":40,"character":45}}},"doc":{"description":"","type":"bool"},"value":"","modifiers":2,"scope":"Mockery\\Mock"},{"kind":16,"name":"$_mockery_deferMissing","location":{"uriHash":1528578605,"range":{"start":{"line":48,"character":14},"end":{"line":48,"character":44}}},"doc":{"description":"","type":"bool"},"value":"","modifiers":2,"scope":"Mockery\\Mock"},{"kind":16,"name":"$_mockery_verified","location":{"uriHash":1528578605,"range":{"start":{"line":55,"character":14},"end":{"line":55,"character":40}}},"doc":{"description":"","type":"bool"},"value":"","modifiers":2,"scope":"Mockery\\Mock"},{"kind":16,"name":"$_mockery_name","location":{"uriHash":1528578605,"range":{"start":{"line":62,"character":14},"end":{"line":62,"character":35}}},"doc":{"description":"","type":"string"},"value":"","modifiers":2,"scope":"Mockery\\Mock"},{"kind":16,"name":"$_mockery_allocatedOrder","location":{"uriHash":1528578605,"range":{"start":{"line":69,"character":14},"end":{"line":69,"character":42}}},"doc":{"description":"","type":"int"},"value":"0","modifiers":2,"scope":"Mockery\\Mock"},{"kind":16,"name":"$_mockery_currentOrder","location":{"uriHash":1528578605,"range":{"start":{"line":76,"character":14},"end":{"line":76,"character":40}}},"doc":{"description":"","type":"int"},"value":"0","modifiers":2,"scope":"Mockery\\Mock"},{"kind":16,"name":"$_mockery_groups","location":{"uriHash":1528578605,"range":{"start":{"line":83,"character":14},"end":{"line":83,"character":40}}},"doc":{"description":"","type":"array"},"value":"","modifiers":2,"scope":"Mockery\\Mock"},{"kind":16,"name":"$_mockery_container","location":{"uriHash":1528578605,"range":{"start":{"line":90,"character":14},"end":{"line":90,"character":40}}},"doc":{"description":"","type":"Mockery\\Container"},"value":"","modifiers":2,"scope":"Mockery\\Mock"},{"kind":16,"name":"$_mockery_partial","location":{"uriHash":1528578605,"range":{"start":{"line":99,"character":14},"end":{"line":99,"character":38}}},"doc":{"description":"","type":"object"},"value":"","modifiers":2,"scope":"Mockery\\Mock"},{"kind":16,"name":"$_mockery_disableExpectationMatching","location":{"uriHash":1528578605,"range":{"start":{"line":108,"character":14},"end":{"line":108,"character":58}}},"doc":{"description":"","type":"bool"},"value":"","modifiers":2,"scope":"Mockery\\Mock"},{"kind":16,"name":"$_mockery_mockableProperties","location":{"uriHash":1528578605,"range":{"start":{"line":116,"character":14},"end":{"line":116,"character":52}}},"doc":{"description":"","type":"array"},"value":"","modifiers":2,"scope":"Mockery\\Mock"},{"kind":16,"name":"$_mockery_mockableMethods","location":{"uriHash":1528578605,"range":{"start":{"line":121,"character":14},"end":{"line":121,"character":49}}},"doc":{"description":"","type":"array"},"value":"","modifiers":2,"scope":"Mockery\\Mock"},{"kind":16,"name":"$_mockery_methods","location":{"uriHash":1528578605,"range":{"start":{"line":128,"character":21},"end":{"line":128,"character":38}}},"doc":{"description":"","type":"Mockery\\ReflectionMethod[]"},"modifiers":34,"scope":"Mockery\\Mock"},{"kind":16,"name":"$_mockery_allowMockingProtectedMethods","location":{"uriHash":1528578605,"range":{"start":{"line":130,"character":14},"end":{"line":130,"character":60}}},"doc":{"description":"","type":"Mockery\\ReflectionMethod[]"},"value":"","modifiers":2,"scope":"Mockery\\Mock"},{"kind":16,"name":"$_mockery_receivedMethodCalls","location":{"uriHash":1528578605,"range":{"start":{"line":132,"character":14},"end":{"line":132,"character":43}}},"doc":{"description":"","type":"Mockery\\ReflectionMethod[]"},"modifiers":2,"scope":"Mockery\\Mock"},{"kind":16,"name":"$_mockery_defaultReturnValue","location":{"uriHash":1528578605,"range":{"start":{"line":138,"character":14},"end":{"line":138,"character":49}}},"doc":{"description":"","type":"mixed"},"value":"","modifiers":2,"scope":"Mockery\\Mock"},{"kind":32,"name":"mockery_init","location":{"uriHash":1528578605,"range":{"start":{"line":148,"character":4},"end":{"line":165,"character":5}}},"doc":{"description":"We want to avoid constructors since class is copied to Generator.php\nfor inclusion on extending class definitions.","type":"void"},"modifiers":1,"type":"","children":[{"kind":128,"name":"$container","location":{"uriHash":1528578605,"range":{"start":{"line":148,"character":33},"end":{"line":148,"character":69}}},"type":"Mockery\\Container","doc":{"description":"","type":"Mockery\\Container"},"value":"null","scope":"mockery_init"},{"kind":128,"name":"$partialObject","location":{"uriHash":1528578605,"range":{"start":{"line":148,"character":71},"end":{"line":148,"character":92}}},"doc":{"description":"","type":"object"},"value":"null","scope":"mockery_init"}],"scope":"Mockery\\Mock"},{"kind":32,"name":"shouldReceive","location":{"uriHash":1528578605,"range":{"start":{"line":173,"character":4},"end":{"line":204,"character":5}}},"doc":{"description":"Set expected method calls","type":"Mockery\\Expectation"},"modifiers":1,"type":"","children":[{"kind":64,"name":"#anon#file:///home/jfvilladiego/proyectos_laravel/cotizaciones_vcb_laravel/vendor/mockery/mockery/library/Mockery/Mock.php#4759","location":{"uriHash":1528578605,"range":{"start":{"line":182,"character":36},"end":{"line":201,"character":13}}},"modifiers":512,"type":"","children":[{"kind":128,"name":"$method","location":{"uriHash":1528578605,"range":{"start":{"line":182,"character":46},"end":{"line":182,"character":53}}},"scope":"#anon#file:///home/jfvilladiego/proyectos_laravel/cotizaciones_vcb_laravel/vendor/mockery/mockery/library/Mockery/Mock.php#4759"}],"scope":"shouldReceive"}],"scope":"Mockery\\Mock"},{"kind":32,"name":"shouldNotReceive","location":{"uriHash":1528578605,"range":{"start":{"line":212,"character":4},"end":{"line":217,"character":5}}},"doc":{"description":"Shortcut method for setting an expectation that a method should not be called.","type":"Mockery\\Expectation"},"modifiers":1,"type":"","children":[],"scope":"Mockery\\Mock"},{"kind":32,"name":"shouldAllowMockingMethod","location":{"uriHash":1528578605,"range":{"start":{"line":224,"character":4},"end":{"line":228,"character":5}}},"doc":{"description":"Allows additional methods to be mocked that do not explicitly exist on mocked class","type":"Mockery\\Mock"},"modifiers":1,"type":"","children":[{"kind":128,"name":"$method","location":{"uriHash":1528578605,"range":{"start":{"line":224,"character":45},"end":{"line":224,"character":52}}},"doc":{"description":"name of the method to be mocked","type":"String"},"scope":"shouldAllowMockingMethod"}],"scope":"Mockery\\Mock"},{"kind":32,"name":"shouldIgnoreMissing","location":{"uriHash":1528578605,"range":{"start":{"line":235,"character":4},"end":{"line":240,"character":5}}},"doc":{"description":"Set mock to ignore unexpected methods and return Undefined class","type":"Mockery\\Mock"},"modifiers":1,"type":"","children":[{"kind":128,"name":"$returnValue","location":{"uriHash":1528578605,"range":{"start":{"line":235,"character":40},"end":{"line":235,"character":59}}},"doc":{"description":"the default return value for calls to missing functions on this mock","type":"mixed"},"value":"null","scope":"shouldIgnoreMissing"}],"scope":"Mockery\\Mock"},{"kind":32,"name":"asUndefined","location":{"uriHash":1528578605,"range":{"start":{"line":242,"character":4},"end":{"line":247,"character":5}}},"modifiers":1,"type":"","children":[],"scope":"Mockery\\Mock"},{"kind":32,"name":"shouldAllowMockingProtectedMethods","location":{"uriHash":1528578605,"range":{"start":{"line":252,"character":4},"end":{"line":256,"character":5}}},"doc":{"description":"","type":"Mockery\\Mock"},"modifiers":1,"type":"","children":[],"scope":"Mockery\\Mock"},{"kind":32,"name":"shouldDeferMissing","location":{"uriHash":1528578605,"range":{"start":{"line":267,"character":4},"end":{"line":271,"character":5}}},"doc":{"description":"Set mock to defer unexpected methods to it's parent\n\nThis is particularly useless for this class, as it doesn't have a parent,\nbut included for completeness","type":"Mockery\\Mock"},"modifiers":1,"type":"","children":[],"scope":"Mockery\\Mock"},{"kind":32,"name":"makePartial","location":{"uriHash":1528578605,"range":{"start":{"line":278,"character":4},"end":{"line":281,"character":5}}},"doc":{"description":"Create an obviously worded alias to shouldDeferMissing()","type":"Mockery\\Mock"},"modifiers":1,"type":"","children":[],"scope":"Mockery\\Mock"},{"kind":32,"name":"shouldExpect","location":{"uriHash":1528578605,"range":{"start":{"line":292,"character":4},"end":{"line":299,"character":5}}},"doc":{"description":"Accepts a closure which is executed with an object recorder which proxies\nto the partial source object. The intent being to record the\ninteractions of a concrete object as a set of expectations on the\ncurrent mock object. The partial may then be passed to a second process\nto see if it fulfils the same (or exact same) contract as the original.","type":""},"modifiers":1,"type":"","children":[{"kind":128,"name":"$closure","location":{"uriHash":1528578605,"range":{"start":{"line":292,"character":33},"end":{"line":292,"character":50}}},"type":"Closure","doc":{"description":"","type":"Mockery\\Closure"},"scope":"shouldExpect"}],"scope":"Mockery\\Mock"},{"kind":32,"name":"byDefault","location":{"uriHash":1528578605,"range":{"start":{"line":308,"character":4},"end":{"line":317,"character":5}}},"doc":{"description":"In the event shouldReceive() accepting one or more methods/returns,\nthis method will switch them from normal expectations to default\nexpectations","type":"Mockery\\Mock"},"modifiers":1,"type":"","children":[],"scope":"Mockery\\Mock"},{"kind":32,"name":"__call","location":{"uriHash":1528578605,"range":{"start":{"line":322,"character":4},"end":{"line":325,"character":5}}},"doc":{"description":"Capture calls to this mock","type":""},"modifiers":1,"type":"","children":[{"kind":128,"name":"$method","location":{"uriHash":1528578605,"range":{"start":{"line":322,"character":27},"end":{"line":322,"character":34}}},"scope":"__call"},{"kind":128,"name":"$args","location":{"uriHash":1528578605,"range":{"start":{"line":322,"character":36},"end":{"line":322,"character":47}}},"type":"array","scope":"__call"}],"scope":"Mockery\\Mock"},{"kind":32,"name":"__callStatic","location":{"uriHash":1528578605,"range":{"start":{"line":327,"character":4},"end":{"line":330,"character":5}}},"modifiers":33,"type":"","children":[{"kind":128,"name":"$method","location":{"uriHash":1528578605,"range":{"start":{"line":327,"character":40},"end":{"line":327,"character":47}}},"scope":"__callStatic"},{"kind":128,"name":"$args","location":{"uriHash":1528578605,"range":{"start":{"line":327,"character":49},"end":{"line":327,"character":60}}},"type":"array","scope":"__callStatic"}],"scope":"Mockery\\Mock"},{"kind":32,"name":"__toString","location":{"uriHash":1528578605,"range":{"start":{"line":335,"character":4},"end":{"line":338,"character":5}}},"doc":{"description":"Forward calls to this magic method to the __call method","type":""},"modifiers":1,"type":"","children":[],"scope":"Mockery\\Mock"},{"kind":32,"name":"mockery_verify","location":{"uriHash":1528578605,"range":{"start":{"line":364,"character":4},"end":{"line":377,"character":5}}},"doc":{"description":"Iterate across all expectation directors and validate each","type":"void"},"modifiers":1,"type":"","children":[],"scope":"Mockery\\Mock"},{"kind":32,"name":"mockery_teardown","location":{"uriHash":1528578605,"range":{"start":{"line":384,"character":4},"end":{"line":386,"character":5}}},"doc":{"description":"Tear down tasks for this mock","type":"void"},"modifiers":1,"type":"","children":[],"scope":"Mockery\\Mock"},{"kind":32,"name":"mockery_allocateOrder","location":{"uriHash":1528578605,"range":{"start":{"line":393,"character":4},"end":{"line":397,"character":5}}},"doc":{"description":"Fetch the next available allocation order number","type":"int"},"modifiers":1,"type":"","children":[],"scope":"Mockery\\Mock"},{"kind":32,"name":"mockery_setGroup","location":{"uriHash":1528578605,"range":{"start":{"line":405,"character":4},"end":{"line":408,"character":5}}},"doc":{"description":"Set ordering for a group","type":""},"modifiers":1,"type":"","children":[{"kind":128,"name":"$group","location":{"uriHash":1528578605,"range":{"start":{"line":405,"character":37},"end":{"line":405,"character":43}}},"doc":{"description":"","type":"mixed"},"scope":"mockery_setGroup"},{"kind":128,"name":"$order","location":{"uriHash":1528578605,"range":{"start":{"line":405,"character":45},"end":{"line":405,"character":51}}},"doc":{"description":"","type":"int"},"scope":"mockery_setGroup"}],"scope":"Mockery\\Mock"},{"kind":32,"name":"mockery_getGroups","location":{"uriHash":1528578605,"range":{"start":{"line":415,"character":4},"end":{"line":418,"character":5}}},"doc":{"description":"Fetch array of ordered groups","type":"array"},"modifiers":1,"type":"","children":[],"scope":"Mockery\\Mock"},{"kind":32,"name":"mockery_setCurrentOrder","location":{"uriHash":1528578605,"range":{"start":{"line":425,"character":4},"end":{"line":429,"character":5}}},"doc":{"description":"Set current ordered number","type":""},"modifiers":1,"type":"","children":[{"kind":128,"name":"$order","location":{"uriHash":1528578605,"range":{"start":{"line":425,"character":44},"end":{"line":425,"character":50}}},"doc":{"description":"","type":"int"},"scope":"mockery_setCurrentOrder"}],"scope":"Mockery\\Mock"},{"kind":32,"name":"mockery_getCurrentOrder","location":{"uriHash":1528578605,"range":{"start":{"line":436,"character":4},"end":{"line":439,"character":5}}},"doc":{"description":"Get current ordered number","type":"int"},"modifiers":1,"type":"","children":[],"scope":"Mockery\\Mock"},{"kind":32,"name":"mockery_validateOrder","location":{"uriHash":1528578605,"range":{"start":{"line":449,"character":4},"end":{"line":464,"character":5}}},"doc":{"description":"Validate the current mock's ordering","type":"void"},"modifiers":1,"type":"","children":[{"kind":128,"name":"$method","location":{"uriHash":1528578605,"range":{"start":{"line":449,"character":42},"end":{"line":449,"character":49}}},"doc":{"description":"","type":"string"},"scope":"mockery_validateOrder"},{"kind":128,"name":"$order","location":{"uriHash":1528578605,"range":{"start":{"line":449,"character":51},"end":{"line":449,"character":57}}},"doc":{"description":"","type":"int"},"scope":"mockery_validateOrder"}],"scope":"Mockery\\Mock"},{"kind":32,"name":"mockery_getExpectationCount","location":{"uriHash":1528578605,"range":{"start":{"line":471,"character":4},"end":{"line":478,"character":5}}},"doc":{"description":"Gets the count of expectations for this mock","type":"int"},"modifiers":1,"type":"","children":[],"scope":"Mockery\\Mock"},{"kind":32,"name":"mockery_setExpectationsFor","location":{"uriHash":1528578605,"range":{"start":{"line":486,"character":4},"end":{"line":489,"character":5}}},"doc":{"description":"Return the expectations director for the given method","type":"Mockery\\ExpectationDirector|null"},"modifiers":1,"type":"","children":[{"kind":128,"name":"$method","location":{"uriHash":1528578605,"range":{"start":{"line":486,"character":47},"end":{"line":486,"character":54}}},"scope":"mockery_setExpectationsFor"},{"kind":128,"name":"$director","location":{"uriHash":1528578605,"range":{"start":{"line":486,"character":56},"end":{"line":486,"character":94}}},"type":"Mockery\\ExpectationDirector","scope":"mockery_setExpectationsFor"}],"scope":"Mockery\\Mock"},{"kind":32,"name":"mockery_getExpectationsFor","location":{"uriHash":1528578605,"range":{"start":{"line":497,"character":4},"end":{"line":502,"character":5}}},"doc":{"description":"Return the expectations director for the given method","type":"Mockery\\ExpectationDirector|null"},"modifiers":1,"type":"","children":[{"kind":128,"name":"$method","location":{"uriHash":1528578605,"range":{"start":{"line":497,"character":47},"end":{"line":497,"character":54}}},"scope":"mockery_getExpectationsFor"}],"scope":"Mockery\\Mock"},{"kind":32,"name":"mockery_findExpectation","location":{"uriHash":1528578605,"range":{"start":{"line":511,"character":4},"end":{"line":519,"character":5}}},"doc":{"description":"Find an expectation matching the given method and arguments","type":"Mockery\\Expectation|null"},"modifiers":1,"type":"","children":[{"kind":128,"name":"$method","location":{"uriHash":1528578605,"range":{"start":{"line":511,"character":44},"end":{"line":511,"character":51}}},"scope":"mockery_findExpectation"},{"kind":128,"name":"$args","location":{"uriHash":1528578605,"range":{"start":{"line":511,"character":53},"end":{"line":511,"character":64}}},"type":"array","scope":"mockery_findExpectation"}],"scope":"Mockery\\Mock"},{"kind":32,"name":"mockery_getContainer","location":{"uriHash":1528578605,"range":{"start":{"line":526,"character":4},"end":{"line":529,"character":5}}},"doc":{"description":"Return the container for this mock","type":"Mockery\\Container"},"modifiers":1,"type":"","children":[],"scope":"Mockery\\Mock"},{"kind":32,"name":"mockery_getName","location":{"uriHash":1528578605,"range":{"start":{"line":536,"character":4},"end":{"line":539,"character":5}}},"doc":{"description":"Return the name for this mock","type":"string"},"modifiers":1,"type":"","children":[],"scope":"Mockery\\Mock"},{"kind":32,"name":"mockery_getMockableProperties","location":{"uriHash":1528578605,"range":{"start":{"line":544,"character":4},"end":{"line":547,"character":5}}},"doc":{"description":"","type":"array"},"modifiers":1,"type":"","children":[],"scope":"Mockery\\Mock"},{"kind":32,"name":"__isset","location":{"uriHash":1528578605,"range":{"start":{"line":549,"character":4},"end":{"line":554,"character":5}}},"modifiers":1,"type":"","children":[{"kind":128,"name":"$name","location":{"uriHash":1528578605,"range":{"start":{"line":549,"character":28},"end":{"line":549,"character":33}}},"scope":"__isset"}],"scope":"Mockery\\Mock"},{"kind":32,"name":"mockery_getExpectations","location":{"uriHash":1528578605,"range":{"start":{"line":556,"character":4},"end":{"line":559,"character":5}}},"modifiers":1,"type":"","children":[],"scope":"Mockery\\Mock"},{"kind":32,"name":"mockery_callSubjectMethod","location":{"uriHash":1528578605,"range":{"start":{"line":570,"character":4},"end":{"line":573,"character":5}}},"doc":{"description":"Calls a parent class method and returns the result. Used in a passthru\nexpectation where a real return value is required while still taking\nadvantage of expectation matching and call count verification.","type":"mixed"},"modifiers":1,"type":"","children":[{"kind":128,"name":"$name","location":{"uriHash":1528578605,"range":{"start":{"line":570,"character":46},"end":{"line":570,"character":51}}},"doc":{"description":"","type":"string"},"scope":"mockery_callSubjectMethod"},{"kind":128,"name":"$args","location":{"uriHash":1528578605,"range":{"start":{"line":570,"character":53},"end":{"line":570,"character":64}}},"type":"array","doc":{"description":"","type":"array"},"scope":"mockery_callSubjectMethod"}],"scope":"Mockery\\Mock"},{"kind":32,"name":"mockery_getMockableMethods","location":{"uriHash":1528578605,"range":{"start":{"line":578,"character":4},"end":{"line":581,"character":5}}},"doc":{"description":"","type":"string[]"},"modifiers":1,"type":"","children":[],"scope":"Mockery\\Mock"},{"kind":32,"name":"mockery_isAnonymous","location":{"uriHash":1528578605,"range":{"start":{"line":586,"character":4},"end":{"line":590,"character":5}}},"doc":{"description":"","type":"bool"},"modifiers":1,"type":"","children":[],"scope":"Mockery\\Mock"},{"kind":32,"name":"__wakeup","location":{"uriHash":1528578605,"range":{"start":{"line":592,"character":4},"end":{"line":600,"character":5}}},"modifiers":1,"type":"","children":[],"scope":"Mockery\\Mock"},{"kind":32,"name":"mockery_getMethod","location":{"uriHash":1528578605,"range":{"start":{"line":602,"character":4},"end":{"line":611,"character":5}}},"modifiers":1,"type":"","children":[{"kind":128,"name":"$name","location":{"uriHash":1528578605,"range":{"start":{"line":602,"character":38},"end":{"line":602,"character":43}}},"scope":"mockery_getMethod"}],"scope":"Mockery\\Mock"},{"kind":32,"name":"shouldHaveReceived","location":{"uriHash":1528578605,"range":{"start":{"line":613,"character":4},"end":{"line":623,"character":5}}},"modifiers":1,"type":"","children":[{"kind":128,"name":"$method","location":{"uriHash":1528578605,"range":{"start":{"line":613,"character":39},"end":{"line":613,"character":46}}},"scope":"shouldHaveReceived"},{"kind":128,"name":"$args","location":{"uriHash":1528578605,"range":{"start":{"line":613,"character":48},"end":{"line":613,"character":60}}},"value":"null","scope":"shouldHaveReceived"}],"scope":"Mockery\\Mock"},{"kind":32,"name":"shouldNotHaveReceived","location":{"uriHash":1528578605,"range":{"start":{"line":625,"character":4},"end":{"line":635,"character":5}}},"modifiers":1,"type":"","children":[{"kind":128,"name":"$method","location":{"uriHash":1528578605,"range":{"start":{"line":625,"character":42},"end":{"line":625,"character":49}}},"scope":"shouldNotHaveReceived"},{"kind":128,"name":"$args","location":{"uriHash":1528578605,"range":{"start":{"line":625,"character":51},"end":{"line":625,"character":63}}},"value":"null","scope":"shouldNotHaveReceived"}],"scope":"Mockery\\Mock"},{"kind":32,"name":"_mockery_handleStaticMethodCall","location":{"uriHash":1528578605,"range":{"start":{"line":637,"character":4},"end":{"line":648,"character":5}}},"modifiers":34,"type":"","children":[{"kind":128,"name":"$method","location":{"uriHash":1528578605,"range":{"start":{"line":637,"character":62},"end":{"line":637,"character":69}}},"scope":"_mockery_handleStaticMethodCall"},{"kind":128,"name":"$args","location":{"uriHash":1528578605,"range":{"start":{"line":637,"character":71},"end":{"line":637,"character":82}}},"type":"array","scope":"_mockery_handleStaticMethodCall"}],"scope":"Mockery\\Mock"},{"kind":32,"name":"_mockery_getReceivedMethodCalls","location":{"uriHash":1528578605,"range":{"start":{"line":650,"character":4},"end":{"line":653,"character":5}}},"modifiers":2,"type":"","children":[],"scope":"Mockery\\Mock"},{"kind":32,"name":"_mockery_handleMethodCall","location":{"uriHash":1528578605,"range":{"start":{"line":655,"character":4},"end":{"line":711,"character":5}}},"modifiers":2,"type":"","children":[{"kind":128,"name":"$method","location":{"uriHash":1528578605,"range":{"start":{"line":655,"character":49},"end":{"line":655,"character":56}}},"scope":"_mockery_handleMethodCall"},{"kind":128,"name":"$args","location":{"uriHash":1528578605,"range":{"start":{"line":655,"character":58},"end":{"line":655,"character":69}}},"type":"array","scope":"_mockery_handleMethodCall"}],"scope":"Mockery\\Mock"},{"kind":32,"name":"mockery_getMethods","location":{"uriHash":1528578605,"range":{"start":{"line":713,"character":4},"end":{"line":741,"character":5}}},"modifiers":2,"type":"","children":[],"scope":"Mockery\\Mock"},{"kind":32,"name":"getNonPublicMethods","location":{"uriHash":1528578605,"range":{"start":{"line":746,"character":4},"end":{"line":756,"character":5}}},"doc":{"description":"","type":"array"},"modifiers":4,"type":"","children":[{"kind":64,"name":"#anon#file:///home/jfvilladiego/proyectos_laravel/cotizaciones_vcb_laravel/vendor/mockery/mockery/library/Mockery/Mock.php#21836","location":{"uriHash":1528578605,"range":{"start":{"line":749,"character":12},"end":{"line":751,"character":13}}},"modifiers":512,"type":"","children":[{"kind":128,"name":"$method","location":{"uriHash":1528578605,"range":{"start":{"line":749,"character":22},"end":{"line":749,"character":29}}},"scope":"#anon#file:///home/jfvilladiego/proyectos_laravel/cotizaciones_vcb_laravel/vendor/mockery/mockery/library/Mockery/Mock.php#21836"}],"scope":"getNonPublicMethods"},{"kind":64,"name":"#anon#file:///home/jfvilladiego/proyectos_laravel/cotizaciones_vcb_laravel/vendor/mockery/mockery/library/Mockery/Mock.php#21969","location":{"uriHash":1528578605,"range":{"start":{"line":752,"character":54},"end":{"line":754,"character":13}}},"modifiers":512,"type":"","children":[{"kind":128,"name":"$method","location":{"uriHash":1528578605,"range":{"start":{"line":752,"character":64},"end":{"line":752,"character":71}}},"scope":"#anon#file:///home/jfvilladiego/proyectos_laravel/cotizaciones_vcb_laravel/vendor/mockery/mockery/library/Mockery/Mock.php#21969"}],"scope":"getNonPublicMethods"}],"scope":"Mockery\\Mock"}],"associated":[{"kind":2,"name":"Mockery\\MockInterface"}],"doc":{"description":"Mockery\n\nLICENSE\n\nThis source file is subject to the new BSD license that is bundled\nwith this package in the file LICENSE.txt.\nIt is also available through the world-wide-web at this URL:\nhttp://github.com/padraic/mockery/blob/master/LICENSE\nIf you did not receive a copy of the license and are unable to\nobtain it through the world-wide-web, please send an email\nto padraic@php.net so we can send you a copy immediately.","type":""},"modifiers":0}]},"_hash":1528578605}]]