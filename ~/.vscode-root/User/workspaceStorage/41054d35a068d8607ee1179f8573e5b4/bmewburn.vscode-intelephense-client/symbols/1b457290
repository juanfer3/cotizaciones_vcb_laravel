[["file:///home/jfvilladiego/proyectos_laravel/cotizaciones_vcb_laravel/vendor/vlucas/phpdotenv/src/Loader.php",{"_uri":"file:///home/jfvilladiego/proyectos_laravel/cotizaciones_vcb_laravel/vendor/vlucas/phpdotenv/src/Loader.php","_root":{"kind":4096,"name":"file:///home/jfvilladiego/proyectos_laravel/cotizaciones_vcb_laravel/vendor/vlucas/phpdotenv/src/Loader.php","location":{"uriHash":457536144,"range":{"start":{"line":0,"character":0},"end":{"line":418,"character":0}}},"children":[{"kind":512,"name":"Dotenv","location":{"uriHash":457536144,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":17}}}},{"kind":1,"name":"InvalidFileException","location":{"uriHash":457536144,"range":{"start":{"line":4,"character":4},"end":{"line":4,"character":41}}},"modifiers":4096,"associated":[{"kind":1,"name":"Dotenv\\Exception\\InvalidFileException"}]},{"kind":1,"name":"InvalidPathException","location":{"uriHash":457536144,"range":{"start":{"line":5,"character":4},"end":{"line":5,"character":41}}},"modifiers":4096,"associated":[{"kind":1,"name":"Dotenv\\Exception\\InvalidPathException"}]},{"kind":1,"name":"Dotenv\\Loader","location":{"uriHash":457536144,"range":{"start":{"line":14,"character":0},"end":{"line":417,"character":1}}},"children":[{"kind":16,"name":"$filePath","location":{"uriHash":457536144,"range":{"start":{"line":21,"character":14},"end":{"line":21,"character":23}}},"doc":{"description":"","type":"string"},"modifiers":2,"scope":"Dotenv\\Loader"},{"kind":16,"name":"$immutable","location":{"uriHash":457536144,"range":{"start":{"line":28,"character":14},"end":{"line":28,"character":24}}},"doc":{"description":"","type":"bool"},"modifiers":2,"scope":"Dotenv\\Loader"},{"kind":16,"name":"$variableNames","location":{"uriHash":457536144,"range":{"start":{"line":35,"character":11},"end":{"line":35,"character":35}}},"doc":{"description":"","type":"array"},"value":"","modifiers":1,"scope":"Dotenv\\Loader"},{"kind":32,"name":"__construct","location":{"uriHash":457536144,"range":{"start":{"line":45,"character":4},"end":{"line":49,"character":5}}},"doc":{"description":"Create a new loader instance.","type":"void"},"modifiers":1,"type":"","children":[{"kind":128,"name":"$filePath","location":{"uriHash":457536144,"range":{"start":{"line":45,"character":32},"end":{"line":45,"character":41}}},"doc":{"description":"","type":"string"},"scope":"__construct"},{"kind":128,"name":"$immutable","location":{"uriHash":457536144,"range":{"start":{"line":45,"character":43},"end":{"line":45,"character":61}}},"doc":{"description":"","type":"bool"},"value":"false","scope":"__construct"}],"scope":"Dotenv\\Loader"},{"kind":32,"name":"setImmutable","location":{"uriHash":457536144,"range":{"start":{"line":57,"character":4},"end":{"line":62,"character":5}}},"doc":{"description":"Set immutable value.","type":"$this"},"modifiers":1,"type":"","children":[{"kind":128,"name":"$immutable","location":{"uriHash":457536144,"range":{"start":{"line":57,"character":33},"end":{"line":57,"character":51}}},"doc":{"description":"","type":"bool"},"value":"false","scope":"setImmutable"}],"scope":"Dotenv\\Loader"},{"kind":32,"name":"getImmutable","location":{"uriHash":457536144,"range":{"start":{"line":69,"character":4},"end":{"line":72,"character":5}}},"doc":{"description":"Get immutable value.","type":"bool"},"modifiers":1,"type":"","children":[],"scope":"Dotenv\\Loader"},{"kind":32,"name":"load","location":{"uriHash":457536144,"range":{"start":{"line":79,"character":4},"end":{"line":92,"character":5}}},"doc":{"description":"Load `.env` file in given directory.","type":"array"},"modifiers":1,"type":"","children":[],"scope":"Dotenv\\Loader"},{"kind":32,"name":"ensureFileIsReadable","location":{"uriHash":457536144,"range":{"start":{"line":101,"character":4},"end":{"line":106,"character":5}}},"doc":{"description":"Ensures the given filePath is readable.","type":"void"},"modifiers":2,"type":"","children":[],"scope":"Dotenv\\Loader"},{"kind":32,"name":"normaliseEnvironmentVariable","location":{"uriHash":457536144,"range":{"start":{"line":122,"character":4},"end":{"line":129,"character":5}}},"doc":{"description":"Normalise the given environment variable.\n\nTakes value as passed in by developer and:\n- ensures we're dealing with a separate name and value, breaking apart the name string if needed,\n- cleaning the value of quotes,\n- cleaning the name of quotes,\n- resolving nested variables.","type":"array"},"modifiers":2,"type":"","children":[{"kind":128,"name":"$name","location":{"uriHash":457536144,"range":{"start":{"line":122,"character":52},"end":{"line":122,"character":57}}},"doc":{"description":"","type":"string"},"scope":"normaliseEnvironmentVariable"},{"kind":128,"name":"$value","location":{"uriHash":457536144,"range":{"start":{"line":122,"character":59},"end":{"line":122,"character":65}}},"doc":{"description":"","type":"string"},"scope":"normaliseEnvironmentVariable"}],"scope":"Dotenv\\Loader"},{"kind":32,"name":"processFilters","location":{"uriHash":457536144,"range":{"start":{"line":141,"character":4},"end":{"line":148,"character":5}}},"doc":{"description":"Process the runtime filters.\n\nCalled from `normaliseEnvironmentVariable` and the `VariableFactory`, passed as a callback in `$this->loadFromFile()`.","type":"array"},"modifiers":1,"type":"","children":[{"kind":128,"name":"$name","location":{"uriHash":457536144,"range":{"start":{"line":141,"character":35},"end":{"line":141,"character":40}}},"doc":{"description":"","type":"string"},"scope":"processFilters"},{"kind":128,"name":"$value","location":{"uriHash":457536144,"range":{"start":{"line":141,"character":42},"end":{"line":141,"character":48}}},"doc":{"description":"","type":"string"},"scope":"processFilters"}],"scope":"Dotenv\\Loader"},{"kind":32,"name":"readLinesFromFile","location":{"uriHash":457536144,"range":{"start":{"line":157,"character":4},"end":{"line":166,"character":5}}},"doc":{"description":"Read lines from the file, auto detecting line endings.","type":"array"},"modifiers":2,"type":"","children":[{"kind":128,"name":"$filePath","location":{"uriHash":457536144,"range":{"start":{"line":157,"character":41},"end":{"line":157,"character":50}}},"doc":{"description":"","type":"string"},"scope":"readLinesFromFile"}],"scope":"Dotenv\\Loader"},{"kind":32,"name":"isComment","location":{"uriHash":457536144,"range":{"start":{"line":175,"character":4},"end":{"line":180,"character":5}}},"doc":{"description":"Determine if the line in the file is a comment, e.g. begins with a #.","type":"bool"},"modifiers":2,"type":"","children":[{"kind":128,"name":"$line","location":{"uriHash":457536144,"range":{"start":{"line":175,"character":33},"end":{"line":175,"character":38}}},"doc":{"description":"","type":"string"},"scope":"isComment"}],"scope":"Dotenv\\Loader"},{"kind":32,"name":"looksLikeSetter","location":{"uriHash":457536144,"range":{"start":{"line":189,"character":4},"end":{"line":192,"character":5}}},"doc":{"description":"Determine if the given line looks like it's setting a variable.","type":"bool"},"modifiers":2,"type":"","children":[{"kind":128,"name":"$line","location":{"uriHash":457536144,"range":{"start":{"line":189,"character":39},"end":{"line":189,"character":44}}},"doc":{"description":"","type":"string"},"scope":"looksLikeSetter"}],"scope":"Dotenv\\Loader"},{"kind":32,"name":"splitCompoundStringIntoParts","location":{"uriHash":457536144,"range":{"start":{"line":205,"character":4},"end":{"line":212,"character":5}}},"doc":{"description":"Split the compound string into parts.\n\nIf the `$name` contains an `=` sign, then we split it into 2 parts, a `name` & `value`\ndisregarding the `$value` passed in.","type":"array"},"modifiers":2,"type":"","children":[{"kind":128,"name":"$name","location":{"uriHash":457536144,"range":{"start":{"line":205,"character":52},"end":{"line":205,"character":57}}},"doc":{"description":"","type":"string"},"scope":"splitCompoundStringIntoParts"},{"kind":128,"name":"$value","location":{"uriHash":457536144,"range":{"start":{"line":205,"character":59},"end":{"line":205,"character":65}}},"doc":{"description":"","type":"string"},"scope":"splitCompoundStringIntoParts"}],"scope":"Dotenv\\Loader"},{"kind":32,"name":"sanitiseVariableValue","location":{"uriHash":457536144,"range":{"start":{"line":224,"character":4},"end":{"line":267,"character":5}}},"doc":{"description":"Strips quotes from the environment variable value.","type":"array"},"modifiers":2,"type":"","children":[{"kind":128,"name":"$name","location":{"uriHash":457536144,"range":{"start":{"line":224,"character":45},"end":{"line":224,"character":50}}},"doc":{"description":"","type":"string"},"scope":"sanitiseVariableValue"},{"kind":128,"name":"$value","location":{"uriHash":457536144,"range":{"start":{"line":224,"character":52},"end":{"line":224,"character":58}}},"doc":{"description":"","type":"string"},"scope":"sanitiseVariableValue"}],"scope":"Dotenv\\Loader"},{"kind":32,"name":"resolveNestedVariables","location":{"uriHash":457536144,"range":{"start":{"line":279,"character":4},"end":{"line":298,"character":5}}},"doc":{"description":"Resolve the nested variables.\n\nLook for ${varname} patterns in the variable value and replace with an\nexisting environment variable.","type":"mixed"},"modifiers":2,"type":"","children":[{"kind":128,"name":"$value","location":{"uriHash":457536144,"range":{"start":{"line":279,"character":46},"end":{"line":279,"character":52}}},"doc":{"description":"","type":"string"},"scope":"resolveNestedVariables"},{"kind":64,"name":"#anon#file:///home/jfvilladiego/proyectos_laravel/cotizaciones_vcb_laravel/vendor/vlucas/phpdotenv/src/Loader.php#7799","location":{"uriHash":457536144,"range":{"start":{"line":285,"character":16},"end":{"line":292,"character":17}}},"modifiers":512,"type":"","children":[{"kind":128,"name":"$matchedPatterns","location":{"uriHash":457536144,"range":{"start":{"line":285,"character":26},"end":{"line":285,"character":42}}},"scope":"#anon#file:///home/jfvilladiego/proyectos_laravel/cotizaciones_vcb_laravel/vendor/vlucas/phpdotenv/src/Loader.php#7799"}],"scope":"resolveNestedVariables"}],"scope":"Dotenv\\Loader"},{"kind":32,"name":"sanitiseVariableName","location":{"uriHash":457536144,"range":{"start":{"line":308,"character":4},"end":{"line":313,"character":5}}},"doc":{"description":"Strips quotes and the optional leading \"export \" from the environment variable name.","type":"array"},"modifiers":2,"type":"","children":[{"kind":128,"name":"$name","location":{"uriHash":457536144,"range":{"start":{"line":308,"character":44},"end":{"line":308,"character":49}}},"doc":{"description":"","type":"string"},"scope":"sanitiseVariableName"},{"kind":128,"name":"$value","location":{"uriHash":457536144,"range":{"start":{"line":308,"character":51},"end":{"line":308,"character":57}}},"doc":{"description":"","type":"string"},"scope":"sanitiseVariableName"}],"scope":"Dotenv\\Loader"},{"kind":32,"name":"beginsWithAQuote","location":{"uriHash":457536144,"range":{"start":{"line":322,"character":4},"end":{"line":325,"character":5}}},"doc":{"description":"Determine if the given string begins with a quote.","type":"bool"},"modifiers":2,"type":"","children":[{"kind":128,"name":"$value","location":{"uriHash":457536144,"range":{"start":{"line":322,"character":40},"end":{"line":322,"character":46}}},"doc":{"description":"","type":"string"},"scope":"beginsWithAQuote"}],"scope":"Dotenv\\Loader"},{"kind":32,"name":"getEnvironmentVariable","location":{"uriHash":457536144,"range":{"start":{"line":334,"character":4},"end":{"line":345,"character":5}}},"doc":{"description":"Search the different places for environment variables and return first value found.","type":"string|null"},"modifiers":1,"type":"","children":[{"kind":128,"name":"$name","location":{"uriHash":457536144,"range":{"start":{"line":334,"character":43},"end":{"line":334,"character":48}}},"doc":{"description":"","type":"string"},"scope":"getEnvironmentVariable"}],"scope":"Dotenv\\Loader"},{"kind":32,"name":"setEnvironmentVariable","location":{"uriHash":457536144,"range":{"start":{"line":362,"character":4},"end":{"line":386,"character":5}}},"doc":{"description":"Set an environment variable.\n\nThis is done using:\n- putenv,\n- $_ENV,\n- $_SERVER.\n\nThe environment variable value is stripped of single and double quotes.","type":"void"},"modifiers":1,"type":"","children":[{"kind":128,"name":"$name","location":{"uriHash":457536144,"range":{"start":{"line":362,"character":43},"end":{"line":362,"character":48}}},"doc":{"description":"","type":"string"},"scope":"setEnvironmentVariable"},{"kind":128,"name":"$value","location":{"uriHash":457536144,"range":{"start":{"line":362,"character":50},"end":{"line":362,"character":63}}},"doc":{"description":"","type":"string|null"},"value":"null","scope":"setEnvironmentVariable"}],"scope":"Dotenv\\Loader"},{"kind":32,"name":"clearEnvironmentVariable","location":{"uriHash":457536144,"range":{"start":{"line":404,"character":4},"end":{"line":416,"character":5}}},"doc":{"description":"Clear an environment variable.\n\nThis is not (currently) used by Dotenv but is provided as a utility\nmethod for 3rd party code.\n\nThis is done using:\n- putenv,\n- unset($_ENV, $_SERVER).","type":"void"},"modifiers":1,"type":"","children":[{"kind":128,"name":"$name","location":{"uriHash":457536144,"range":{"start":{"line":404,"character":45},"end":{"line":404,"character":50}}},"doc":{"description":"","type":"string"},"scope":"clearEnvironmentVariable"}],"scope":"Dotenv\\Loader"}],"associated":[],"doc":{"description":"This is the loaded class.\n\nIt's responsible for loading variables by reading a file from disk and:\n- stripping comments beginning with a `#`,\n- parsing lines that look shell variable setters, e.g `export key = value`, `key=\"value\"`.","type":""},"modifiers":0}]},"_hash":457536144}]]