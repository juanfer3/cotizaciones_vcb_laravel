[["file:///home/jfvilladiego/proyectos_laravel/cotizaciones_vcb_laravel/vendor/symfony/http-foundation/Session/Storage/SessionStorageInterface.php",{"_uri":"file:///home/jfvilladiego/proyectos_laravel/cotizaciones_vcb_laravel/vendor/symfony/http-foundation/Session/Storage/SessionStorageInterface.php","_root":{"kind":4096,"name":"file:///home/jfvilladiego/proyectos_laravel/cotizaciones_vcb_laravel/vendor/symfony/http-foundation/Session/Storage/SessionStorageInterface.php","location":{"uriHash":558157474,"range":{"start":{"line":0,"character":0},"end":{"line":137,"character":0}}},"children":[{"kind":512,"name":"Symfony\\Component\\HttpFoundation\\Session\\Storage","location":{"uriHash":558157474,"range":{"start":{"line":11,"character":0},"end":{"line":11,"character":59}}}},{"kind":1,"name":"SessionBagInterface","location":{"uriHash":558157474,"range":{"start":{"line":13,"character":4},"end":{"line":13,"character":64}}},"modifiers":4096,"associated":[{"kind":1,"name":"Symfony\\Component\\HttpFoundation\\Session\\SessionBagInterface"}]},{"kind":2,"name":"Symfony\\Component\\HttpFoundation\\Session\\Storage\\SessionStorageInterface","location":{"uriHash":558157474,"range":{"start":{"line":21,"character":0},"end":{"line":136,"character":1}}},"doc":{"description":"StorageInterface.","type":""},"children":[{"kind":32,"name":"start","location":{"uriHash":558157474,"range":{"start":{"line":30,"character":4},"end":{"line":30,"character":28}}},"doc":{"description":"Starts the session.","type":"bool"},"modifiers":1,"type":"","children":[],"scope":"Symfony\\Component\\HttpFoundation\\Session\\Storage\\SessionStorageInterface"},{"kind":32,"name":"isStarted","location":{"uriHash":558157474,"range":{"start":{"line":37,"character":4},"end":{"line":37,"character":32}}},"doc":{"description":"Checks if the session is started.","type":"bool"},"modifiers":1,"type":"","children":[],"scope":"Symfony\\Component\\HttpFoundation\\Session\\Storage\\SessionStorageInterface"},{"kind":32,"name":"getId","location":{"uriHash":558157474,"range":{"start":{"line":44,"character":4},"end":{"line":44,"character":28}}},"doc":{"description":"Returns the session ID.","type":"string"},"modifiers":1,"type":"","children":[],"scope":"Symfony\\Component\\HttpFoundation\\Session\\Storage\\SessionStorageInterface"},{"kind":32,"name":"setId","location":{"uriHash":558157474,"range":{"start":{"line":51,"character":4},"end":{"line":51,"character":31}}},"doc":{"description":"Sets the session ID.","type":""},"modifiers":1,"type":"","children":[{"kind":128,"name":"$id","location":{"uriHash":558157474,"range":{"start":{"line":51,"character":26},"end":{"line":51,"character":29}}},"doc":{"description":"","type":"string"},"scope":"setId"}],"scope":"Symfony\\Component\\HttpFoundation\\Session\\Storage\\SessionStorageInterface"},{"kind":32,"name":"getName","location":{"uriHash":558157474,"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":30}}},"doc":{"description":"Returns the session name.","type":"mixed"},"modifiers":1,"type":"","children":[],"scope":"Symfony\\Component\\HttpFoundation\\Session\\Storage\\SessionStorageInterface"},{"kind":32,"name":"setName","location":{"uriHash":558157474,"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":35}}},"doc":{"description":"Sets the session name.","type":""},"modifiers":1,"type":"","children":[{"kind":128,"name":"$name","location":{"uriHash":558157474,"range":{"start":{"line":65,"character":28},"end":{"line":65,"character":33}}},"doc":{"description":"","type":"string"},"scope":"setName"}],"scope":"Symfony\\Component\\HttpFoundation\\Session\\Storage\\SessionStorageInterface"},{"kind":32,"name":"regenerate","location":{"uriHash":558157474,"range":{"start":{"line":96,"character":4},"end":{"line":96,"character":67}}},"doc":{"description":"Regenerates id that represents this storage.\n\nThis method must invoke session_regenerate_id($destroy) unless\nthis interface is used for a storage object designed for unit\nor functional testing where a real PHP session would interfere\nwith testing.\n\nNote regenerate+destroy should not clear the session data in memory\nonly delete the session data from persistent storage.\n\nCare: When regenerating the session ID no locking is involved in PHP's\nsession design. See https://bugs.php.net/bug.php?id=61470 for a discussion.\nSo you must make sure the regenerated session is saved BEFORE sending the\nheaders with the new ID. Symfony's HttpKernel offers a listener for this.\nSee Symfony\\Component\\HttpKernel\\EventListener\\SaveSessionListener.\nOtherwise session data could get lost again for concurrent requests with the\nnew ID. One result could be that you get logged out after just logging in.","type":"bool"},"modifiers":1,"type":"","children":[{"kind":128,"name":"$destroy","location":{"uriHash":558157474,"range":{"start":{"line":96,"character":31},"end":{"line":96,"character":47}}},"doc":{"description":"Destroy session when regenerating?","type":"bool"},"value":"false","scope":"regenerate"},{"kind":128,"name":"$lifetime","location":{"uriHash":558157474,"range":{"start":{"line":96,"character":49},"end":{"line":96,"character":65}}},"doc":{"description":"Sets the cookie lifetime for the session cookie. A null value\nwill leave the system settings unchanged, 0 sets the cookie\nto expire with browser session. Time is in seconds, and is\nnot a Unix timestamp.\n","type":"int"},"value":"null","scope":"regenerate"}],"scope":"Symfony\\Component\\HttpFoundation\\Session\\Storage\\SessionStorageInterface"},{"kind":32,"name":"save","location":{"uriHash":558157474,"range":{"start":{"line":109,"character":4},"end":{"line":109,"character":27}}},"doc":{"description":"Force the session to be saved and closed.\n\nThis method must invoke session_write_close() unless this interface is\nused for a storage object design for unit or functional testing where\na real PHP session would interfere with testing, in which case\nit should actually persist the session data if required.","type":""},"modifiers":1,"type":"","children":[],"scope":"Symfony\\Component\\HttpFoundation\\Session\\Storage\\SessionStorageInterface"},{"kind":32,"name":"clear","location":{"uriHash":558157474,"range":{"start":{"line":114,"character":4},"end":{"line":114,"character":28}}},"doc":{"description":"Clear all session data in memory.","type":""},"modifiers":1,"type":"","children":[],"scope":"Symfony\\Component\\HttpFoundation\\Session\\Storage\\SessionStorageInterface"},{"kind":32,"name":"getBag","location":{"uriHash":558157474,"range":{"start":{"line":125,"character":4},"end":{"line":125,"character":34}}},"doc":{"description":"Gets a SessionBagInterface by name.","type":"Symfony\\Component\\HttpFoundation\\Session\\SessionBagInterface"},"modifiers":1,"type":"","children":[{"kind":128,"name":"$name","location":{"uriHash":558157474,"range":{"start":{"line":125,"character":27},"end":{"line":125,"character":32}}},"doc":{"description":"","type":"string"},"scope":"getBag"}],"scope":"Symfony\\Component\\HttpFoundation\\Session\\Storage\\SessionStorageInterface"},{"kind":32,"name":"registerBag","location":{"uriHash":558157474,"range":{"start":{"line":130,"character":4},"end":{"line":130,"character":58}}},"doc":{"description":"Registers a SessionBagInterface for use.","type":""},"modifiers":1,"type":"","children":[{"kind":128,"name":"$bag","location":{"uriHash":558157474,"range":{"start":{"line":130,"character":32},"end":{"line":130,"character":56}}},"type":"Symfony\\Component\\HttpFoundation\\Session\\SessionBagInterface","scope":"registerBag"}],"scope":"Symfony\\Component\\HttpFoundation\\Session\\Storage\\SessionStorageInterface"},{"kind":32,"name":"getMetadataBag","location":{"uriHash":558157474,"range":{"start":{"line":135,"character":4},"end":{"line":135,"character":37}}},"doc":{"description":"","type":"Symfony\\Component\\HttpFoundation\\Session\\Storage\\MetadataBag"},"modifiers":1,"type":"","children":[],"scope":"Symfony\\Component\\HttpFoundation\\Session\\Storage\\SessionStorageInterface"}],"associated":[]}]},"_hash":558157474}]]