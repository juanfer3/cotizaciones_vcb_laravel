[["file:///home/jfvilladiego/proyectos_laravel/cotizaciones_vcb_laravel/vendor/symfony/routing/Generator/ConfigurableRequirementsInterface.php",{"_uri":"file:///home/jfvilladiego/proyectos_laravel/cotizaciones_vcb_laravel/vendor/symfony/routing/Generator/ConfigurableRequirementsInterface.php","_root":{"kind":4096,"name":"file:///home/jfvilladiego/proyectos_laravel/cotizaciones_vcb_laravel/vendor/symfony/routing/Generator/ConfigurableRequirementsInterface.php","location":{"uriHash":455347875,"range":{"start":{"line":0,"character":0},"end":{"line":55,"character":0}}},"children":[{"kind":512,"name":"Symfony\\Component\\Routing\\Generator","location":{"uriHash":455347875,"range":{"start":{"line":11,"character":0},"end":{"line":11,"character":46}}}},{"kind":2,"name":"Symfony\\Component\\Routing\\Generator\\ConfigurableRequirementsInterface","location":{"uriHash":455347875,"range":{"start":{"line":37,"character":0},"end":{"line":54,"character":1}}},"doc":{"description":"ConfigurableRequirementsInterface must be implemented by URL generators that\ncan be configured whether an exception should be generated when the parameters\ndo not match the requirements. It is also possible to disable the requirements\ncheck for URL generation completely.\n\nThe possible configurations and use-cases:\n- setStrictRequirements(true): Throw an exception for mismatching requirements. This\nis mostly useful in development environment.\n- setStrictRequirements(false): Don't throw an exception but return null as URL for\nmismatching requirements and log the problem. Useful when you cannot control all\nparams because they come from third party libs but don't want to have a 404 in\nproduction environment. It should log the mismatch so one can review it.\n- setStrictRequirements(null): Return the URL with the given parameters without\nchecking the requirements at all. When generating a URL you should either trust\nyour params or you validated them beforehand because otherwise it would break your\nlink anyway. So in production environment you should know that params always pass\nthe requirements. Thus this option allows to disable the check on URL generation for\nperformance reasons (saving a preg_match for each requirement every time a URL is\ngenerated).","type":""},"children":[{"kind":32,"name":"setStrictRequirements","location":{"uriHash":455347875,"range":{"start":{"line":45,"character":4},"end":{"line":45,"character":52}}},"doc":{"description":"Enables or disables the exception on incorrect parameters.\nPassing null will deactivate the requirements check completely.","type":""},"modifiers":1,"type":"","children":[{"kind":128,"name":"$enabled","location":{"uriHash":455347875,"range":{"start":{"line":45,"character":42},"end":{"line":45,"character":50}}},"doc":{"description":"","type":"bool|null"},"scope":"setStrictRequirements"}],"scope":"Symfony\\Component\\Routing\\Generator\\ConfigurableRequirementsInterface"},{"kind":32,"name":"isStrictRequirements","location":{"uriHash":455347875,"range":{"start":{"line":53,"character":4},"end":{"line":53,"character":43}}},"doc":{"description":"Returns whether to throw an exception on incorrect parameters.\nNull means the requirements check is deactivated completely.","type":"bool|null"},"modifiers":1,"type":"","children":[],"scope":"Symfony\\Component\\Routing\\Generator\\ConfigurableRequirementsInterface"}],"associated":[]}]},"_hash":455347875}]]