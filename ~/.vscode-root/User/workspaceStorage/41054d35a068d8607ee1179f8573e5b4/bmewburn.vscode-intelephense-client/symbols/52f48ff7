[["file:///home/jfvilladiego/proyectos_laravel/cotizaciones_vcb_laravel/vendor/phpunit/phpunit/src/Util/XML.php",{"_uri":"file:///home/jfvilladiego/proyectos_laravel/cotizaciones_vcb_laravel/vendor/phpunit/phpunit/src/Util/XML.php","_root":{"kind":4096,"name":"file:///home/jfvilladiego/proyectos_laravel/cotizaciones_vcb_laravel/vendor/phpunit/phpunit/src/Util/XML.php","location":{"uriHash":1391759351,"range":{"start":{"line":0,"character":0},"end":{"line":246,"character":0}}},"children":[{"kind":1,"name":"PHPUnit_Util_XML","location":{"uriHash":1391759351,"range":{"start":{"line":13,"character":0},"end":{"line":245,"character":1}}},"children":[{"kind":32,"name":"load","location":{"uriHash":1391759351,"range":{"start":{"line":37,"character":4},"end":{"line":108,"character":5}}},"doc":{"description":"Load an $actual document into a DOMDocument.  This is called\nfrom the selector assertions.\n\nIf $actual is already a DOMDocument, it is returned with\nno changes.  Otherwise, $actual is loaded into a new DOMDocument\nas either HTML or XML, depending on the value of $isHtml. If $isHtml is\nfalse and $xinclude is true, xinclude is performed on the loaded\nDOMDocument.\n\nNote: prior to PHPUnit 3.3.0, this method loaded a file and\nnot a string as it currently does.  To load a file into a\nDOMDocument, use loadFile() instead.","type":"DOMDocument"},"modifiers":33,"type":"","children":[{"kind":128,"name":"$actual","location":{"uriHash":1391759351,"range":{"start":{"line":37,"character":32},"end":{"line":37,"character":39}}},"doc":{"description":"","type":"string|DOMDocument"},"scope":"load"},{"kind":128,"name":"$isHtml","location":{"uriHash":1391759351,"range":{"start":{"line":37,"character":41},"end":{"line":37,"character":56}}},"doc":{"description":"","type":"bool"},"value":"false","scope":"load"},{"kind":128,"name":"$filename","location":{"uriHash":1391759351,"range":{"start":{"line":37,"character":58},"end":{"line":37,"character":72}}},"doc":{"description":"","type":"string"},"value":"''","scope":"load"},{"kind":128,"name":"$xinclude","location":{"uriHash":1391759351,"range":{"start":{"line":37,"character":74},"end":{"line":37,"character":91}}},"doc":{"description":"","type":"bool"},"value":"false","scope":"load"},{"kind":128,"name":"$strict","location":{"uriHash":1391759351,"range":{"start":{"line":37,"character":93},"end":{"line":37,"character":108}}},"doc":{"description":"","type":"bool"},"value":"false","scope":"load"}],"scope":"PHPUnit_Util_XML"},{"kind":32,"name":"loadFile","location":{"uriHash":1391759351,"range":{"start":{"line":120,"character":4},"end":{"line":136,"character":5}}},"doc":{"description":"Loads an XML (or HTML) file into a DOMDocument object.","type":"DOMDocument"},"modifiers":33,"type":"","children":[{"kind":128,"name":"$filename","location":{"uriHash":1391759351,"range":{"start":{"line":120,"character":36},"end":{"line":120,"character":45}}},"doc":{"description":"","type":"string"},"scope":"loadFile"},{"kind":128,"name":"$isHtml","location":{"uriHash":1391759351,"range":{"start":{"line":120,"character":47},"end":{"line":120,"character":62}}},"doc":{"description":"","type":"bool"},"value":"false","scope":"loadFile"},{"kind":128,"name":"$xinclude","location":{"uriHash":1391759351,"range":{"start":{"line":120,"character":64},"end":{"line":120,"character":81}}},"doc":{"description":"","type":"bool"},"value":"false","scope":"loadFile"},{"kind":128,"name":"$strict","location":{"uriHash":1391759351,"range":{"start":{"line":120,"character":83},"end":{"line":120,"character":98}}},"doc":{"description":"","type":"bool"},"value":"false","scope":"loadFile"}],"scope":"PHPUnit_Util_XML"},{"kind":32,"name":"removeCharacterDataNodes","location":{"uriHash":1391759351,"range":{"start":{"line":141,"character":4},"end":{"line":150,"character":5}}},"doc":{"description":"","type":""},"modifiers":33,"type":"","children":[{"kind":128,"name":"$node","location":{"uriHash":1391759351,"range":{"start":{"line":141,"character":52},"end":{"line":141,"character":65}}},"type":"DOMNode","doc":{"description":"","type":"DOMNode"},"scope":"removeCharacterDataNodes"}],"scope":"PHPUnit_Util_XML"},{"kind":32,"name":"prepareString","location":{"uriHash":1391759351,"range":{"start":{"line":162,"character":4},"end":{"line":173,"character":5}}},"doc":{"description":"Escapes a string for the use in XML documents\nAny Unicode character is allowed, excluding the surrogate blocks, FFFE,\nand FFFF (not even as character reference).\nSee http://www.w3.org/TR/xml/#charsets","type":"string"},"modifiers":33,"type":"","children":[{"kind":128,"name":"$string","location":{"uriHash":1391759351,"range":{"start":{"line":162,"character":41},"end":{"line":162,"character":48}}},"doc":{"description":"","type":"string"},"scope":"prepareString"}],"scope":"PHPUnit_Util_XML"},{"kind":32,"name":"xmlToVariable","location":{"uriHash":1391759351,"range":{"start":{"line":182,"character":4},"end":{"line":244,"character":5}}},"doc":{"description":"\"Convert\" a DOMElement object into a PHP variable.","type":"mixed"},"modifiers":33,"type":"","children":[{"kind":128,"name":"$element","location":{"uriHash":1391759351,"range":{"start":{"line":182,"character":41},"end":{"line":182,"character":60}}},"type":"DOMElement","doc":{"description":"","type":"DOMElement"},"scope":"xmlToVariable"}],"scope":"PHPUnit_Util_XML"}],"associated":[],"doc":{"description":"XML helpers.","type":""},"modifiers":0}]},"_hash":1391759351}]]