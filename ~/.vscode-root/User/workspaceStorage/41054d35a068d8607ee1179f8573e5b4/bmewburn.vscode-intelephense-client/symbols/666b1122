[["file:///home/jfvilladiego/proyectos_laravel/cotizaciones_vcb_laravel/vendor/psr/log/Psr/Log/Test/LoggerInterfaceTest.php",{"_uri":"file:///home/jfvilladiego/proyectos_laravel/cotizaciones_vcb_laravel/vendor/psr/log/Psr/Log/Test/LoggerInterfaceTest.php","_root":{"kind":4096,"name":"file:///home/jfvilladiego/proyectos_laravel/cotizaciones_vcb_laravel/vendor/psr/log/Psr/Log/Test/LoggerInterfaceTest.php","location":{"uriHash":1718292770,"range":{"start":{"line":0,"character":0},"end":{"line":140,"character":0}}},"children":[{"kind":512,"name":"Psr\\Log\\Test","location":{"uriHash":1718292770,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":23}}}},{"kind":1,"name":"LoggerInterface","location":{"uriHash":1718292770,"range":{"start":{"line":4,"character":4},"end":{"line":4,"character":27}}},"modifiers":4096,"associated":[{"kind":1,"name":"Psr\\Log\\LoggerInterface"}]},{"kind":1,"name":"LogLevel","location":{"uriHash":1718292770,"range":{"start":{"line":5,"character":4},"end":{"line":5,"character":20}}},"modifiers":4096,"associated":[{"kind":1,"name":"Psr\\Log\\LogLevel"}]},{"kind":1,"name":"Psr\\Log\\Test\\LoggerInterfaceTest","location":{"uriHash":1718292770,"range":{"start":{"line":13,"character":0},"end":{"line":132,"character":1}}},"children":[{"kind":32,"name":"getLogger","location":{"uriHash":1718292770,"range":{"start":{"line":18,"character":4},"end":{"line":18,"character":41}}},"doc":{"description":"","type":"Psr\\Log\\LoggerInterface"},"modifiers":17,"type":"","children":[],"scope":"Psr\\Log\\Test\\LoggerInterfaceTest"},{"kind":32,"name":"getLogs","location":{"uriHash":1718292770,"range":{"start":{"line":29,"character":4},"end":{"line":29,"character":39}}},"doc":{"description":"This must return the log messages in order.\n\nThe simple formatting of the messages is: \"<LOG LEVEL> <MESSAGE>\".\n\nExample ->error('Foo') would yield \"error Foo\".","type":"string[]"},"modifiers":17,"type":"","children":[],"scope":"Psr\\Log\\Test\\LoggerInterfaceTest"},{"kind":32,"name":"testImplements","location":{"uriHash":1718292770,"range":{"start":{"line":31,"character":4},"end":{"line":34,"character":5}}},"modifiers":1,"type":"","children":[],"scope":"Psr\\Log\\Test\\LoggerInterfaceTest"},{"kind":32,"name":"testLogsAtAllLevels","location":{"uriHash":1718292770,"range":{"start":{"line":39,"character":4},"end":{"line":50,"character":5}}},"modifiers":1,"type":"","children":[{"kind":128,"name":"$level","location":{"uriHash":1718292770,"range":{"start":{"line":39,"character":40},"end":{"line":39,"character":46}}},"scope":"testLogsAtAllLevels"},{"kind":128,"name":"$message","location":{"uriHash":1718292770,"range":{"start":{"line":39,"character":48},"end":{"line":39,"character":56}}},"scope":"testLogsAtAllLevels"}],"scope":"Psr\\Log\\Test\\LoggerInterfaceTest"},{"kind":32,"name":"provideLevelsAndMessages","location":{"uriHash":1718292770,"range":{"start":{"line":52,"character":4},"end":{"line":64,"character":5}}},"modifiers":1,"type":"","children":[],"scope":"Psr\\Log\\Test\\LoggerInterfaceTest"},{"kind":32,"name":"testThrowsOnInvalidLevel","location":{"uriHash":1718292770,"range":{"start":{"line":69,"character":4},"end":{"line":73,"character":5}}},"modifiers":1,"type":"","children":[],"scope":"Psr\\Log\\Test\\LoggerInterfaceTest"},{"kind":32,"name":"testContextReplacement","location":{"uriHash":1718292770,"range":{"start":{"line":75,"character":4},"end":{"line":82,"character":5}}},"modifiers":1,"type":"","children":[],"scope":"Psr\\Log\\Test\\LoggerInterfaceTest"},{"kind":32,"name":"testObjectCastToString","location":{"uriHash":1718292770,"range":{"start":{"line":84,"character":4},"end":{"line":99,"character":5}}},"modifiers":1,"type":"","children":[],"scope":"Psr\\Log\\Test\\LoggerInterfaceTest"},{"kind":32,"name":"testContextCanContainAnything","location":{"uriHash":1718292770,"range":{"start":{"line":101,"character":4},"end":{"line":118,"character":5}}},"modifiers":1,"type":"","children":[],"scope":"Psr\\Log\\Test\\LoggerInterfaceTest"},{"kind":32,"name":"testContextExceptionKeyCanBeExceptionOrOtherValues","location":{"uriHash":1718292770,"range":{"start":{"line":120,"character":4},"end":{"line":131,"character":5}}},"modifiers":1,"type":"","children":[],"scope":"Psr\\Log\\Test\\LoggerInterfaceTest"}],"associated":[{"kind":1,"name":"PHPUnit_Framework_TestCase"}],"doc":{"description":"Provides a base test class for ensuring compliance with the LoggerInterface.\n\nImplementors can extend the class and implement abstract methods to run this\nas part of their test suite.","type":""},"modifiers":16},{"kind":1,"name":"Psr\\Log\\Test\\DummyTest","location":{"uriHash":1718292770,"range":{"start":{"line":134,"character":0},"end":{"line":139,"character":1}}},"children":[{"kind":32,"name":"__toString","location":{"uriHash":1718292770,"range":{"start":{"line":136,"character":4},"end":{"line":138,"character":5}}},"modifiers":1,"type":"","children":[],"scope":"Psr\\Log\\Test\\DummyTest"}],"associated":[],"modifiers":0}]},"_hash":1718292770}]]