[["file:///home/jfvilladiego/proyectos_laravel/cotizaciones_vcb_laravel/vendor/mockery/mockery/library/Mockery/Expectation.php",{"_uri":"file:///home/jfvilladiego/proyectos_laravel/cotizaciones_vcb_laravel/vendor/mockery/mockery/library/Mockery/Expectation.php","_root":{"kind":4096,"name":"file:///home/jfvilladiego/proyectos_laravel/cotizaciones_vcb_laravel/vendor/mockery/mockery/library/Mockery/Expectation.php","location":{"uriHash":1057306407,"range":{"start":{"line":0,"character":0},"end":{"line":758,"character":0}}},"children":[{"kind":512,"name":"Mockery","location":{"uriHash":1057306407,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":18}}}},{"kind":1,"name":"Mockery\\Expectation","location":{"uriHash":1057306407,"range":{"start":{"line":22,"character":0},"end":{"line":757,"character":1}}},"children":[{"kind":16,"name":"$_mock","location":{"uriHash":1057306407,"range":{"start":{"line":30,"character":14},"end":{"line":30,"character":27}}},"doc":{"description":"","type":"object"},"value":"","modifiers":2,"scope":"Mockery\\Expectation"},{"kind":16,"name":"$_name","location":{"uriHash":1057306407,"range":{"start":{"line":37,"character":14},"end":{"line":37,"character":27}}},"doc":{"description":"","type":"string"},"value":"","modifiers":2,"scope":"Mockery\\Expectation"},{"kind":16,"name":"$_expectedArgs","location":{"uriHash":1057306407,"range":{"start":{"line":44,"character":14},"end":{"line":44,"character":38}}},"doc":{"description":"","type":"array"},"value":"","modifiers":2,"scope":"Mockery\\Expectation"},{"kind":16,"name":"$_countValidators","location":{"uriHash":1057306407,"range":{"start":{"line":51,"character":14},"end":{"line":51,"character":41}}},"doc":{"description":"","type":"array"},"value":"","modifiers":2,"scope":"Mockery\\Expectation"},{"kind":16,"name":"$_countValidatorClass","location":{"uriHash":1057306407,"range":{"start":{"line":58,"character":14},"end":{"line":58,"character":68}}},"doc":{"description":"","type":"string"},"value":"'Mockery\\CountValidator\\Exact'","modifiers":2,"scope":"Mockery\\Expectation"},{"kind":16,"name":"$_actualCount","location":{"uriHash":1057306407,"range":{"start":{"line":65,"character":14},"end":{"line":65,"character":31}}},"doc":{"description":"","type":"int"},"value":"0","modifiers":2,"scope":"Mockery\\Expectation"},{"kind":16,"name":"$_returnValue","location":{"uriHash":1057306407,"range":{"start":{"line":72,"character":14},"end":{"line":72,"character":34}}},"doc":{"description":"","type":"mixed"},"value":"","modifiers":2,"scope":"Mockery\\Expectation"},{"kind":16,"name":"$_returnQueue","location":{"uriHash":1057306407,"range":{"start":{"line":79,"character":14},"end":{"line":79,"character":37}}},"doc":{"description":"","type":"array"},"value":"","modifiers":2,"scope":"Mockery\\Expectation"},{"kind":16,"name":"$_closureQueue","location":{"uriHash":1057306407,"range":{"start":{"line":87,"character":14},"end":{"line":87,"character":38}}},"doc":{"description":"","type":"array"},"value":"","modifiers":2,"scope":"Mockery\\Expectation"},{"kind":16,"name":"$_setQueue","location":{"uriHash":1057306407,"range":{"start":{"line":94,"character":14},"end":{"line":94,"character":34}}},"doc":{"description":"","type":"array"},"value":"","modifiers":2,"scope":"Mockery\\Expectation"},{"kind":16,"name":"$_orderNumber","location":{"uriHash":1057306407,"range":{"start":{"line":101,"character":14},"end":{"line":101,"character":34}}},"doc":{"description":"","type":"int"},"value":"","modifiers":2,"scope":"Mockery\\Expectation"},{"kind":16,"name":"$_globalOrderNumber","location":{"uriHash":1057306407,"range":{"start":{"line":108,"character":14},"end":{"line":108,"character":40}}},"doc":{"description":"","type":"int"},"value":"","modifiers":2,"scope":"Mockery\\Expectation"},{"kind":16,"name":"$_throw","location":{"uriHash":1057306407,"range":{"start":{"line":115,"character":14},"end":{"line":115,"character":29}}},"doc":{"description":"","type":"bool"},"value":"","modifiers":2,"scope":"Mockery\\Expectation"},{"kind":16,"name":"$_globally","location":{"uriHash":1057306407,"range":{"start":{"line":123,"character":14},"end":{"line":123,"character":32}}},"doc":{"description":"","type":"bool"},"value":"","modifiers":2,"scope":"Mockery\\Expectation"},{"kind":16,"name":"$_noArgsExpectation","location":{"uriHash":1057306407,"range":{"start":{"line":130,"character":14},"end":{"line":130,"character":41}}},"doc":{"description":"","type":"bool"},"value":"","modifiers":2,"scope":"Mockery\\Expectation"},{"kind":16,"name":"$_passthru","location":{"uriHash":1057306407,"range":{"start":{"line":138,"character":14},"end":{"line":138,"character":32}}},"doc":{"description":"","type":"bool"},"value":"","modifiers":2,"scope":"Mockery\\Expectation"},{"kind":32,"name":"__construct","location":{"uriHash":1057306407,"range":{"start":{"line":146,"character":4},"end":{"line":150,"character":5}}},"doc":{"description":"Constructor","type":""},"modifiers":1,"type":"","children":[{"kind":128,"name":"$mock","location":{"uriHash":1057306407,"range":{"start":{"line":146,"character":32},"end":{"line":146,"character":60}}},"type":"Mockery\\MockInterface","doc":{"description":"","type":"Mockery\\MockInterface"},"scope":"__construct"},{"kind":128,"name":"$name","location":{"uriHash":1057306407,"range":{"start":{"line":146,"character":62},"end":{"line":146,"character":67}}},"doc":{"description":"","type":"string"},"scope":"__construct"}],"scope":"Mockery\\Expectation"},{"kind":32,"name":"__toString","location":{"uriHash":1057306407,"range":{"start":{"line":159,"character":4},"end":{"line":162,"character":5}}},"doc":{"description":"Return a string with the method name and arguments formatted","type":"string"},"modifiers":1,"type":"","children":[],"scope":"Mockery\\Expectation"},{"kind":32,"name":"verifyCall","location":{"uriHash":1057306407,"range":{"start":{"line":171,"character":4},"end":{"line":184,"character":5}}},"doc":{"description":"Verify the current call, i.e. that the given arguments match those\nof this expectation","type":"mixed"},"modifiers":1,"type":"","children":[{"kind":128,"name":"$args","location":{"uriHash":1057306407,"range":{"start":{"line":171,"character":31},"end":{"line":171,"character":42}}},"type":"array","doc":{"description":"","type":"array"},"scope":"verifyCall"}],"scope":"Mockery\\Expectation"},{"kind":32,"name":"_setValues","location":{"uriHash":1057306407,"range":{"start":{"line":192,"character":4},"end":{"line":200,"character":5}}},"doc":{"description":"Sets public properties with queued values to the mock object","type":"mixed"},"modifiers":2,"type":"","children":[],"scope":"Mockery\\Expectation"},{"kind":32,"name":"_getReturnValue","location":{"uriHash":1057306407,"range":{"start":{"line":208,"character":4},"end":{"line":246,"character":5}}},"doc":{"description":"Fetch the return value for the matching args","type":"mixed"},"modifiers":2,"type":"","children":[{"kind":128,"name":"$args","location":{"uriHash":1057306407,"range":{"start":{"line":208,"character":39},"end":{"line":208,"character":50}}},"type":"array","doc":{"description":"","type":"array"},"scope":"_getReturnValue"},{"kind":64,"name":"#anon#file:///home/jfvilladiego/proyectos_laravel/cotizaciones_vcb_laravel/vendor/mockery/mockery/library/Mockery/Expectation.php#5992","location":{"uriHash":1057306407,"range":{"start":{"line":234,"character":27},"end":{"line":234,"character":41}}},"modifiers":512,"type":"","children":[],"scope":"_getReturnValue"}],"scope":"Mockery\\Expectation"},{"kind":32,"name":"isEligible","location":{"uriHash":1057306407,"range":{"start":{"line":253,"character":4},"end":{"line":261,"character":5}}},"doc":{"description":"Checks if this expectation is eligible for additional calls","type":"bool"},"modifiers":1,"type":"","children":[],"scope":"Mockery\\Expectation"},{"kind":32,"name":"isCallCountConstrained","location":{"uriHash":1057306407,"range":{"start":{"line":268,"character":4},"end":{"line":271,"character":5}}},"doc":{"description":"Check if there is a constraint on call count","type":"bool"},"modifiers":1,"type":"","children":[],"scope":"Mockery\\Expectation"},{"kind":32,"name":"validateOrder","location":{"uriHash":1057306407,"range":{"start":{"line":278,"character":4},"end":{"line":287,"character":5}}},"doc":{"description":"Verify call order","type":"void"},"modifiers":1,"type":"","children":[],"scope":"Mockery\\Expectation"},{"kind":32,"name":"verify","location":{"uriHash":1057306407,"range":{"start":{"line":294,"character":4},"end":{"line":299,"character":5}}},"doc":{"description":"Verify this expectation","type":"bool"},"modifiers":1,"type":"","children":[],"scope":"Mockery\\Expectation"},{"kind":32,"name":"matchArgs","location":{"uriHash":1057306407,"range":{"start":{"line":307,"character":4},"end":{"line":324,"character":5}}},"doc":{"description":"Check if passed arguments match an argument expectation","type":"bool"},"modifiers":1,"type":"","children":[{"kind":128,"name":"$args","location":{"uriHash":1057306407,"range":{"start":{"line":307,"character":30},"end":{"line":307,"character":41}}},"type":"array","doc":{"description":"","type":"array"},"scope":"matchArgs"}],"scope":"Mockery\\Expectation"},{"kind":32,"name":"_matchArg","location":{"uriHash":1057306407,"range":{"start":{"line":332,"character":4},"end":{"line":363,"character":5}}},"doc":{"description":"Check if passed argument matches an argument expectation","type":"bool"},"modifiers":2,"type":"","children":[{"kind":128,"name":"$expected","location":{"uriHash":1057306407,"range":{"start":{"line":332,"character":33},"end":{"line":332,"character":42}}},"scope":"_matchArg"},{"kind":128,"name":"$actual","location":{"uriHash":1057306407,"range":{"start":{"line":332,"character":44},"end":{"line":332,"character":52}}},"scope":"_matchArg"},{"kind":64,"name":"#anon#file:///home/jfvilladiego/proyectos_laravel/cotizaciones_vcb_laravel/vendor/mockery/mockery/library/Mockery/Expectation.php#8879","location":{"uriHash":1057306407,"range":{"start":{"line":342,"character":30},"end":{"line":342,"character":44}}},"modifiers":512,"type":"","children":[],"scope":"_matchArg"}],"scope":"Mockery\\Expectation"},{"kind":32,"name":"with","location":{"uriHash":1057306407,"range":{"start":{"line":371,"character":4},"end":{"line":374,"character":5}}},"doc":{"description":"Expected argument setter for the expectation","type":"Mockery\\Expectation"},"modifiers":1,"type":"","children":[],"scope":"Mockery\\Expectation"},{"kind":32,"name":"withArgs","location":{"uriHash":1057306407,"range":{"start":{"line":382,"character":4},"end":{"line":390,"character":5}}},"doc":{"description":"Expected arguments for the expectation passed as an array","type":"Mockery\\Expectation"},"modifiers":1,"type":"","children":[{"kind":128,"name":"$args","location":{"uriHash":1057306407,"range":{"start":{"line":382,"character":29},"end":{"line":382,"character":40}}},"type":"array","doc":{"description":"","type":"array"},"scope":"withArgs"}],"scope":"Mockery\\Expectation"},{"kind":32,"name":"withNoArgs","location":{"uriHash":1057306407,"range":{"start":{"line":397,"character":4},"end":{"line":402,"character":5}}},"doc":{"description":"Set with() as no arguments expected","type":"Mockery\\Expectation"},"modifiers":1,"type":"","children":[],"scope":"Mockery\\Expectation"},{"kind":32,"name":"withAnyArgs","location":{"uriHash":1057306407,"range":{"start":{"line":409,"character":4},"end":{"line":413,"character":5}}},"doc":{"description":"Set expectation that any arguments are acceptable","type":"Mockery\\Expectation"},"modifiers":1,"type":"","children":[],"scope":"Mockery\\Expectation"},{"kind":32,"name":"andReturn","location":{"uriHash":1057306407,"range":{"start":{"line":421,"character":4},"end":{"line":425,"character":5}}},"doc":{"description":"Set a return value, or sequential queue of return values","type":"Mockery\\Expectation"},"modifiers":1,"type":"","children":[],"scope":"Mockery\\Expectation"},{"kind":32,"name":"andReturnSelf","location":{"uriHash":1057306407,"range":{"start":{"line":432,"character":4},"end":{"line":435,"character":5}}},"doc":{"description":"Return this mock, like a fluent interface","type":"Mockery\\Expectation"},"modifiers":1,"type":"","children":[],"scope":"Mockery\\Expectation"},{"kind":32,"name":"andReturnValues","location":{"uriHash":1057306407,"range":{"start":{"line":443,"character":4},"end":{"line":447,"character":5}}},"doc":{"description":"Set a sequential queue of return values with an array","type":"Mockery\\Expectation"},"modifiers":1,"type":"","children":[{"kind":128,"name":"$values","location":{"uriHash":1057306407,"range":{"start":{"line":443,"character":36},"end":{"line":443,"character":49}}},"type":"array","doc":{"description":"","type":"array"},"scope":"andReturnValues"}],"scope":"Mockery\\Expectation"},{"kind":32,"name":"andReturnUsing","location":{"uriHash":1057306407,"range":{"start":{"line":457,"character":4},"end":{"line":461,"character":5}}},"doc":{"description":"Set a closure or sequence of closures with which to generate return\nvalues. The arguments passed to the expected method are passed to the\nclosures as parameters.","type":"Mockery\\Expectation"},"modifiers":1,"type":"","children":[],"scope":"Mockery\\Expectation"},{"kind":32,"name":"andReturnUndefined","location":{"uriHash":1057306407,"range":{"start":{"line":468,"character":4},"end":{"line":472,"character":5}}},"doc":{"description":"Return a self-returning black hole object.","type":"Mockery\\Expectation"},"modifiers":1,"type":"","children":[],"scope":"Mockery\\Expectation"},{"kind":32,"name":"andReturnNull","location":{"uriHash":1057306407,"range":{"start":{"line":479,"character":4},"end":{"line":482,"character":5}}},"doc":{"description":"Return null. This is merely a language construct for Mock describing.","type":"Mockery\\Expectation"},"modifiers":1,"type":"","children":[],"scope":"Mockery\\Expectation"},{"kind":32,"name":"andThrow","location":{"uriHash":1057306407,"range":{"start":{"line":493,"character":4},"end":{"line":502,"character":5}}},"doc":{"description":"Set Exception class and arguments to that class to be thrown","type":"Mockery\\Expectation"},"modifiers":1,"type":"","children":[{"kind":128,"name":"$exception","location":{"uriHash":1057306407,"range":{"start":{"line":493,"character":29},"end":{"line":493,"character":39}}},"doc":{"description":"","type":"string"},"scope":"andThrow"},{"kind":128,"name":"$message","location":{"uriHash":1057306407,"range":{"start":{"line":493,"character":41},"end":{"line":493,"character":54}}},"doc":{"description":"","type":"string"},"value":"''","scope":"andThrow"},{"kind":128,"name":"$code","location":{"uriHash":1057306407,"range":{"start":{"line":493,"character":56},"end":{"line":493,"character":65}}},"doc":{"description":"","type":"int"},"value":"0","scope":"andThrow"},{"kind":128,"name":"$previous","location":{"uriHash":1057306407,"range":{"start":{"line":493,"character":67},"end":{"line":493,"character":94}}},"type":"Exception","doc":{"description":"","type":"Mockery\\Exception"},"value":"null","scope":"andThrow"}],"scope":"Mockery\\Expectation"},{"kind":32,"name":"andThrowExceptions","location":{"uriHash":1057306407,"range":{"start":{"line":510,"character":4},"end":{"line":519,"character":5}}},"doc":{"description":"Set Exception classes to be thrown","type":"Mockery\\Expectation"},"modifiers":1,"type":"","children":[{"kind":128,"name":"$exceptions","location":{"uriHash":1057306407,"range":{"start":{"line":510,"character":39},"end":{"line":510,"character":56}}},"type":"array","doc":{"description":"","type":"array"},"scope":"andThrowExceptions"}],"scope":"Mockery\\Expectation"},{"kind":32,"name":"andSet","location":{"uriHash":1057306407,"range":{"start":{"line":528,"character":4},"end":{"line":534,"character":5}}},"doc":{"description":"Register values to be set to a public property each time this expectation occurs","type":"Mockery\\Expectation"},"modifiers":1,"type":"","children":[{"kind":128,"name":"$name","location":{"uriHash":1057306407,"range":{"start":{"line":528,"character":27},"end":{"line":528,"character":32}}},"doc":{"description":"","type":"string"},"scope":"andSet"},{"kind":128,"name":"$value","location":{"uriHash":1057306407,"range":{"start":{"line":528,"character":34},"end":{"line":528,"character":40}}},"doc":{"description":"","type":"mixed"},"scope":"andSet"}],"scope":"Mockery\\Expectation"},{"kind":32,"name":"set","location":{"uriHash":1057306407,"range":{"start":{"line":544,"character":4},"end":{"line":547,"character":5}}},"doc":{"description":"Alias to andSet(). Allows the natural English construct\n- set('foo', 'bar')->andReturn('bar')","type":"Mockery\\Expectation"},"modifiers":1,"type":"","children":[{"kind":128,"name":"$name","location":{"uriHash":1057306407,"range":{"start":{"line":544,"character":24},"end":{"line":544,"character":29}}},"doc":{"description":"","type":"string"},"scope":"set"},{"kind":128,"name":"$value","location":{"uriHash":1057306407,"range":{"start":{"line":544,"character":31},"end":{"line":544,"character":37}}},"doc":{"description":"","type":"mixed"},"scope":"set"}],"scope":"Mockery\\Expectation"},{"kind":32,"name":"zeroOrMoreTimes","location":{"uriHash":1057306407,"range":{"start":{"line":554,"character":4},"end":{"line":557,"character":5}}},"doc":{"description":"Indicates this expectation should occur zero or more times","type":"Mockery\\Expectation"},"modifiers":1,"type":"","children":[],"scope":"Mockery\\Expectation"},{"kind":32,"name":"times","location":{"uriHash":1057306407,"range":{"start":{"line":565,"character":4},"end":{"line":573,"character":5}}},"doc":{"description":"Indicates the number of times this expectation should occur","type":"Mockery\\Expectation"},"modifiers":1,"type":"","children":[{"kind":128,"name":"$limit","location":{"uriHash":1057306407,"range":{"start":{"line":565,"character":26},"end":{"line":565,"character":39}}},"doc":{"description":"","type":"int"},"value":"null","scope":"times"}],"scope":"Mockery\\Expectation"},{"kind":32,"name":"never","location":{"uriHash":1057306407,"range":{"start":{"line":580,"character":4},"end":{"line":583,"character":5}}},"doc":{"description":"Indicates that this expectation is never expected to be called","type":"Mockery\\Expectation"},"modifiers":1,"type":"","children":[],"scope":"Mockery\\Expectation"},{"kind":32,"name":"once","location":{"uriHash":1057306407,"range":{"start":{"line":590,"character":4},"end":{"line":593,"character":5}}},"doc":{"description":"Indicates that this expectation is expected exactly once","type":"Mockery\\Expectation"},"modifiers":1,"type":"","children":[],"scope":"Mockery\\Expectation"},{"kind":32,"name":"twice","location":{"uriHash":1057306407,"range":{"start":{"line":600,"character":4},"end":{"line":603,"character":5}}},"doc":{"description":"Indicates that this expectation is expected exactly twice","type":"Mockery\\Expectation"},"modifiers":1,"type":"","children":[],"scope":"Mockery\\Expectation"},{"kind":32,"name":"atLeast","location":{"uriHash":1057306407,"range":{"start":{"line":610,"character":4},"end":{"line":614,"character":5}}},"doc":{"description":"Sets next count validator to the AtLeast instance","type":"Mockery\\Expectation"},"modifiers":1,"type":"","children":[],"scope":"Mockery\\Expectation"},{"kind":32,"name":"atMost","location":{"uriHash":1057306407,"range":{"start":{"line":621,"character":4},"end":{"line":625,"character":5}}},"doc":{"description":"Sets next count validator to the AtMost instance","type":"Mockery\\Expectation"},"modifiers":1,"type":"","children":[],"scope":"Mockery\\Expectation"},{"kind":32,"name":"between","location":{"uriHash":1057306407,"range":{"start":{"line":633,"character":4},"end":{"line":636,"character":5}}},"doc":{"description":"Shorthand for setting minimum and maximum constraints on call counts","type":""},"modifiers":1,"type":"","children":[{"kind":128,"name":"$minimum","location":{"uriHash":1057306407,"range":{"start":{"line":633,"character":28},"end":{"line":633,"character":36}}},"doc":{"description":"","type":"int"},"scope":"between"},{"kind":128,"name":"$maximum","location":{"uriHash":1057306407,"range":{"start":{"line":633,"character":38},"end":{"line":633,"character":46}}},"doc":{"description":"","type":"int"},"scope":"between"}],"scope":"Mockery\\Expectation"},{"kind":32,"name":"ordered","location":{"uriHash":1057306407,"range":{"start":{"line":644,"character":4},"end":{"line":653,"character":5}}},"doc":{"description":"Indicates that this expectation must be called in a specific given order","type":"Mockery\\Expectation"},"modifiers":1,"type":"","children":[{"kind":128,"name":"$group","location":{"uriHash":1057306407,"range":{"start":{"line":644,"character":28},"end":{"line":644,"character":41}}},"doc":{"description":"Name of the ordered group","type":"string"},"value":"null","scope":"ordered"}],"scope":"Mockery\\Expectation"},{"kind":32,"name":"globally","location":{"uriHash":1057306407,"range":{"start":{"line":660,"character":4},"end":{"line":664,"character":5}}},"doc":{"description":"Indicates call order should apply globally","type":"Mockery\\Expectation"},"modifiers":1,"type":"","children":[],"scope":"Mockery\\Expectation"},{"kind":32,"name":"_defineOrdered","location":{"uriHash":1057306407,"range":{"start":{"line":673,"character":4},"end":{"line":685,"character":5}}},"doc":{"description":"Setup the ordering tracking on the mock or mock container","type":"int"},"modifiers":2,"type":"","children":[{"kind":128,"name":"$group","location":{"uriHash":1057306407,"range":{"start":{"line":673,"character":38},"end":{"line":673,"character":44}}},"doc":{"description":"","type":"string"},"scope":"_defineOrdered"},{"kind":128,"name":"$ordering","location":{"uriHash":1057306407,"range":{"start":{"line":673,"character":46},"end":{"line":673,"character":55}}},"doc":{"description":"","type":"object"},"scope":"_defineOrdered"}],"scope":"Mockery\\Expectation"},{"kind":32,"name":"getOrderNumber","location":{"uriHash":1057306407,"range":{"start":{"line":692,"character":4},"end":{"line":695,"character":5}}},"doc":{"description":"Return order number","type":"int"},"modifiers":1,"type":"","children":[],"scope":"Mockery\\Expectation"},{"kind":32,"name":"byDefault","location":{"uriHash":1057306407,"range":{"start":{"line":702,"character":4},"end":{"line":709,"character":5}}},"doc":{"description":"Mark this expectation as being a default","type":"Mockery\\Expectation"},"modifiers":1,"type":"","children":[],"scope":"Mockery\\Expectation"},{"kind":32,"name":"getMock","location":{"uriHash":1057306407,"range":{"start":{"line":716,"character":4},"end":{"line":719,"character":5}}},"doc":{"description":"Return the parent mock of the expectation","type":"Mockery\\MockInterface"},"modifiers":1,"type":"","children":[],"scope":"Mockery\\Expectation"},{"kind":32,"name":"passthru","location":{"uriHash":1057306407,"range":{"start":{"line":727,"character":4},"end":{"line":737,"character":5}}},"doc":{"description":"Flag this expectation as calling the original class method with the\nany provided arguments instead of using a return value queue.","type":"Mockery\\Expectation"},"modifiers":1,"type":"","children":[],"scope":"Mockery\\Expectation"},{"kind":32,"name":"__clone","location":{"uriHash":1057306407,"range":{"start":{"line":743,"character":4},"end":{"line":751,"character":5}}},"doc":{"description":"Cloning logic","type":""},"modifiers":1,"type":"","children":[],"scope":"Mockery\\Expectation"},{"kind":32,"name":"getName","location":{"uriHash":1057306407,"range":{"start":{"line":753,"character":4},"end":{"line":756,"character":5}}},"modifiers":1,"type":"","children":[],"scope":"Mockery\\Expectation"}],"associated":[{"kind":2,"name":"Mockery\\ExpectationInterface"}],"doc":{"description":"Mockery\n\nLICENSE\n\nThis source file is subject to the new BSD license that is bundled\nwith this package in the file LICENSE.txt.\nIt is also available through the world-wide-web at this URL:\nhttp://github.com/padraic/mockery/blob/master/LICENSE\nIf you did not receive a copy of the license and are unable to\nobtain it through the world-wide-web, please send an email\nto padraic@php.net so we can send you a copy immediately.","type":""},"modifiers":0}]},"_hash":1057306407}]]