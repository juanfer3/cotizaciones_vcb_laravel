[["file:///home/jfvilladiego/proyectos_laravel/cotizaciones_vcb_laravel/vendor/paragonie/random_compat/lib/cast_to_int.php",{"_uri":"file:///home/jfvilladiego/proyectos_laravel/cotizaciones_vcb_laravel/vendor/paragonie/random_compat/lib/cast_to_int.php","_root":{"kind":4096,"name":"file:///home/jfvilladiego/proyectos_laravel/cotizaciones_vcb_laravel/vendor/paragonie/random_compat/lib/cast_to_int.php","location":{"uriHash":876480695,"range":{"start":{"line":0,"character":0},"end":{"line":77,"character":0}}},"children":[{"kind":64,"name":"RandomCompat_intval","location":{"uriHash":876480695,"range":{"start":{"line":47,"character":4},"end":{"line":75,"character":5}}},"doc":{"description":"Cast to an integer if we can, safely.\n\nIf you pass it a float in the range (~PHP_INT_MAX, PHP_INT_MAX)\n(non-inclusive), it will sanely cast it to an int. If you it's equal to\n~PHP_INT_MAX or PHP_INT_MAX, we let it fail as not an integer. Floats \nlose precision, so the <= and => operators might accidentally let a float\nthrough.","type":"float|int"},"type":"","children":[{"kind":128,"name":"$number","location":{"uriHash":876480695,"range":{"start":{"line":47,"character":33},"end":{"line":47,"character":40}}},"doc":{"description":"The number we want to convert to an int","type":"int|float"},"scope":"RandomCompat_intval"},{"kind":128,"name":"$fail_open","location":{"uriHash":876480695,"range":{"start":{"line":47,"character":42},"end":{"line":47,"character":60}}},"doc":{"description":"Set to true to not throw an exception\n","type":"bool"},"value":"false","scope":"RandomCompat_intval"}]}]},"_hash":876480695}]]